,id,code,label
816,816,,1
971,971,,1
465,465,"FileAST FuncDef Decl FuncDecl main int Compound Decl n int Decl i int Decl j int Decl a int FuncCall scanf ExprList ""%d"" & n While -- n Compound FuncCall scanf ExprList ""%d"" & a For = i 1 <= i a ++ i Compound For = j 1 < j a ++ j FuncCall printf ExprList ""%d "" * i j FuncCall printf ExprList ""%d\n"" * i a End End Return 0 End",0
799,799,,1
499,499,"FileAST FuncDef Decl FuncDecl main int Compound Decl f1 int Decl f2 int Decl fn int Decl i int Decl n int While == FuncCall scanf ExprList ""%d"" & n 1 Compound ExprList = f1 7 = f2 11 For = i 2 <= i n ++ i Compound = fn % + f1 f2 3 = f1 % f2 3 = f2 % fn 3 End If == % fn 3 0 Compound FuncCall printf ExprList ""yes\n"" End Compound FuncCall printf ExprList ""no\n"" End End End",0
487,487,"FileAST FuncDef Decl FuncDecl main int Compound Decl a int Decl b int Decl i int Decl j int Decl k int Decl ArrayDecl d int 100 Decl ArrayDecl e int 100 Decl ArrayDecl f int 100 FuncCall scanf ExprList ""%d %d"" & a & b If || == a 1 == b 1 FuncCall printf ExprList ""1"" Compound If != a b Compound = ArrayRef d 0 a = ArrayRef e 0 b For = i 0 < i 100 ++ i Compound = ArrayRef d + i 1 / ArrayRef d i 2 End FuncCall printf ExprList ""%d"" ArrayRef f 0 End FuncCall printf ExprList ""%d"" a End Return 0 End",0
744,744,,1
824,824,,1
747,747,,1
439,439,"FileAST FuncDef Decl FuncDecl main int Compound Decl year int Decl month int Decl day int Decl sum int Decl i int Decl ArrayDecl a int 12 FuncCall scanf ExprList ""%d %d %d"" & year & month & day = sum 0 = ArrayRef a 0 = ArrayRef a 2 = ArrayRef a 4 = ArrayRef a 6 = ArrayRef a 7 = ArrayRef a 9 = ArrayRef a 11 31 = ArrayRef a 3 = ArrayRef a 5 = ArrayRef a 8 = ArrayRef a 10 30 If || != % year 4 0 && == % year 100 0 != % year 400 0 = ArrayRef a 1 28 = ArrayRef a 1 29 For = i 0 < i - month 1 ++ i Compound += sum ArrayRef a i End = sum + sum day FuncCall printf ExprList ""%d\n"" sum Return 0 End",0
106,106,"FileAST FuncDef Decl FuncDecl main int Compound Decl n int Decl m int Decl k int Decl sum int 0 Decl ArrayDecl a int 15 Decl ArrayDecl b int 15 FuncCall scanf ExprList ""%d%d%d"" & n & m & k For DeclList Decl i int 0 < i k ++ i += sum FuncCall abs ExprList - ArrayRef a i ArrayRef b i FuncCall printf ExprList ""%d\n"" / sum 2 End",0
628,628,"FileAST Typedef LL long FuncDef Decl FuncDecl main int Compound Decl y int Decl m int Decl d int While ~ FuncCall scanf ExprList ""%d/%d/%d"" & y & m & d Compound Decl k int Decl leap int Decl ArrayDecl ArrayDecl day int 13 2 InitList InitList 0 31 28 31 30 31 30 31 31 30 31 30 31 InitList 0 31 29 31 30 31 30 31 31 30 31 30 31 = leap || && == % y 4 0 != % y 100 0 == % y 400 0 For = k 1 < k m ++ k Compound = d + d ArrayRef ArrayRef day leap k End FuncCall printf ExprList ""%d\n"" d End Return 0 End",1
750,750,,1
576,576,FileAST FuncDef Decl FuncDecl main int Compound Decl x int Decl y int Decl i int Decl l2x int Decl l2y int Decl ArrayDecl xx int 10 Decl ArrayDecl yy int 10 >> >> cin x y = l2x / FuncCall log ExprList x FuncCall log ExprList 2 = l2y / FuncCall log ExprList y FuncCall log ExprList 2 If == x 8 = l2x 3 If == y 8 = l2y 3 = ArrayRef xx l2x - x FuncCall pow ExprList 2 l2x = ArrayRef yy l2y - y FuncCall pow ExprList 2 l2y For = i - l2y 1 >= i 0 -- i = ArrayRef yy i / ArrayRef yy + i 1 2 = i l2x If > l2x l2y = i l2y Return 0 End,1
37,37,FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl n int Decl m int Decl i int Decl j int Decl s int Decl ArrayDecl ArrayDecl a int 100 100 Decl PtrDecl ArrayDecl p int 100 Decl ArrayDecl sum int 100 InitList 0 >> cin k For = s 0 < s k ++ s Compound = p a >> >> cin n m For = i 0 < i n ++ i Compound For = j 0 < j m ++ j >> cin * + * + p i j End For = i 0 < i n ++ i Compound If || == i 0 == i - n 1 For = j 0 < j m ++ j = ArrayRef sum s + ArrayRef sum s * + * + p i j = ArrayRef sum s + + ArrayRef sum s * * + p i * - + * + p i m 1 End End Return 0 End,0
934,934,,1
1036,1036,,1
660,660,"FileAST Decl MAXN int 10005 Decl ArrayDecl f int maxn Decl ArrayDecl c int 505 Decl ArrayDecl w int 505 FuncDef Decl FuncDecl ParamList Decl a int Decl b int min int Compound Return TernaryOp < a b a b End FuncDef Decl FuncDecl main int Compound Decl t int Decl E int Decl F int Decl n int FuncCall scanf ExprList ""%d"" & t While -- t Compound FuncCall scanf ExprList ""%d%d"" & e & f FuncCall scanf ExprList ""%d"" & n For DeclList Decl i int 0 < i maxn ++ i = ArrayRef f i 1e9 = ArrayRef f e 0 If == ArrayRef f f 1e9 FuncCall printf ExprList ""This is impossible.\n"" FuncCall printf ExprList ""The minimum amount of money in the piggy-bank is %d.\n"" ArrayRef f f End End",1
571,571,"FileAST Decl ArrayDecl a int 50 Decl FuncDecl init void FuncDef Decl FuncDecl main int Compound Decl n int Decl t int FuncCall scanf ExprList ""%d"" & n FuncCall init For DeclList Decl i int 1 <= i n ++ i Compound FuncCall scanf ExprList ""%d"" & t FuncCall printf ExprList ""Scenario #%d:\n"" i FuncCall printf ExprList ""%d\n\n"" ArrayRef a t End End",1
198,198,FileAST Decl ArrayDecl ArrayDecl dp long 1001 1001 FuncDef Decl FuncDecl main int Compound Decl n int Decl m int >> >> cin n m = ArrayRef ArrayRef dp 1 0 1 For DeclList Decl i int 1 <= i n ++ i Compound For DeclList Decl j int 1 <= j m ++ j Compound = ArrayRef ArrayRef dp i j % + ArrayRef ArrayRef dp - i 1 j ArrayRef ArrayRef dp i - j 1 1000000007 End End << << cout ArrayRef ArrayRef dp n m endl Return 0 End,0
980,980,,1
55,55,"FileAST FuncDef Decl FuncDecl main int Compound Decl y int Decl m int Decl d int Decl i int Decl x int 0 Decl ArrayDecl mon int 12 InitList 31 28 31 30 31 30 31 31 30 31 30 31 FuncCall scanf ExprList ""%d%d%d"" & y & m & d If && == % y 4 0 != % y 100 0 Compound = ArrayRef mon 1 29 End If == % y 400 0 Compound = ArrayRef mon 1 29 End = ArrayRef mon 1 28 For = i 0 < i - m 1 ++ i Compound += x ArrayRef mon i End = x + x d FuncCall printf ExprList ""%d\n"" x Return 0 End",0
921,921,,1
325,325,FileAST FuncDef Decl FuncDecl main int Compound Decl year int Decl month int Decl day int Decl total int 0 Decl i int Decl ArrayDecl ArrayDecl mon int 13 2 InitList InitList 0 31 28 31 30 31 30 31 31 30 31 30 31 InitList 0 31 29 31 30 31 30 31 31 30 31 30 31 >> >> >> cin year month day If || && == % year 4 0 != % year 100 0 == % year 400 0 Compound += total day End Compound For = i 1 < i month ++ i += total ArrayRef ArrayRef mon 0 i += total day End << << cout total endl Return 0 End,0
730,730,"FileAST FuncDef Decl FuncDecl main int Compound Decl k int FuncCall scanf ExprList ""%d"" & k Decl ArrayDecl m int 100 Decl ArrayDecl n int 100 Decl ArrayDecl he int 100 Decl ArrayDecl ArrayDecl a int 100 100 Decl i int Decl j int Decl l int Decl total int For = i 0 < i - k 1 ++ i Compound FuncCall printf ExprList ""%d\n"" ArrayRef he i End FuncCall printf ExprList ""%d"" ArrayRef he - k 1 Return 0 End",1
402,402,FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl m int Decl n int Decl ArrayDecl ArrayDecl a int 100 100 Decl i int Decl j int Decl sum int >> cin k While > k 0 Compound >> >> cin m n If && > m 1 > n 1 Compound = sum 0 = sum - - - - sum * * a * - + * - + a m 1 n 1 * - + * a n 1 * * - + a m 1 << << cout sum endl End If && == m 1 == n 1 Compound = sum 0 = sum * * a << << cout sum endl End If && == m 1 > n 1 Compound = sum 0 << << cout sum endl End If && == n 1 > m 1 Compound = sum 0 For = i 0 < i m ++ i Compound += sum * * + a i End << << cout sum endl End -- k End End,0
138,138,"FileAST Decl ArrayDecl days int 13 InitList 0 31 28 31 30 31 30 31 31 30 31 30 31 FuncDef Decl FuncDecl ParamList Decl year int isleapyear int Compound Return || && == % year 4 0 != % year 100 0 == % year 400 0 End FuncDef Decl FuncDecl main int Compound Decl year int Decl month int Decl day int FuncCall scanf ExprList ""%d %d %d"" & year & month & day Decl n int 0 Decl i int For = i 1 < i month ++ i Compound += n ArrayRef days i End += n day If && > month 2 FuncCall isleapyear ExprList year ++ n FuncCall printf ExprList ""%d"" n End",0
1044,1044,,1
44,44,"FileAST FuncDef Decl FuncDecl main int Compound Decl n int Decl j int Decl i int Decl k int Decl m int Decl a int Decl t int Decl all int Decl sum int Decl ArrayDecl ArrayDecl s int 500 500 FuncCall scanf ExprList ""%d"" & all = m 0 For = t 0 < t all ++ t Compound FuncCall scanf ExprList ""%d %d"" & m & n = sum 0 For = i 0 < i m ++ i For = j 0 < j n ++ j Compound FuncCall scanf ExprList ""%d"" & ArrayRef ArrayRef s i j += sum ArrayRef ArrayRef s i j End If || == m 1 == n 1 FuncCall printf ExprList ""%d\n"" sum Compound For = i 1 <= i - m 2 ++ i For = j 1 <= j - n 2 ++ j = sum - sum ArrayRef ArrayRef s i j FuncCall printf ExprList ""%d\n"" sum End End Return 0 End",0
1025,1025,,1
791,791,,1
66,66,"FileAST Decl mod int + 1e9 7 Decl maxn int 1e7 Decl ArrayDecl str char maxn Decl n int Decl L int Decl ArrayDecl p int maxn Decl ArrayDecl s char maxn Decl ArrayDecl ArrayDecl data int 2000100 5 Decl FuncDecl init void Decl FuncDecl manacher void Decl FuncDecl ParamList Decl op int Decl l int Decl r int Decl num int add void FuncDef Decl FuncDecl main int Compound While ~ FuncCall scanf ExprList ""%s"" s Compound FuncCall init FuncCall manacher For DeclList Decl i int - l 1 >= i 1 -- i Compound FuncCall add ExprList 1 + - i ArrayRef p i 1 i i FuncCall add ExprList 2 + - i ArrayRef p i 1 i 1 End Decl ans int 0 FuncCall printf ExprList ""%d\n"" ans End Return 0 End",0
250,250,FileAST Typedef ll long Decl w int Decl num int Decl len int Decl N int + 200000 10 Decl ArrayDecl a int n Decl ArrayDecl b int n FuncDef Decl FuncDecl ParamList Decl n int check int Compound FuncCall sort ExprList + b 1 + + b 1 n Decl cnt int 0 = ArrayRef b 0 0 = ArrayRef b + n 1 + w 1 For DeclList Decl i int 0 <= i n ++ i Compound += cnt / - ArrayRef b + i 1 ArrayRef b i + len 1 End If >= cnt num Return 1 Return 0 End Decl FuncDecl main int,0
829,829,,1
11,11,FileAST FuncDef Decl FuncDecl main int Compound Decl n int Decl a int Decl b int Decl i int Decl j int Decl sum int Decl ArrayDecl ArrayDecl c int 100 100 >> cin n While > n 0 Compound >> >> cin a b = sum 0 Decl PtrDecl ArrayDecl p int 100 = p c For = i 0 < i b ++ i += sum * + * p i << << cout sum endl -- n End Return 0 End,0
317,317,"FileAST Typedef ll long Decl maxn int 10000010 Decl mod int + 1e9 7 Decl ArrayDecl fac ll maxn Decl ArrayDecl inv ll maxn FuncDef Decl FuncDecl ParamList Decl n int Decl m int C ll Compound Return % * % * ArrayRef fac n ArrayRef inv m mod ArrayRef inv - n m mod End FuncDef Decl FuncDecl ParamList Decl n int Decl m int A ll Compound Return % * ArrayRef fac n ArrayRef inv - n m mod End Decl n int Decl ArrayDecl b ll maxn FuncDef Decl FuncDecl main int Compound FuncCall scanf ExprList ""%d"" & n = ArrayRef b 0 1 = ArrayRef b 1 2 Decl ans ll 0 = ArrayRef fac 0 1 For DeclList Decl i int 1 <= i n ++ i Compound = ArrayRef fac i % * ArrayRef fac - i 1 i mod End = ArrayRef inv 1 1 = ArrayRef inv 0 1 FuncCall printf ExprList ""%lld\n"" % ans mod Return 0 End",0
997,997,,1
599,599,"FileAST FuncDef Decl FuncDecl main int Compound Decl x int Decl y int Decl l1 int 0 Decl l2 int 0 Decl i int Decl j int Decl k int 0 FuncCall scanf ExprList ""%d%d"" & x & y Decl ArrayDecl s1 int 10 InitList 0 Decl ArrayDecl s2 int 10 InitList 0 Decl FuncDecl ParamList Decl a int level int = l1 FuncCall level ExprList x = l2 FuncCall level ExprList y = ArrayRef s1 0 x = ArrayRef s2 0 y For = i 1 < i l1 ++ i Compound = ArrayRef s1 i / ArrayRef s1 - i 1 2 End FuncCall printf ExprList ""%d\n"" k Return 0 End Decl FuncDecl ParamList Decl a int level int",1
305,305,"FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl sum int 100 InitList 0 Decl i int Decl j int Decl k int Decl h int Decl ArrayDecl a int 100 Decl ArrayDecl b int 100 Decl ArrayDecl ArrayDecl juzhen int 100 100 FuncCall scanf ExprList ""%d"" & k For = h 0 < h k ++ h Compound FuncCall printf ExprList ""%d\n"" ArrayRef sum h End Return 0 End",0
819,819,,1
318,318,"FileAST FuncDef Decl FuncDecl main int Compound Decl sum double 0 Decl temp double For DeclList Decl i int 0 < i 12 ++ i Compound FuncCall scanf ExprList ""%lf"" & temp += sum temp End FuncCall printf ExprList ""$%.2lf\n"" / sum 12.0 End",0
177,177,"FileAST Decl N int 1010 Typedef LL long Decl mod long 1000000007 Decl ArrayDecl ArrayDecl dp LL n n Decl ArrayDecl ArrayDecl sum1 LL n n Decl ArrayDecl ArrayDecl sum2 LL n n Decl ArrayDecl a int n Decl ArrayDecl b int n FuncDef Decl FuncDecl main int Compound Decl n int Decl m int While ~ FuncCall scanf ExprList ""%d%d"" & n & m Compound For DeclList Decl i int 1 <= i m ++ i FuncCall scanf ExprList ""%d"" & ArrayRef b i FuncCall printf ExprList ""%I64d\n"" ArrayRef ArrayRef dp n m End Return 0 End",0
93,93,"FileAST Typedef ll long Decl maxn int 5000010 Decl mod int 1000000007 Decl n int Decl m int Decl num int Decl ArrayDecl l ll maxn Decl ArrayDecl j ll maxn Decl ArrayDecl k ll maxn Decl ArrayDecl x ll maxn Decl ArrayDecl y ll maxn Decl ArrayDecl z ll maxn FuncDef Decl FuncDecl main int Compound FuncCall scanf ExprList ""%d"" & n For DeclList Decl i int 1 <= i n ++ i Compound FuncCall scanf ExprList ""%d%d%d"" & ArrayRef l i & ArrayRef j i & ArrayRef k i = ArrayRef x i - ArrayRef l i ArrayRef j i = ArrayRef y i - ArrayRef j i ArrayRef k i = ArrayRef z i - ArrayRef k i ArrayRef l i End Decl ans ll 0 FuncCall sort ExprList + x 1 + + x n 1 FuncCall sort ExprList + y 1 + + y n 1 FuncCall sort ExprList + z 1 + + z n 1 FuncCall printf ExprList ""%lld\n"" % * ans 500000004 mod Return 0 End",0
748,748,,1
96,96,"FileAST FuncDef Decl FuncDecl main int Compound Decl i int Decl n int Decl j int Decl k int Decl ArrayDecl a int 13 InitList 0 31 28 31 30 31 30 31 31 30 31 30 31 Decl sum int 0 FuncCall scanf ExprList ""%d %d %d"" & n & j & k For = i 0 <= i - j 1 ++ i Compound = sum + sum ArrayRef a i End If || == % n 400 0 && == % n 4 0 != % n 100 0 Compound If <= j 2 Compound = sum + sum k End Compound = sum + + sum 1 k End End Compound = sum + sum k End FuncCall printf ExprList ""%d"" sum FuncCall getchar FuncCall getchar FuncCall getchar End",0
422,422,"FileAST FuncDef Decl FuncDecl main int Compound Decl y int Decl m int Decl d int Decl i int Decl sum int Decl ArrayDecl a int 12 InitList 31 0 31 30 31 30 31 31 30 31 30 31 FuncCall scanf ExprList ""%d %d %d"" & y & m & d If || && == % y 4 0 != % y 100 0 == % y 400 0 = ArrayRef a 1 29 = ArrayRef a 1 28 = sum 0 For = i 0 < i m ++ i = sum + sum ArrayRef a i = sum + - sum ArrayRef a - i 1 d FuncCall printf ExprList ""%d"" sum FuncCall getchar FuncCall getchar Return 0 End",0
351,351,FileAST FuncDef Decl FuncDecl ParamList Decl n int Decl m int bianyuan int Compound Decl ArrayDecl ArrayDecl juzhen int 100 100 Decl i int Decl j int Decl result int = result 0 For = j 0 < j m ++ j Compound += result ArrayRef ArrayRef juzhen - n 1 j End Return result End Decl FuncDecl main int,0
160,160,"FileAST Decl ArrayDecl a char 28 InitList "" ABCDEFGHIJKLMNOPQRSTUVWXYZ"" FuncDef Decl FuncDecl ParamList Decl PtrDecl s char convert int Compound Decl sum int 0 For DeclList Decl i int 0 < i 5 ++ i Compound *= sum 2 += sum - ArrayRef s i '0' End Return sum End Decl FuncDecl ParamList Decl PtrDecl sss char Decl n int Decl m int convert_again void Decl FuncDecl main int",0
535,535,"FileAST Decl N int 110 Decl ArrayDecl ArrayDecl a int n n FuncDef Decl FuncDecl main int Compound Decl i int Decl j int Decl k int Decl x int Decl m int Decl n int FuncCall scanf ExprList ""%d"" & x While -- x Compound FuncCall memset ExprList a 0 sizeof a FuncCall scanf ExprList ""%d%d"" & m & n Decl sum int 0 If == m 1 Compound For = i 0 < i n ++ i += sum ArrayRef ArrayRef a 0 i End If == n 1 Compound End Compound End FuncCall printf ExprList ""%d\n"" sum End Return 0 End",1
546,546,"FileAST FuncDef Decl FuncDecl main int Compound Decl y int 0 Decl m int 0 Decl d int 0 Decl ArrayDecl dd int 12 InitList 31 28 31 30 31 30 31 31 30 31 30 31 Decl n int 0 Decl i int FuncCall scanf ExprList ""%d%d%d"" & y & m & d If || == % y 400 0 && == % y 4 0 != % y 100 0 Compound = ArrayRef dd 1 29 End For = i 0 < i - m 1 ++ i Compound = n + n ArrayRef dd i End = n + n d FuncCall printf ExprList ""%d"" n Return 0 End",1
796,796,,1
749,749,,1
836,836,,1
272,272,"FileAST Typedef LL long FuncDef Decl FuncDecl main int Compound Decl i int Decl t int Decl n int Decl ArrayDecl a double 20 FuncCall scanf ExprList ""%d"" & t = ArrayRef a 1 0 = ArrayRef a 2 1 While -- t Compound FuncCall scanf ExprList ""%d"" & n For = i 1 <= i n ++ i Compound /= ArrayRef a n i End FuncCall printf ExprList ""%.2lf%c\n"" * ArrayRef a n 100 '%' End Return 0 End",0
466,466,"FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl n int Decl m int Decl ArrayDecl ArrayDecl num int 100 100 Decl sum int >> cin k << cout endl For DeclList Decl a int 0 < a k ++ a Compound >> >> cin m n = sum 0 For DeclList Decl i int 0 < i m ++ i Compound For DeclList Decl j int 0 < j n ++ j Compound >> cin ArrayRef ArrayRef num i j << cout "" "" If || || || == i 0 == i - m 1 == j 0 == j - n 1 Compound += sum ArrayRef ArrayRef num i j End End << cout endl End << << cout sum endl End Return 0 End",0
565,565,"FileAST Typedef ll long Decl tot int 1 Decl n int Decl m int Decl q int Decl ArrayDecl s int 15 Decl ArrayDecl t int 15 Decl ArrayDecl l int 15 Decl ArrayDecl r int 15 Decl ArrayDecl ArrayDecl dis int 22 22 Decl ArrayDecl ArrayDecl dp int 22 60010 FuncDef Decl FuncDecl main int Compound FuncCall scanf ExprList ""%d%d%d"" & n & m & q FuncCall memset ExprList dis 63 sizeof dis For DeclList Decl i int 1 <= i q ++ i Compound FuncCall scanf ExprList ""%d%d%d%d"" & ArrayRef s i & ArrayRef t i & ArrayRef l i & ArrayRef r i *= tot 3 End FuncCall memset ExprList dp 63 sizeof dp = ArrayRef ArrayRef dp 0 1 0 Decl ans int 0 FuncCall printf ExprList ""%d\n"" ans Return 0 End",1
573,573,"FileAST FuncDef Decl FuncDecl main int Compound Decl i int Decl j int Decl k int Decl p int Decl ArrayDecl ArrayDecl a int 100 100 Decl ArrayDecl s int 100 InitList 0 Decl m int Decl n int FuncCall scanf ExprList ""%d"" & k FuncCall printf ExprList ""%d"" ArrayRef s 1 For = p 2 <= p k ++ p Compound FuncCall printf ExprList ""\n%d"" ArrayRef s p End Return 0 End",1
856,856,,1
780,780,,1
590,590,FileAST Typedef ll long Decl maxn int + 5e6 10 Decl ArrayDecl ArrayDecl dis int 123 123 Decl ArrayDecl x int 123 Decl ArrayDecl w int 123 Decl ArrayDecl t int 123 Decl ArrayDecl dp ll 1234 Decl n int Decl m int Decl T int FuncDef Decl FuncDecl main int Compound >> >> >> cin n m t FuncCall memset ExprList dis 31 sizeof dis For DeclList Decl i int 0 <= i n ++ i = ArrayRef ArrayRef dis i i 0 FuncCall memset ExprList dp 0 sizeof dp Decl cost int 0 << << cout ArrayRef dp t endl Return 0 End,1
562,562,FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl Day1 int 12 InitList 31 28 31 30 31 30 31 31 30 31 30 31 Decl ArrayDecl Day2 int 12 InitList 31 29 31 30 31 30 31 31 30 31 30 31 Decl year int Decl month int Decl day int Decl sumday int 0 Decl i int Decl j int >> >> >> cin year month day If || == % year 400 0 && == % year 4 0 != % year 100 0 = j 1 = j 0 If == j 1 Compound If == month 1 << << cout day endl If > month 1 Compound = sumday + sumday day << << cout sumday endl End End If == j 0 Compound If == month 1 << << cout day endl If > month 1 Compound For = i 0 < i - month 1 ++ i Compound = sumday + sumday ArrayRef day1 i End = sumday + sumday day << << cout sumday endl End End Return 0 End,1
617,617,"FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl a int 11 Decl y int Decl m int Decl d int Decl i int Decl leap int Decl total int 0 FuncCall scanf ExprList ""%d%d%d"" & y & m & d If == % y 4 0 Compound If == % y 100 0 Compound If == % y 400 0 = leap 1 = leap 0 End = leap 1 End = leap 0 If leap = ArrayRef a 1 29 = ArrayRef a 1 28 = ArrayRef a 0 31 = ArrayRef a 2 31 = ArrayRef a 3 30 = ArrayRef a 4 31 = ArrayRef a 5 30 = ArrayRef a 6 31 = ArrayRef a 7 31 = ArrayRef a 8 30 = ArrayRef a 9 31 = ArrayRef a 10 30 = ArrayRef a 11 31 For = i 0 < i - m 1 ++ i += total ArrayRef a i += total d FuncCall printf ExprList ""%d"" total Return 0 End",1
963,963,,1
629,629,"FileAST Decl ArrayDecl ArrayDecl days_of_month int 12 2 InitList InitList 31 28 31 30 31 30 31 31 30 31 30 31 InitList 31 29 31 30 31 30 31 31 30 31 30 31 Decl FuncDecl ParamList Decl year int is_leap_year int FuncDef Decl FuncDecl main int Compound Decl year int Decl month int Decl day int FuncCall scanf ExprList ""%d%d%d"" & year & month & day Decl index int FuncCall is_leap_year ExprList year Decl days int 0 For DeclList Decl i int 0 < i - month 1 ++ i += days ArrayRef ArrayRef days_of_month index i += days day FuncCall printf ExprList ""%d"" days End",1
608,608,FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl m int Decl n int Decl i int Decl j int Decl ArrayDecl ArrayDecl a int 100 100 Decl sum int 0 >> cin k While >> >> cin m n Compound If && >= m 3 >= n 3 Compound For = i 1 < i - m 1 ++ i = sum + + sum ArrayRef ArrayRef a i 0 ArrayRef ArrayRef a i - n 1 End Compound End << << cout sum endl = sum 0 End Return 0 End,1
67,67,FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl n int Decl m int Decl sum int 0 Decl i int Decl j int Decl p int Decl ArrayDecl ArrayDecl a int 100 100 >> cin k While > k 0 Compound >> >> cin m n For = i 0 < i m ++ i Compound For = j 0 < j n ++ j Compound >> cin ArrayRef ArrayRef a i j End End If && == n 1 == m 1 Compound << << cout ArrayRef ArrayRef a 0 0 endl End If && == n 1 > m 1 Compound << << cout sum endl = sum 0 End If && > n 1 == m 1 Compound << << cout sum endl = sum 0 End Compound -= sum + + + ArrayRef ArrayRef a 0 0 ArrayRef ArrayRef a 0 - n 1 ArrayRef ArrayRef a - m 1 0 ArrayRef ArrayRef a - m 1 - n 1 << << cout sum endl End = sum 0 -- k End End,0
453,453,"FileAST FuncDef Decl FuncDecl main int Compound Decl FuncDecl ParamList Decl ArrayDecl ArrayDecl p int 100 100 Decl m int Decl n int sum int Decl N int Decl m int Decl n int Decl ArrayDecl ArrayDecl a int 100 100 InitList 0 Decl i int Decl j int Decl k int Decl s int FuncCall scanf ExprList ""%d"" & n For = k 0 < k n ++ k Compound FuncCall scanf ExprList ""%d%d"" & m & n For = i 0 < i m ++ i For = j 0 < j n ++ j FuncCall scanf ExprList ""%d"" & ArrayRef ArrayRef a i j = s FuncCall sum ExprList a m n FuncCall printf ExprList ""%d\n"" s End Return 0 End Decl FuncDecl ParamList Decl ArrayDecl ArrayDecl p int 100 100 Decl m int Decl n int sum int",0
332,332,FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl ArrayDecl a int 101 101 Decl r int Decl c int Decl j int Decl k int Decl l int Decl m int Decl sum int Decl n int Decl p int >> cin n For = p 1 <= p n ++ p Compound = sum 0 >> cin r >> cin c For DeclList Decl i int 0 < i r ++ i For DeclList Decl j int 0 < j c ++ j >> cin ArrayRef ArrayRef a i j For = j 0 < j r ++ j Compound = sum + sum * * + a j End For = k 1 < k c ++ k Compound = sum + sum * + * - + a r 1 k End For = l - r 2 >= l 0 -- l Compound = sum + sum * - + * + a l c 1 End For = m 1 < m - c 1 ++ m Compound = sum + sum * + * + a 0 m End << << cout sum endl End Return 0 End,0
50,50,"FileAST FuncDef Decl FuncDecl main int Compound Decl year int Decl month int Decl day int Decl a int Decl all int Decl ArrayDecl m1 int 5 Decl ArrayDecl m2 int 5 Decl ArrayDecl m3 int 5 Decl i int For = i 0 <= i 4 ++ i FuncCall scanf ExprList ""%d%d%d"" & ArrayRef m1 i & ArrayRef m2 i & ArrayRef m3 i Return 0 End",0
85,85,"FileAST Decl FuncDecl ParamList Decl year int leapyear int FuncDef Decl FuncDecl main int Compound Decl ArrayDecl a int 12 Decl i int Decl Year int Decl Month int Decl Day int Decl date int 0 FuncCall scanf ExprList ""%d %d %d"" & year & month & day If == FuncCall leapyear ExprList year 1 Compound Decl ArrayDecl a int 12 InitList 31 29 31 30 31 30 31 31 30 31 30 31 For = i 0 < i - month 1 ++ i = date + date ArrayRef a i = date + date day FuncCall printf ExprList ""%d\n"" date End If == FuncCall leapyear ExprList year 0 Compound Decl ArrayDecl a int 12 InitList 31 28 31 30 31 30 31 31 30 31 30 31 For = i 0 < i - month 1 ++ i = date + date ArrayRef a i = date + date day FuncCall printf ExprList ""%d\n"" date End End",0
262,262,FileAST FuncDef Decl FuncDecl main int Compound Decl x int Decl y int Decl z int Decl k int 0 Decl i int >> >> >> cin x y z Decl ArrayDecl a int 12 InitList 31 28 31 30 31 30 31 31 30 31 30 31 Decl ArrayDecl b int 12 InitList 31 29 31 30 31 30 31 31 30 31 30 31 If || && == % x 4 0 != % x 100 0 == % x 400 0 For = i 0 < i - y 1 ++ i = k + k ArrayRef b i = k + k z << cout k Return 0 End,0
104,104,"FileAST FuncDef Decl FuncDecl main int Compound Decl T int Decl n int Decl a int Decl sum int 0 Decl i int FuncCall scanf ExprList ""%d"" & t While -- t Compound FuncCall scanf ExprList ""%d"" & n For = i 0 < i n ++ i Compound FuncCall scanf ExprList ""%d"" & a += sum a End FuncCall printf ExprList ""%d\n"" sum = sum 0 If != t 0 FuncCall printf ExprList ""\n"" End End",0
933,933,,1
935,935,,1
1051,1051,,1
634,634,FileAST FuncDef Decl FuncDecl main int Compound Decl n int Decl ArrayDecl a int 100010 While >> cin n Compound For DeclList Decl i int 0 < i n ++ i >> cin ArrayRef a i FuncCall sort ExprList a + a n << << cout ArrayRef a / n 2 endl End Return 0 End,1
859,859,,1
831,831,,1
594,594,FileAST FuncDef Decl FuncDecl ParamList Decl ArrayDecl ArrayDecl a int 100 Decl m int Decl n int input void Compound For DeclList Decl i int 0 < i m ++ i For DeclList Decl j int 0 < j n ++ j >> cin * + * + a j i End Decl FuncDecl main int,1
598,598,"FileAST FuncDef Decl FuncDecl main int Compound Decl n int 0 Decl row int 0 Decl line int 0 Decl l int 0 Decl ArrayDecl ArrayDecl Matrix int 100 100 InitList InitList 0 InitList 0 Decl a int 0 Decl b int 0 Decl c int 0 Decl d int 0 Decl total int 0 Decl extra int 0 FuncCall scanf ExprList ""%d"" & n While < l n Compound FuncCall scanf ExprList ""%d %d"" & row & line If || == row 1 == line 1 For DeclList Decl i int 0 < i row ++ i For DeclList Decl j int 0 < j line ++ j += total ArrayRef ArrayRef matrix i j Compound = extra + + + ArrayRef ArrayRef matrix 0 0 ArrayRef ArrayRef matrix 0 - line 1 ArrayRef ArrayRef matrix - row 1 0 ArrayRef ArrayRef matrix - row 1 - line 1 = total - + + + a b c d extra End FuncCall printf ExprList ""%d\n"" total ++ l = a 0 = b 0 = c 0 = d 0 End Return 0 End",1
589,589,FileAST Decl mod int + 1e9 7 Decl maxn int 1e7 Decl ArrayDecl str char maxn Decl n int Decl L int Decl ArrayDecl p int maxn Decl ArrayDecl s char maxn Decl ArrayDecl ArrayDecl data int 2000100 5 FuncDef Decl FuncDecl init void Compound FuncCall memset ExprList data 0 sizeof data = n FuncCall strlen ExprList s = ArrayRef str 0 '@' = ArrayRef str 1 '#' For DeclList Decl i int 0 < i n ++ i Compound = ArrayRef str + * i 2 2 ArrayRef s i = ArrayRef str + * i 2 3 '#' End = l + * n 2 2 = ArrayRef str l 0 End Decl FuncDecl manacher void Decl FuncDecl ParamList Decl op int Decl l int Decl r int Decl num int add void Decl FuncDecl main int,1
508,508,"FileAST FuncDef Decl FuncDecl main int Compound Decl n int Decl m int Decl k int Decl sum int 0 Decl ArrayDecl a int 15 Decl ArrayDecl b int 15 FuncCall scanf ExprList ""%d%d%d"" & n & m & k For DeclList Decl i int 0 < i k ++ i FuncCall scanf ExprList ""%d"" & ArrayRef a i FuncCall printf ExprList ""%d\n"" / sum 2 End",0
405,405,FileAST FuncDef Decl FuncDecl main int Compound Decl t int >> cin t While != t 0 Compound -- t Decl m int Decl n int Decl i int Decl j int Decl sum int 0 >> >> cin m n Decl ArrayDecl ArrayDecl a int 100 100 For = i 0 < i m ++ i For = j 0 < j n ++ j Compound >> cin ArrayRef ArrayRef a i j If == i 0 = sum + sum ArrayRef ArrayRef a i j If == i - m 1 = sum + sum ArrayRef ArrayRef a i j End << << cout sum endl End Return 0 End,0
556,556,FileAST FuncDef Decl FuncDecl main int Compound Decl n int Decl ArrayDecl x int 100 Decl ArrayDecl y int 100 Decl ArrayDecl ArrayDecl m int 100 100 Decl i int Decl j int Decl k int Decl ArrayDecl count int 100 InitList 0 >> cin n For = k 0 < k n ++ k << << cout ArrayRef count k endl Return 0 End,1
190,190,FileAST FuncDef Decl FuncDecl main int Compound Decl n int Decl ArrayDecl step long 36 InitList 0 1 For DeclList Decl i int 2 < i 36 ++ i = ArrayRef step i + * 3 ArrayRef step - i 1 1 While && >> cin n n Compound << << cout * 2 ArrayRef step n endl End Return 0 End,0
701,701,"FileAST FuncDef Decl FuncDecl main int Compound Decl w int Decl s int Decl i int Decl year int Decl month int Decl day int Decl ArrayDecl ArrayDecl ymd int 3 5 Decl ArrayDecl num int 5 For = i 0 < i 5 ++ i Compound FuncCall scanf ExprList ""%d %d %d\n"" & year & month & day = ArrayRef ArrayRef ymd i 0 year = ArrayRef ArrayRef ymd i 1 month = ArrayRef ArrayRef ymd i 2 day End FuncCall printf ExprList ""%d\n%d\n%d\n%d\n%d\n"" ArrayRef num 0 ArrayRef num 1 ArrayRef num 2 ArrayRef num 3 ArrayRef num 4 End",1
375,375,"FileAST Decl ArrayDecl a int 4005 Decl ArrayDecl b int 4005 Decl ArrayDecl c int 4005 Decl ArrayDecl d int 4005 Decl ArrayDecl cd int * 4005 4005 FuncDef Decl FuncDecl main int Compound Decl n int While != FuncCall scanf ExprList ""%d"" & n eof Compound For DeclList Decl i int 0 < i n ++ i Compound FuncCall scanf ExprList ""%d%d%d%d"" & ArrayRef a i & ArrayRef b i & ArrayRef c i & ArrayRef d i End FuncCall sort ExprList cd + cd * n n Decl res long 0 FuncCall printf ExprList ""%lld\n"" res End End",0
667,667,FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl m int Decl n int Decl i int Decl j int Decl s int 0 Decl ArrayDecl ArrayDecl a int 102 102 >> cin k While > k 0 Compound = s 0 >> >> cin m n For = i 1 <= i m ++ i For = j 1 <= j n ++ j >> cin ArrayRef ArrayRef a i j << << cout s endl -- k End End,1
645,645,"FileAST FuncDef Decl FuncDecl main int Compound Decl n int Decl k int Decl i int Decl m int Decl sum int 0 Decl x int Decl y int = i 0 Decl ArrayDecl sj int 100 Decl ArrayDecl ArrayDecl sz int 100 100 FuncCall scanf ExprList ""%d"" & x For = y 0 < y x ++ y Compound FuncCall scanf ExprList ""%d"" & m FuncCall scanf ExprList ""%d"" & n For = i 0 < i m ++ i Compound For = k 0 < k n ++ k Compound FuncCall scanf ExprList ""%d"" & ArrayRef ArrayRef sz i k End End For = k 0 < k n ++ k Compound = sum + + sum ArrayRef ArrayRef sz 0 k ArrayRef ArrayRef sz - m 1 k End For = i 1 < i - m 1 ++ i Compound = sum + + sum ArrayRef ArrayRef sz i 0 ArrayRef ArrayRef sz i - n 1 End = ArrayRef sj y sum = sum 0 End Return 0 End",1
146,146,"FileAST Typedef LL long Decl maxn int 100 FuncDef Decl FuncDecl main int Compound Decl n int Decl k int 1 While && >> cin n > n 0 Compound Decl sum int 0 Decl x int For DeclList Decl i int 0 < i n ++ i Compound >> cin x += sum x End << << << << << cout ""Sum of #"" ++ k "" is "" sum endl End End",0
187,187,"FileAST FuncDef Decl FuncDecl main int Compound Decl y int Decl m int Decl d int Decl s int Decl i int Decl l int = s 0 FuncCall scanf ExprList ""%d %d %d"" & y & m & d Decl ArrayDecl a int 13 InitList 0 31 28 31 30 31 30 31 31 30 31 30 31 For = i 1 < i m ++ i Compound = s + s ArrayRef a i End = s + s d If == % y 4 0 Compound If == % y 100 0 Compound If == % y 400 0 = l 1 = l 0 End = l 1 End = l 0 If > m 2 = s + s l FuncCall printf ExprList ""%d\n"" s Return 0 End",0
691,691,FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl m int Decl n int Decl a int Decl ArrayDecl sum int 100 InitList 0 Decl x int Decl y int Decl z int >> cin k For = x 0 < x k ++ x Compound >> >> cin m n For = y 0 < y m ++ y Compound For = z 0 < z n ++ z Compound >> cin a If || || || == z 0 == y 0 == z - n 1 == y - m 1 = ArrayRef sum x + ArrayRef sum x a End End End Return 0 End,1
301,301,"FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl m int Decl n int Decl ans int Decl i int Decl j int Decl x int FuncCall scanf ExprList ""%d"" & k While -- k Compound FuncCall scanf ExprList ""%d%d"" & n & m = ans 0 For = i 1 <= i n ++ i Compound If || == i 1 == i n For = j 1 <= j m ++ j Compound FuncCall scanf ExprList ""%d"" & x += ans x End For = j 1 <= j m ++ j Compound FuncCall scanf ExprList ""%d"" & x If || == j 1 == j m += ans x End End FuncCall printf ExprList ""%d\n"" ans End Return 0 End",0
482,482,"FileAST Decl ArrayDecl a int 101 Decl FuncDecl ParamList Decl l int Decl r int QSort void FuncDef Decl FuncDecl main int Compound Decl n int Decl i int Decl j int Decl res int Decl k int Decl cnt int FuncCall freopen ExprList ""hdoj3537.txt"" ""r"" stdin FuncCall freopen ExprList ""hdoj3537ans.txt"" ""w"" stdout While != FuncCall scanf ExprList ""%d"" & n eof Compound If == n 0 Compound FuncCall printf ExprList ""Yes\n"" Continue End For = i 0 < i n ++ i FuncCall scanf ExprList ""%d"" & ArrayRef a i FuncCall qsort ExprList 0 - n 1 = res 0 = cnt 1 If res FuncCall printf ExprList ""No\n"" FuncCall printf ExprList ""Yes\n"" End Return 0 End",0
647,647,"FileAST FuncDef Decl FuncDecl main int Compound Decl y int Decl m int Decl d int Decl i int FuncCall scanf ExprList ""%d %d %d"" & y & m & d Decl ArrayDecl n int 12 InitList 31 28 31 30 31 30 31 31 30 31 30 31 If && == % y 100 0 == % y 400 0 = ArrayRef n 1 29 If && != % y 100 0 & y == 4 0 = ArrayRef n 1 29 Decl sum int 0 For = i 0 < i - m 1 ++ i = sum + sum ArrayRef n i FuncCall printf ExprList ""%d\n"" + sum d FuncCall getchar FuncCall getchar End",1
512,512,"FileAST Typedef ll long Decl maxn int 123456 Decl ArrayDecl p int 8 Decl ArrayDecl ArrayDecl sx int 6 maxn Decl ArrayDecl ArrayDecl sy int 6 maxn Decl ArrayDecl ArrayDecl dp int 150 123 Decl ArrayDecl op_s int 123 Decl ArrayDecl op_t int 123 Decl ArrayDecl ArrayDecl id int 6 150 Decl FuncDecl init void Decl FuncDecl ParamList Decl ArrayDecl a int Cantor int Decl FuncDecl ParamList Decl ArrayDecl a int Decl ArrayDecl b int Decl ArrayDecl c int cal void Decl FuncDecl ParamList Decl ArrayDecl a int Decl ArrayDecl b int cal2 void FuncDef Decl FuncDecl main int Compound FuncCall init Decl n int Decl m int While ~ FuncCall scanf ExprList ""%d%d"" & n & m Compound For DeclList Decl i int 1 <= i 5 ++ i Compound = ArrayRef ArrayRef sx 0 i = ArrayRef ArrayRef sy + n 1 i i End Decl ArrayDecl a int 6 Decl ArrayDecl b int 6 FuncCall memset ExprList dp 0x3f sizeof dp Decl x int Decl s int Decl t int = x FuncCall cantor ExprList a = ArrayRef ArrayRef dp 0 x 0 Decl ans int ArrayRef ArrayRef dp m 1 If == ans 0x3f3f3f3f = ans - 1 FuncCall printf ExprList ""%d\n"" ans End Return 0 End",0
536,536,FileAST FuncDef Decl FuncDecl main int Compound Decl idx int 100 Decl i int 100 Decl j int 100 Decl lines int 100 Decl fun_name int 100 Decl None int 100 Decl N int 100 Decl ArrayDecl na int 101 Decl ArrayDecl a int 101 For = i 0 < i n ++ i Compound For = j 0 < j i ++ j Compound += ArrayRef a i ArrayRef a j End End Return 0 End,1
949,949,,1
1033,1033,,1
648,648,FileAST FuncDef Decl FuncDecl main int Compound Decl i int Decl year int Decl month int Decl day int Decl n int 0 >> >> >> cin year month day Decl ArrayDecl pin int 12 InitList 31 28 31 30 31 30 31 31 30 31 30 31 Decl ArrayDecl run int 12 InitList 31 29 31 30 31 30 31 31 30 31 30 31 If || && == % year 4 0 != % year 100 0 == % year 400 0 Compound If >= month 2 Compound = n + n day End If == month 1 Compound = n day End End Compound If >= month 2 Compound For = i 0 <= i - month 2 ++ i Compound = n + n ArrayRef pin i End = n + n day End If == month 1 Compound = n day End End << << cout n endl Return 0 End,1
181,181,"FileAST Decl ArrayDecl ArrayDecl C long 123 123 Decl ArrayDecl ArrayDecl dp long 12345 123 Decl ArrayDecl a int 123 FuncDef Decl FuncDecl main int Compound Decl n int Decl x int >> >> cin n x Decl sum int 0 = ArrayRef ArrayRef c 0 0 1 For DeclList Decl i int 1 <= i 120 ++ i Compound = ArrayRef ArrayRef c i 0 1 For DeclList Decl j int 1 <= j i ++ j Compound = ArrayRef ArrayRef c i j + ArrayRef ArrayRef c - i 1 - j 1 ArrayRef ArrayRef c - i 1 j End End = ArrayRef ArrayRef dp 0 0 1 << << cerr ""finished"" endl Decl ans long 0.0 FuncCall printf ExprList ""%.9Lf\n"" ans Return 0 End",0
315,315,FileAST Decl ArrayDecl ArrayDecl month int 13 2 InitList InitList 0 31 28 31 30 31 30 31 31 30 31 30 31 InitList 0 31 29 31 30 31 30 31 31 30 31 30 31 FuncDef Decl FuncDecl main int Compound Decl i int Decl leap int 0 Decl y int Decl m int Decl d int Decl ans int 0 >> >> >> cin y m d If || && == % y 4 0 != % y 100 0 == % y 400 0 = leap 1 For = i 1 < i m ++ i += ans ArrayRef ArrayRef month leap i += ans d << << cout ans endl Return 0 End,0
485,485,"FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl n int Decl i int Decl m int Decl p int Decl q int Decl ArrayDecl ArrayDecl sz int 100 100 Decl sum int FuncCall scanf ExprList ""%d"" & k For = i 0 < i k ++ i Compound = sum 0 FuncCall scanf ExprList ""%d%d"" & m & n For = p 0 < p m ++ p Compound For = q 0 < q n ++ q Compound FuncCall scanf ExprList ""%d"" & ArrayRef ArrayRef sz p q End End If || == m 1 == n 1 Compound For = p 0 < p m ++ p Compound For = q 0 < q n ++ q Compound += sum ArrayRef ArrayRef sz p q End End End Compound For = q 0 <= q - n 1 ++ q Compound += sum ArrayRef ArrayRef sz 0 q End For = q 1 < q - m 1 ++ q Compound += sum ArrayRef ArrayRef sz q - n 1 End For = q 0 < q n ++ q Compound += sum ArrayRef ArrayRef sz - m 1 q End For = q 1 < q - m 1 ++ q Compound += sum ArrayRef ArrayRef sz q 0 End End FuncCall printf ExprList ""%d\n"" sum End Return 0 End",0
805,805,,1
702,702,FileAST FuncDef Decl FuncDecl main int Compound Decl t int >> cin t While > t 0 Compound Decl ArrayDecl ArrayDecl a int 102 102 Decl m int Decl n int >> >> cin m n Decl sum int 0 If == m 1 Compound End Compound For DeclList Decl i int 0 < i n ++ i += sum * + * - + a m 1 i End << << cout sum endl -- t End Return 0 End,1
472,472,FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl a int 12 InitList 31 28 31 30 31 30 31 31 30 31 30 31 Decl ArrayDecl b int 12 InitList 31 29 31 30 31 30 31 31 30 31 30 31 Decl y int Decl m int Decl d int Decl l int 0 >> >> >> cin y m d If || != % y 4 0 && == % y 100 0 != % y 400 0 Compound If == m 1 << cout d Compound << cout + l d End End Compound If == m 1 << cout d Compound For DeclList Decl i int 0 < i - m 1 ++ i Compound += l ArrayRef b i End << cout + l d End End Return 0 End,0
927,927,,1
378,378,FileAST Decl ArrayDecl x int 20001 Decl ArrayDecl y int 20001 Decl ArrayDecl s int 20001 Decl FuncDecl ParamList Decl a int Decl b int cmp int FuncDef Decl FuncDecl main int Compound Decl n int Decl m int Decl a int Decl b int Decl c int Decl d int >> >> cin m n FuncCall memset ExprList s 0 sizeof s For DeclList Decl i int 0 < i m ++ i >> >> cin ArrayRef x i ArrayRef y i FuncCall sort ExprList s + s m cmp Return 0 End,0
932,932,,1
484,484,"FileAST FuncDef Decl FuncDecl main int Compound Decl n int Decl m int Decl i int Decl j int Decl c int Decl k int 0 Decl ArrayDecl a char 1001 InitList 0 FuncCall scanf ExprList ""%d"" & n While -- n Compound ++ k FuncCall scanf ExprList ""%d"" & m FuncCall gets ExprList a = j FuncCall strlen ExprList a For = i m < i j ++ i Compound = ArrayRef a i ArrayRef a + i 1 End FuncCall printf ExprList ""%d%s\n"" k a End Return 0 End",0
436,436,FileAST FuncDef Decl FuncDecl ParamList Decl m int Decl n int juzhen int Compound Decl ArrayDecl ArrayDecl a int 100 100 Decl s int 0 Decl i int Decl j int For = i 1 <= i m ++ i Compound For = j 1 <= j n ++ j Compound >> cin ArrayRef ArrayRef a i j End End Decl PtrDecl ArrayDecl p int 100 a Return s End Decl FuncDecl main int,0
770,770,,1
389,389,FileAST Typedef ll long Decl maxn int 123456 Decl ArrayDecl p int 8 Decl ArrayDecl ArrayDecl sx int 6 maxn Decl ArrayDecl ArrayDecl sy int 6 maxn Decl ArrayDecl ArrayDecl dp int 150 123 Decl ArrayDecl op_s int 123 Decl ArrayDecl op_t int 123 Decl ArrayDecl ArrayDecl id int 6 150 FuncDef Decl FuncDecl init void Compound = ArrayRef p 0 1 Decl ArrayDecl a int 6 Decl cnt int 0 For DeclList Decl i int 1 <= i 5 ++ i = ArrayRef a i i DoWhile FuncCall next_permutation ExprList + a 1 + a 6 Compound ++ cnt End End Decl FuncDecl ParamList Decl ArrayDecl a int Cantor int Decl FuncDecl ParamList Decl ArrayDecl a int Decl ArrayDecl b int Decl ArrayDecl c int cal void Decl FuncDecl ParamList Decl ArrayDecl a int Decl ArrayDecl b int cal2 void Decl FuncDecl main int,0
388,388,"FileAST Typedef LL long FuncDef Decl FuncDecl main int Compound Decl n int >> cin n While -- n Compound Decl m int Decl i int Decl j int >> cin m Decl ArrayDecl s char 4 ""HDU"" For = i 1 <= i * 3 m ++ i Compound For = j 1 <= j m ++ j << cout s << cout endl End End Return 0 End",0
417,417,"FileAST Typedef ll long Typedef ull unsigned Decl N int + 50 10 Decl mod int 998244353 Decl ArrayDecl MAX int 3 Decl ArrayDecl MAXN int 3 Decl FuncDecl read int Decl ArrayDecl ArrayDecl ArrayDecl dp ll n n n Decl ArrayDecl ArrayDecl a int n n Decl ArrayDecl w int n Decl ArrayDecl ArrayDecl ArrayDecl g int n n n Decl ArrayDecl ArrayDecl ArrayDecl h int n n n FuncDef Decl FuncDecl main int Compound Decl t int Decl n int Decl m int Decl k int Decl q int Decl x int Decl y int Decl z int FuncCall scanf ExprList ""%d"" & t While -- t Compound FuncCall scanf ExprList ""%d%d%d%d"" & n & m & k & q FuncCall memset ExprList a 0 sizeof a For DeclList Decl i int 1 <= i q ++ i Compound FuncCall scanf ExprList ""%d%d%d"" & x & y & z FuncCall printf ExprList ""%lld\n"" ArrayRef ArrayRef ArrayRef dp x y z End End Return 0 End",0
132,132,"FileAST Typedef LL long FuncDef Decl FuncDecl main int Compound Decl ArrayDecl c char 20 Decl i long Decl j long Decl n long Decl k long Decl a long Decl b long Decl y long While != FuncCall scanf ExprList ""%s%ld%ld"" c & a & b eof Compound Decl ArrayDecl s char 20 = k 0 = n FuncCall strlen ExprList c If == k 0 Compound FuncCall printf ExprList ""      0\n"" Continue End = i 0 While k Compound = y % k b If && >= y 0 <= y 9 = ArrayRef s i + y 48 Switch y Compound Case 10 = ArrayRef s i 'A' Break Case 11 = ArrayRef s i 'B' Break Case 12 = ArrayRef s i 'C' Break Case 13 = ArrayRef s i 'D' Break Case 14 = ArrayRef s i 'E' Break Case 15 = ArrayRef s i 'F' Break End = k / k b ++ i End If > i 7 FuncCall printf ExprList ""  ERROR"" Compound For = j 0 < j - 7 i ++ j FuncCall printf ExprList "" "" = i - i 1 End FuncCall printf ExprList ""\n"" End Return 0 End",0
171,171,FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl m int Decl n int Decl i int Decl j int Decl sum int >> cin k While -- k Compound = sum 0 >> >> cin m n Decl ArrayDecl ArrayDecl a int n m If == m 1 Compound << << cout sum endl Continue End If == n 1 Compound << << cout sum endl Continue End For = i 1 < i - m 1 ++ i Compound += sum * * + a i += sum * - + * + a i n 1 End << << cout sum endl End Return 0 End,0
213,213,"FileAST Decl ArrayDecl a char 28 InitList "" ABCDEFGHIJKLMNOPQRSTUVWXYZ"" Decl FuncDecl ParamList Decl PtrDecl s char convert int FuncDef Decl FuncDecl ParamList Decl PtrDecl sss char Decl n int Decl m int convert_again void Compound Decl ArrayDecl temp char 1000 """" Decl ArrayDecl space char 2 "" "" Decl ArrayDecl s char 6 = ArrayRef s 5 '\0' Decl ArrayDecl ArrayDecl ss char 22 22 Decl PtrDecl p char sss For DeclList Decl i int 0 < i n ++ i Compound FuncCall strncpy ExprList ArrayRef ss i p m = ArrayRef ArrayRef ss i m '\0' += p m End Decl b1 int Decl b2 int Decl t int Decl tt int = b1 = b2 0 = t n = tt m Decl k int 0 Decl g int 0 Decl tst int 0 Decl begin int 1 While 1 Compound If || >= b1 t >= b2 tt Break ++ b1 If || >= b1 t >= b2 tt Break -- tt If || >= b1 t >= b2 tt Break -- t If || >= b1 t >= b2 tt Break ++ b2 If || >= b1 t >= b2 tt Break End End Decl FuncDecl main int",0
433,433,"FileAST Decl ArrayDecl days int 13 InitList 0 31 28 31 30 31 30 31 31 30 31 30 31 FuncDef Decl FuncDecl ParamList Decl year int isleapyear int Compound Return || && == % year 4 0 != % year 100 0 == % year 400 0 End FuncDef Decl FuncDecl main int Compound Decl year int Decl month int Decl day int Decl n int 0 Decl i int FuncCall scanf ExprList ""%d %d %d"" & year & month & day For = i 1 < i month ++ i = n + n ArrayRef days i = n + n day If && > month 2 FuncCall isleapyear ExprList year ++ n FuncCall printf ExprList ""%d\n"" n Return 0 End",0
926,926,,1
956,956,,1
866,866,,1
674,674,"FileAST FuncDef Decl FuncDecl main int Compound Decl x int Decl y int Decl z int FuncCall scanf ExprList ""%d%d%d"" & x & y & z Decl ArrayDecl s int 12 InitList 31 28 31 30 31 30 31 31 30 31 30 31 Decl m int 0 Decl n int 0 For = m 0 < m - y 1 ++ m += n ArrayRef s m Decl D int If && && || && == % x 4 0 != % x 100 0 == % x 400 0 != y 1 != y 2 = d + + n z 1 = d + n z FuncCall printf ExprList ""%d"" d Return 0 End",1
421,421,"FileAST FuncDef Decl FuncDecl ParamList Decl argc int Decl ArrayDecl PtrDecl argv char main int Compound Decl ArrayDecl d int 12 InitList 31 28 31 30 31 30 31 31 30 31 30 31 Decl year int Decl month int Decl day int Decl i int Decl days int 0 FuncCall scanf ExprList ""%d%d%d"" & year & month & day For = i 1 < i month ++ i Compound = days + days ArrayRef d - i 1 End = days + days day If && || == % year 4 0 == % year 400 0 > month 2 = days ++ days FuncCall printf ExprList ""%d"" days End",0
120,120,FileAST Decl k int Decl m int Decl n int Decl ArrayDecl ArrayDecl a int 100 100 Decl i int Decl j int Decl sum int 0 FuncDef Decl FuncDecl main int Compound >> cin k While > k 0 Compound -- k >> >> cin m n If || || || == m 1 == m 2 == n 1 == n 2 Compound For = i 1 <= i m ++ i For = j 1 <= j n ++ j += sum ArrayRef ArrayRef a i j End Compound End << << cout sum endl = sum 0 End End,0
303,303,"FileAST FuncDef Decl FuncDecl main int Compound Decl i int Decl h1 int Decl l1 int Decl k int Decl h int Decl l int Decl ArrayDecl ArrayDecl a int 100 100 Decl ArrayDecl sum int 100 FuncCall scanf ExprList ""%d"" & k For = i 1 <= i k ++ i FuncCall printf ExprList ""%d\n"" ArrayRef sum i Return 0 End",0
924,924,,1
566,566,"FileAST FuncDef Decl FuncDecl main int Compound Decl n int Decl p int FuncCall scanf ExprList ""%d%d"" & n & p Decl ans long 1 For DeclList Decl i int 2 <= i n ++ i Compound = ans % * ans i p End FuncCall printf ExprList ""%lld\n"" ans Return 0 End",1
754,754,,1
887,887,,1
288,288,"FileAST Decl N int 110 Decl ArrayDecl ArrayDecl a int n n FuncDef Decl FuncDecl main int Compound Decl i int Decl j int Decl k int Decl x int Decl m int Decl n int FuncCall scanf ExprList ""%d"" & x While -- x Compound FuncCall memset ExprList a 0 sizeof a FuncCall scanf ExprList ""%d%d"" & m & n Decl sum int 0 If == m 1 Compound End If == n 1 Compound End Compound For = i 1 < i - m 1 ++ i Compound += sum ArrayRef ArrayRef a i 0 += sum ArrayRef ArrayRef a i - n 1 End End FuncCall printf ExprList ""%d\n"" sum End Return 0 End",0
319,319,"FileAST FuncDef Decl FuncDecl main int Compound Decl a int Decl x int Decl m int Decl n int Decl i int Decl j int Decl k int Decl ArrayDecl sum int 10000 InitList 0 Decl ArrayDecl ArrayDecl sz int 100 100 FuncCall scanf ExprList ""%d"" & a For = i 0 < i a ++ i Compound FuncCall scanf ExprList ""%d %d"" & m & n For = j 0 < j m ++ j Compound For = k 0 < k n ++ k Compound FuncCall scanf ExprList ""%d"" & ArrayRef ArrayRef sz j k End End If && > m 2 > n 2 Compound For = j 0 < j m ++ j Compound = ArrayRef sum i + + ArrayRef sum i ArrayRef ArrayRef sz j 0 ArrayRef ArrayRef sz j - n 1 End For = k 0 < k n ++ k Compound = ArrayRef sum i + + ArrayRef sum i ArrayRef ArrayRef sz 0 k ArrayRef ArrayRef sz - m 1 k End = ArrayRef sum i - - - - ArrayRef sum i ArrayRef ArrayRef sz 0 0 ArrayRef ArrayRef sz 0 - n 1 ArrayRef ArrayRef sz - m 1 0 ArrayRef ArrayRef sz - m 1 - n 1 End Compound For = j 0 < j m ++ j Compound For = k 0 < k n ++ k Compound = ArrayRef sum i + ArrayRef sum i ArrayRef ArrayRef sz j k End End End End Return 0 End",0
91,91,"FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl a int 5 Decl ArrayDecl b int 5 Decl ArrayDecl c int 5 Decl ArrayDecl sum int 5 Decl i int For = i 0 < i 5 ++ i FuncCall scanf ExprList ""%d %d %d"" & ArrayRef a i & ArrayRef b i & ArrayRef c i Return 0 End",0
877,877,,1
621,621,FileAST Decl FuncDecl ParamList Decl m int Decl n int Decl ArrayDecl ArrayDecl a int 100 sum int FuncDef Decl FuncDecl main int Compound Decl m int Decl n int Decl i int Decl k int Decl j int Decl p int Decl ArrayDecl ArrayDecl a int 100 100 >> cin p For = i 1 <= i p ++ i Compound >> >> cin m n For = j 0 < j m ++ j Compound For = k 0 < k n ++ k Compound >> cin ArrayRef ArrayRef a j k End End << << cout FuncCall sum ExprList m n a endl End Return 0 End,1
917,917,,1
1021,1021,,1
817,817,,1
761,761,,1
725,725,"FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl m int Decl n int Decl h int Decl i int Decl j int Decl a int Decl b int Decl ArrayDecl ArrayDecl s int 100 100 Decl ArrayDecl r int 100 FuncCall scanf ExprList ""%d"" & k For DeclList Decl t int 0 <= t - k 1 ++ t Compound = h 0 FuncCall scanf ExprList ""%d%d"" & m & n For = i 0 <= i - m 1 ++ i Compound For = j 0 <= j - n 1 ++ j Compound FuncCall scanf ExprList ""%d"" & ArrayRef ArrayRef s i j End End For = a 0 <= a - n 1 ++ a Compound = h + + h ArrayRef ArrayRef s 0 a ArrayRef ArrayRef s - m 1 a End For = b 1 <= b - m 2 ++ b Compound = h + + h ArrayRef ArrayRef s b 0 ArrayRef ArrayRef s b - n 1 End = ArrayRef r t h End Return 0 End",1
795,795,,1
1043,1043,,1
434,434,"FileAST Decl FuncDecl m int FuncDef Decl FuncDecl main int Compound Decl k int Decl i int Decl sum int FuncCall scanf ExprList ""%d"" & k For = i 1 <= i k ++ i Compound = sum FuncCall m FuncCall printf ExprList ""%d\n"" sum End Return 0 End",0
675,675,FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl m int Decl n int Decl i int Decl j int Decl sum int >> cin k While -- k Compound = sum 0 >> >> cin m n Decl ArrayDecl ArrayDecl a int n m If == m 1 Compound For = i 0 < i n ++ i += sum * + * a i << << cout sum endl Continue End If == n 1 Compound << << cout sum endl Continue End << << cout sum endl End Return 0 End,1
1046,1046,,1
8,8,FileAST Typedef ll long Decl ArrayDecl a ll 64 Decl FuncDecl ParamList Decl n ll Decl m ll Decl ArrayDecl x ll Decl ArrayDecl y ll Decl ArrayDecl z ll hanoi void Decl ArrayDecl x ll 64 Decl ArrayDecl y ll 64 Decl ArrayDecl z ll 64 FuncDef Decl FuncDecl main int Compound Decl n ll Decl m ll Decl t int = ArrayRef a 0 1 For DeclList Decl i int 1 <= i 63 ++ i = ArrayRef a i * ArrayRef a - i 1 2 >> cin t While -- t Compound = ArrayRef x 0 = ArrayRef y 0 = ArrayRef z 0 1 >> >> cin n m FuncCall hanoi ExprList n m x y z << cout - ArrayRef x 0 1 << cout endl << cout - ArrayRef y 0 1 << cout endl << cout - ArrayRef z 0 1 << cout endl End Return 0 End,0
903,903,,1
158,158,FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl m int Decl n int >> cin k While > k 0 Compound >> >> cin m n Decl ArrayDecl ArrayDecl num int 110 110 InitList 0 Decl PtrDecl ArrayDecl p int 110 Decl sum int 0 Decl i int Decl j int = p num = p num For = i 1 < i - m 1 ++ i = sum + sum * + * + p i 0 << << cout sum endl -- k End Return 0 End,0
547,547,"FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl i int Decl ArrayDecl ArrayDecl sz int 100 100 Decl sum int Decl ArrayDecl s int 100 Decl a int Decl b int Decl m int Decl n int FuncCall scanf ExprList ""%d"" & k For = i 1 <= i k ++ i Compound FuncCall printf ExprList ""%d\n"" ArrayRef s i End Return 0 End",1
123,123,FileAST FuncDef Decl FuncDecl main int Compound Decl idx int 100 Decl i int 100 Decl j int 100 Decl lines int 100 Decl fun_name int 100 Decl None int 100 Decl N int 100 Decl ArrayDecl ArrayDecl na int 101 101 Decl ArrayDecl ArrayDecl a int 101 101 For = i 1 < i n ++ i Compound For = j 0 < j n ++ j Compound += ArrayRef ArrayRef a i j + ArrayRef ArrayRef a - i 1 j ArrayRef ArrayRef a - i 1 - - n 1 j End End Return 0 End,0
523,523,FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl m int Decl n int Decl i int Decl j int Decl p int 0 Decl ArrayDecl ArrayDecl num int 100 100 Decl sum int 0 >> cin k While < p k Compound >> >> cin m n For = i 1 < i - m 1 ++ i Compound += sum ArrayRef ArrayRef num i 0 += sum ArrayRef ArrayRef num i - n 1 End << << cout sum endl = sum 0 ++ p End Return 0 End,0
998,998,,1
33,33,"FileAST Typedef LL long FuncDef Decl FuncDecl main int Compound Decl ArrayDecl a LL 21 Decl i int Decl n int = ArrayRef a 1 0 = ArrayRef a 2 1 While >> cin n Compound For = i 3 < i + n 1 ++ i Compound = ArrayRef a i * - i 1 + ArrayRef a - i 1 ArrayRef a - i 2 End FuncCall printf ExprList ""%lld\n"" ArrayRef a n End Return 0 End",0
225,225,"FileAST FuncDef Decl FuncDecl main int Compound Decl N int Decl m int Decl n int Decl i int Decl M int Decl j int Decl ArrayDecl ArrayDecl JU int 100 100 Decl h int Decl l int FuncCall scanf ExprList ""%d"" & n For = i 0 < i n ++ i Compound = m 0 FuncCall scanf ExprList ""%d %d"" & m & n For = h 0 < h m ++ h Compound For = l 0 < l n ++ l Compound FuncCall scanf ExprList ""%d"" & ArrayRef ArrayRef ju h l End End If == n 1 Compound For = j 0 < j m ++ j = m + m ArrayRef ArrayRef ju j 0 End If == m 1 Compound For = j 0 < j n ++ j = m + m ArrayRef ArrayRef ju 0 j End Compound For = h 0 < h m ++ h Compound If && > h 0 < h - m 1 Compound = m + + m ArrayRef ArrayRef ju h 0 ArrayRef ArrayRef ju h - n 1 End Compound For = j 0 < j n ++ j = m + m ArrayRef ArrayRef ju h j End End End FuncCall printf ExprList ""%d\n"" m End Return 0 End",0
481,481,FileAST FuncDef Decl FuncDecl main int Compound Decl idx int 100 Decl i int 100 Decl j int 100 Decl lines int 100 Decl fun_name int 100 Decl None int 100 Decl N int 100 Decl ArrayDecl x int 101 Decl ArrayDecl y int 101 Decl ArrayDecl ny int 101 Decl ArrayDecl ArrayDecl a int 101 101 For = i 0 < i n ++ i Compound For = j 0 < j n ++ j Compound = ArrayRef y i + ArrayRef y i * ArrayRef ArrayRef a i j ArrayRef x j End End Return 0 End,0
920,920,,1
175,175,FileAST FuncDef Decl FuncDecl main int Compound Decl a int Decl m int Decl d int Decl i int Decl ArrayDecl b int 13 InitList 0 31 28 31 30 31 30 31 31 30 31 30 31 Decl ArrayDecl c int 13 InitList 0 31 29 31 30 31 30 31 31 30 31 30 31 Decl s int 0 >> >> >> cin a m d If || != % a 4 0 && == % a 100 0 != % a 400 0 For = i 1 < i m ++ i += s ArrayRef b i << cout + s d Return 0 End,0
892,892,,1
574,574,FileAST FuncDef Decl FuncDecl main int Compound Decl n int Decl a int Decl b int Decl i int Decl j int Decl sum int Decl ArrayDecl ArrayDecl c int 100 100 >> cin n While > n 0 Compound >> >> cin a b = sum 0 For = i 0 < i a ++ i Compound For = j 0 < j b ++ j >> cin ArrayRef ArrayRef c i j End Decl PtrDecl ArrayDecl p int 100 = p c << << cout sum endl -- n End Return 0 End,1
894,894,,1
557,557,FileAST Decl k int Decl m int Decl n int Decl ArrayDecl ArrayDecl a int 100 100 Decl i int Decl j int Decl sum int 0 FuncDef Decl FuncDecl main int Compound >> cin k While > k 0 Compound -- k >> >> cin m n If || || || == m 1 == m 2 == n 1 == n 2 Compound End Compound For = j 1 <= j n ++ j += sum ArrayRef ArrayRef a m j End << << cout sum endl = sum 0 End End,1
291,291,"FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl n int 500 Decl i int Decl j int Decl x int Decl k int Decl ArrayDecl ArrayDecl ArrayDecl a int 100 100 100 Decl ArrayDecl ArrayDecl b int 2 500 FuncCall scanf ExprList ""%d"" & k For = i 0 < i k ++ i FuncCall printf ExprList ""%d\n"" ArrayRef n i Return 0 End",0
109,109,"FileAST FuncDef Decl FuncDecl main int Compound Decl m int Decl n int Decl k int Decl sum int 0 Decl a int Decl i int Decl j int Decl q int Decl ArrayDecl b int 100 Decl ArrayDecl ArrayDecl s int 100 100 FuncCall scanf ExprList ""%d"" & k For = q 1 <= q k ++ q Compound FuncCall printf ExprList ""%d\n"" ArrayRef b q End Return 0 End",0
1009,1009,,1
220,220,"FileAST Decl MAXN int 305 Decl INF int << 1 29 Decl n int Decl m int Decl ArrayDecl a int maxn Decl ArrayDecl ArrayDecl f int maxn maxn FuncDef Decl FuncDecl main int Compound While != FuncCall scanf ExprList ""%d%d"" & n & m eof Compound For DeclList Decl i int 1 <= i n ++ i Compound = ArrayRef ArrayRef f i i 0 For DeclList Decl j int + i 1 <= j n ++ j = ArrayRef ArrayRef f i j = ArrayRef ArrayRef f j i inf End Decl ans int inf FuncCall printf ExprList ""%d\n"" / * ans 100 - n 1 End End",0
121,121,FileAST FuncDef Decl FuncDecl main int Compound Decl m int Decl n int Decl t int >> cin t While -- t Compound Decl ArrayDecl ArrayDecl a int 100 100 Decl sum int 0 >> >> cin m n For DeclList Decl i int 1 < i - n 1 ++ i Compound If > m 1 += sum + * + * a i * + * - + a m 1 i += sum * + * a i End << << cout sum endl End Return 0 End,0
1016,1016,,1
235,235,FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl n int Decl m int Decl sum int >> cin k Decl ArrayDecl ArrayDecl a int 100 100 For DeclList Decl l int 1 <= l k ++ l Compound >> >> cin m n For DeclList Decl i int 0 < i m ++ i Compound For DeclList Decl j int 0 < j n ++ j >> cin ArrayRef ArrayRef a i j End = sum 0 If > m 1 Compound For DeclList Decl i int 0 < i n ++ i = sum + sum * + * a i For DeclList Decl i int 0 < i n ++ i = sum + sum * + * - + a m 1 i End If == m 1 Compound For DeclList Decl i int 0 < i n ++ i = sum + sum * + * a i End If > n 1 Compound For DeclList Decl i int 1 < i - m 1 ++ i = sum + sum * * + a i For DeclList Decl i int 1 < i - m 1 ++ i = sum + sum * - + * + a i n 1 End If == n 1 Compound For DeclList Decl i int 1 < i - m 1 ++ i = sum + sum * * + a i End << << cout sum endl End Return 0 End,0
1024,1024,,1
834,834,,1
228,228,FileAST FuncDef Decl FuncDecl ParamList Decl n int Decl m int bianyuan int Compound Decl ArrayDecl ArrayDecl juzhen int 100 100 Decl i int Decl j int Decl result int = result 0 For = j 0 < j m ++ j Compound += result ArrayRef ArrayRef juzhen 0 j End Return result End Decl FuncDecl main int,0
677,677,FileAST Typedef ll long Decl mod int + 1e9 7 Decl ArrayDecl a ll 123456 Decl ArrayDecl b ll 123456 Decl ArrayDecl asum ll 123456 Decl ArrayDecl bsum ll 123456 FuncDef Decl FuncDecl main int Compound Decl n int >> cin n For DeclList Decl i int 1 <= i n ++ i Compound >> cin ArrayRef b i = ArrayRef bsum i + ArrayRef bsum - i 1 ArrayRef b i End Decl ans ll 0 << cout endl Return 0 End,1
398,398,FileAST Decl FuncDecl ParamList Decl m int Decl n int juzhen int FuncDef Decl FuncDecl main int Compound Decl k int Decl m int Decl n int Decl t int >> cin k For = t 1 <= t k ++ t Compound >> >> cin m n << << cout FuncCall juzhen ExprList m n endl End Return 0 End,0
412,412,FileAST Typedef ll long Decl maxn int + 5e6 10 FuncDef Decl FuncDecl main int Compound Decl t int >> cin t Decl a ll Decl ArrayDecl s char 123 While -- t Compound >> cin a Decl g int 0 FuncCall memset ExprList s 0 sizeof s While a Compound If & a 1 Compound = ArrayRef s ++ g '1' End = ArrayRef s ++ g '0' >>= a 1 End Decl m int 0 While == ArrayRef s m 0 Compound ++ m End Decl ans ll 1 = a 0 For DeclList Decl i int - g 1 >= i m -- i Compound += a * - ArrayRef s i '0' ans *= ans 2 End << << cout a endl End Return 0 End,0
699,699,FileAST Decl ArrayDecl a int 510 Decl ArrayDecl ans int 1010 FuncDef Decl FuncDecl main int Compound Decl t int >> cin t While -- t Compound Decl n int >> cin n FuncCall memset ExprList ans 0 sizeof ans For DeclList Decl i int 1 <= i n ++ i >> cin ArrayRef a i Decl flag int 1 Decl cnt int 1 While && flag <= cnt - n 3 Compound ++ cnt = flag 0 End = flag 1 << cout endl End Return 0 End,1
615,615,FileAST Decl ArrayDecl a int 12 Decl ArrayDecl b int 12 FuncDef Decl FuncDecl ParamList Decl x int Decl y int path void Compound Decl i int Decl j int Decl n1 int Decl n2 int Decl t int 0 = ArrayRef a 1 x For = i 2 <= i n1 ++ i Compound = ArrayRef a i - + / + - ArrayRef a - i 1 Cast Typename TypeDecl int FuncCall pow ExprList 2.0 Cast Typename TypeDecl double + - n1 i 1 2 2 Cast Typename TypeDecl int FuncCall pow ExprList 2.0 Cast Typename TypeDecl double - n1 i 1 End = ArrayRef b 1 y End Decl FuncDecl main int,1
937,937,,1
205,205,FileAST FuncDef Decl FuncDecl main int Compound Decl n int Decl a int Decl b int Decl i int Decl j int Decl sum int Decl ArrayDecl ArrayDecl c int 100 100 >> cin n While > n 0 Compound >> >> cin a b = sum 0 Decl PtrDecl ArrayDecl p int 100 = p c For = j 1 < j - a 1 ++ j += sum + * * + p j * - + * + p j b 1 << << cout sum endl -- n End Return 0 End,0
661,661,FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl ArrayDecl a int 100 100 Decl k int Decl m int Decl n int Decl i int Decl j int Decl sum int Decl num int >> cin k While -- k Compound = num 0 = sum 0 >> >> cin m n For = i 0 < i m ++ i For = j 0 < j n ++ j Compound >> cin ArrayRef ArrayRef a i j += num ArrayRef ArrayRef a i j End If || || == m 1 == n 1 && == m 1 == n 1 << << cout num endl Compound = sum - - - - sum ArrayRef ArrayRef a 0 0 ArrayRef ArrayRef a 0 - n 1 ArrayRef ArrayRef a - m 1 0 ArrayRef ArrayRef a - m 1 - n 1 << << cout sum endl End End Return 0 End,1
399,399,"FileAST Typedef LL long FuncDef Decl FuncDecl main int Compound Decl n int Decl m int While ~ FuncCall scanf ExprList ""%d %d"" & m & n Compound Decl i int Decl ArrayDecl a int 20001 Decl sum int = sum + m n For = i 0 < i m ++ i FuncCall scanf ExprList ""%d"" & ArrayRef a i FuncCall sort ExprList a + + a n m FuncCall printf ExprList ""%d"" ArrayRef a 0 FuncCall printf ExprList ""\n"" End Return 0 End",0
993,993,,1
218,218,"FileAST FuncDef Decl FuncDecl main int Compound Decl y int Decl m int Decl d int Decl sum int 0 Decl i int 0 Decl ArrayDecl n int 12 = sum 0 FuncCall scanf ExprList ""%d%d%d"" & y & m & d If && == % y 4 0 != % y 100 0 Compound = ArrayRef n 0 31 = ArrayRef n 1 29 = ArrayRef n 2 31 = ArrayRef n 3 30 = ArrayRef n 4 31 = ArrayRef n 5 30 = ArrayRef n 6 31 = ArrayRef n 7 31 = ArrayRef n 8 30 = ArrayRef n 9 31 = ArrayRef n 10 30 = ArrayRef n 11 31 For = i 0 < i - m 1 ++ i Compound += sum ArrayRef n i End += sum d FuncCall printf ExprList ""%d\n"" sum End If && && == % y 4 0 == % y 100 0 != % y 400 0 Compound = ArrayRef n 0 31 = ArrayRef n 1 28 = ArrayRef n 2 31 = ArrayRef n 3 30 = ArrayRef n 4 31 = ArrayRef n 5 30 = ArrayRef n 6 31 = ArrayRef n 7 31 = ArrayRef n 8 30 = ArrayRef n 9 31 = ArrayRef n 10 30 = ArrayRef n 11 31 += sum d FuncCall printf ExprList ""%d\n"" sum End If && && == % y 4 0 == % y 100 0 == % y 400 0 Compound = ArrayRef n 0 31 = ArrayRef n 1 29 = ArrayRef n 2 31 = ArrayRef n 3 30 = ArrayRef n 4 31 = ArrayRef n 5 30 = ArrayRef n 6 31 = ArrayRef n 7 31 = ArrayRef n 8 30 = ArrayRef n 9 31 = ArrayRef n 10 30 = ArrayRef n 11 31 += sum d FuncCall printf ExprList ""%d\n"" sum End If != % y 4 0 Compound = ArrayRef n 0 31 = ArrayRef n 1 28 = ArrayRef n 2 31 = ArrayRef n 3 30 = ArrayRef n 4 31 = ArrayRef n 5 30 = ArrayRef n 6 31 = ArrayRef n 7 31 = ArrayRef n 8 30 = ArrayRef n 9 31 = ArrayRef n 10 30 = ArrayRef n 11 31 = sum + sum d FuncCall printf ExprList ""%d\n"" sum End Return 0 End",0
1,1,FileAST FuncDef Decl FuncDecl ParamList Decl n int Decl m int bianyuan int Compound Decl ArrayDecl ArrayDecl juzhen int 100 100 Decl i int Decl j int Decl result int = result 0 For = i 1 < i - n 1 ++ i Compound += result ArrayRef ArrayRef juzhen i 0 End Return result End Decl FuncDecl main int,0
973,973,,1
84,84,FileAST FuncDef Decl FuncDecl main int Compound Decl n int Decl ArrayDecl ArrayDecl a int 100 100 Decl row int Decl col int Decl sum int 0 >> cin n For DeclList Decl i int 0 < i n ++ i Compound = sum 0 >> >> cin row col For DeclList Decl i int 0 < i row ++ i For DeclList Decl j int 0 < j col ++ j >> cin ArrayRef ArrayRef a i j If && == row 1 == col 1 << cout * ArrayRef a 0 Compound For DeclList Decl i int 0 < i col ++ i Compound += sum * + ArrayRef a 0 i += sum * + ArrayRef a - row 1 i End For DeclList Decl j int 1 < j - row 1 ++ j Compound += sum * ArrayRef a j += sum * - + ArrayRef a j col 1 End << << cout sum endl End End Return 0 End,0
1026,1026,,1
506,506,FileAST FuncDef Decl FuncDecl ParamList Decl m int Decl n int juzhen int Compound Decl ArrayDecl ArrayDecl a int 100 100 Decl s int 0 Decl i int Decl j int For = i - m 1 > i 1 -- i += s ArrayRef ArrayRef a i 1 Return s End Decl FuncDecl main int,0
671,671,FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl m int Decl n int Decl i int Decl j int Decl ArrayDecl ArrayDecl a int 100 100 Decl sum int 0 >> cin k While >> >> cin m n Compound For = i 0 < i m ++ i For = j 0 < j n ++ j >> cin ArrayRef ArrayRef a i j If && >= m 3 >= n 3 Compound End Compound End << << cout sum endl = sum 0 End Return 0 End,1
979,979,,1
712,712,FileAST Decl k int Decl m int Decl n int Decl ArrayDecl ArrayDecl a int 100 100 Decl i int Decl j int Decl sum int 0 FuncDef Decl FuncDecl main int Compound >> cin k While > k 0 Compound -- k >> >> cin m n If || || || == m 1 == m 2 == n 1 == n 2 Compound End Compound For = i 2 < i m ++ i += sum ArrayRef ArrayRef a i n End << << cout sum endl = sum 0 End End,1
865,865,,1
640,640,FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl m int Decl n int Decl ArrayDecl ArrayDecl a int 100 100 Decl sum int Decl p int Decl q int Decl i int Decl j int Decl h int >> cin k For = h 1 <= h k ++ h Compound >> >> cin m n = p 0 = q 0 For = i 1 <= i m ++ i Compound For = j 1 <= j n ++ j Compound >> cin ArrayRef ArrayRef a i j = p + p ArrayRef ArrayRef a i j End End For = i 2 < i m ++ i Compound For = j 2 < j n ++ j = q + q ArrayRef ArrayRef a i j End = sum - p q << << cout sum endl End Return 0 End,1
797,797,,1
703,703,"FileAST Typedef LL long Decl ArrayDecl a LL 70 FuncDef Decl FuncDecl ParamList Decl x LL calc LL Compound If == x 0 Return 0 Decl sum LL 0 For DeclList Decl i int 1 <= i 60 ++ i Compound If == ArrayRef a i x Return + / x 2 1 If < x ArrayRef a i Compound += sum - x ArrayRef a - i 1 += sum FuncCall calc ExprList - ArrayRef a i x Break End End Return sum End FuncDef Decl FuncDecl main int Compound Decl T int Decl L long Decl R long FuncCall scanf ExprList ""%d"" & t = ArrayRef a 0 0 For DeclList Decl i int 1 <= i 60 ++ i Compound = ArrayRef a i + * ArrayRef a - i 1 2 1 End While -- t Compound FuncCall scanf ExprList ""%I64d%I64d"" & l & r FuncCall printf ExprList ""%I64d\n"" - FuncCall calc ExprList r FuncCall calc ExprList - l 1 End Return 0 End",1
284,284,FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl m int Decl n int Decl i int Decl j int Decl sum int >> cin k While -- k Compound = sum 0 >> >> cin m n Decl ArrayDecl ArrayDecl a int n m If == m 1 Compound << << cout sum endl Continue End If == n 1 Compound << << cout sum endl Continue End For = i 0 < i n ++ i Compound += sum * + * a i += sum * + * - + a m 1 i End << << cout sum endl End Return 0 End,0
662,662,"FileAST Decl FuncDecl ParamList Typename TypeDecl void mk void FuncDef Decl FuncDecl main int Compound Decl p int Decl q int Decl i int FuncCall scanf ExprList ""%d"" & p For = q 0 < q p ++ q Compound FuncCall mk End Return 0 End",1
607,607,"FileAST Decl N int 89 Decl ArrayDecl ArrayDecl num char n 67 Decl ArrayDecl ArrayDecl ArrayDecl ArrayDecl dp char n 62 62 62 Decl FuncDecl ParamList Decl ArrayDecl a char n Decl ArrayDecl b char n sum void Decl FuncDecl ParamList Decl ArrayDecl a char n Decl ArrayDecl b char n Copy void FuncDef Decl FuncDecl main int Compound FuncCall memset ExprList dp 0 sizeof dp = ArrayRef ArrayRef ArrayRef ArrayRef dp 0 0 0 0 = ArrayRef ArrayRef ArrayRef ArrayRef dp 0 0 0 1 1 For DeclList Decl i int 1 <= i 60 ++ i Compound For DeclList Decl j int 0 <= j i ++ j Compound For DeclList Decl k int 0 <= k j ++ k Compound If && && >= - i 1 0 >= - i 1 j >= j k Compound FuncCall sum ExprList ArrayRef ArrayRef ArrayRef dp i j k ArrayRef ArrayRef ArrayRef dp - i 1 j k End If && && >= - j 1 0 >= i - j 1 >= - j 1 k Compound FuncCall sum ExprList ArrayRef ArrayRef ArrayRef dp i j k ArrayRef ArrayRef ArrayRef dp i - j 1 k End If && && >= - k 1 0 >= i j >= j - k 1 Compound FuncCall sum ExprList ArrayRef ArrayRef ArrayRef dp i j k ArrayRef ArrayRef ArrayRef dp i j - k 1 End If && == i j == j k Compound FuncCall copy ExprList ArrayRef num i ArrayRef ArrayRef ArrayRef dp i j k End End End End Decl n int While ~ FuncCall scanf ExprList ""%d"" & n Compound FuncCall puts ExprList ""\n"" End Return 0 End",1
889,889,,1
61,61,"FileAST Typedef LL long FuncDef Decl FuncDecl main int Compound Decl ArrayDecl f long 55 = ArrayRef f 1 1 = ArrayRef f 2 2 For DeclList Decl i int 3 < i 55 ++ i Compound = ArrayRef f i + ArrayRef f - i 1 ArrayRef f - i 2 End Decl t int FuncCall scanf ExprList ""%d"" & t While -- t Compound Decl n int Decl m int FuncCall scanf ExprList ""%d%d"" & n & m FuncCall printf ExprList ""%lld\n"" ArrayRef f - m n End Return 0 End",0
854,854,,1
134,134,"FileAST FuncDef Decl FuncDecl main int Compound Decl x int Decl y int Decl ArrayDecl m int 11 Decl ArrayDecl n int 11 Decl i int Decl j int Decl k int FuncCall scanf ExprList ""%d%d"" & x & y = ArrayRef m 0 x = ArrayRef n 0 y For = i 1 < i 11 ++ i Compound = ArrayRef m i / ArrayRef m - i 1 2 = ArrayRef n i / ArrayRef n - i 1 2 End Compound FuncCall printf ExprList ""%d"" ArrayRef n j = j 11 = i 11 End End",0
154,154,"FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl ArrayDecl a int 100 100 Decl ArrayDecl b int 100 Decl m int Decl j int Decl r int Decl n int Decl k int Decl p int FuncCall scanf ExprList ""%d"" & p For = m 0 < m p ++ m Compound FuncCall printf ExprList ""%d\n"" ArrayRef b m End Return 0 End",0
354,354,"FileAST FuncDef Decl FuncDecl ParamList Typename TypeDecl void mk void Compound Decl m int Decl n int Decl i int Decl j int Decl k int Decl s int 0 Decl ArrayDecl ArrayDecl a int 100 100 FuncCall scanf ExprList ""%d %d"" & m & n = s 0 For = k - n 2 >= k 0 -- k Compound += s ArrayRef ArrayRef a - m 1 k End FuncCall printf ExprList ""%d\n"" s End Decl FuncDecl main int",0
82,82,"FileAST Typedef ll long Decl mod int + 1e9 7 Decl n int Decl k int Decl ArrayDecl f ll 100010 Decl ArrayDecl ans ll 100010 Decl ArrayDecl tmp ll 100010 Decl ArrayDecl x ll 100010 Decl FuncDecl ParamList Decl PtrDecl ans ll Decl PtrDecl x ll dirichlet void Decl FuncDecl qpower void FuncDef Decl FuncDecl solve void Compound For DeclList Decl i int 1 <= i n ++ i Compound FuncCall scanf ExprList ""%lld"" & ArrayRef f i = ArrayRef ans i 0 = ArrayRef x i 1 End = ArrayRef ans 1 1 FuncCall qpower End Decl FuncDecl main int",0
346,346,FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl year int 2 InitList 365 366 Decl ArrayDecl ArrayDecl month int 12 2 InitList 31 28 31 30 31 30 31 31 30 31 30 31 31 29 31 30 31 30 31 31 30 31 30 31 Decl y int Decl m int Decl d int >> >> >> cin y m d Decl type int If || && == % y 4 0 != % y 100 0 == % y 400 0 Compound = type 1 End Compound = type 0 End Decl i int Decl sum int 0 For = i 0 < i - m 1 ++ i Compound += sum ArrayRef ArrayRef month type i End += sum d << << cout sum endl Return 0 End,0
844,844,,1
38,38,"FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl m int Decl n int Decl i int Decl ArrayDecl a int 10000 Decl ArrayDecl sum int 10000 Decl y int Decl j int FuncCall scanf ExprList ""%d"" & k For = i 1 <= i k ++ i FuncCall printf ExprList ""%d\n"" ArrayRef sum - i 1 Return 0 End",0
601,601,"FileAST Typedef LL long FuncDef Decl FuncDecl main int Compound Decl n int Decl m int Decl i int Decl j int Decl count int Decl t int Decl s1 double Decl s2 double Decl ArrayDecl ArrayDecl stu int 6 55 Decl ArrayDecl ave1 double 6 Decl ArrayDecl ave2 double 6 While ~ FuncCall scanf ExprList ""%d%d"" & n & m Compound Decl flag int 0 = count = t 0 For = i 0 < i n ++ i For = j 0 < j m ++ j FuncCall scanf ExprList ""%d"" & ArrayRef ArrayRef stu i j FuncCall printf ExprList ""\n"" = flag 0 FuncCall printf ExprList ""\n"" FuncCall printf ExprList ""%d\n\n"" count End Return 0 End",1
454,454,"FileAST Decl FuncDecl main int FuncDef Decl FuncDecl ParamList Decl x int Decl y int sum int Compound Decl ArrayDecl ArrayDecl b int 100 100 Decl sum int 0 Decl i int Decl j int For = i 0 < i x ++ i For = j 0 < j y ++ j FuncCall scanf ExprList ""%d"" & ArrayRef ArrayRef b i j = sum + sum ArrayRef ArrayRef b i j Return sum End",0
330,330,"FileAST Decl MAXN int 1005 Decl ArrayDecl trp int maxn FuncDef Decl FuncDecl main int Compound Decl r int Decl n int While true Compound FuncCall scanf ExprList ""%d%d"" & r & n If && == r - 1 == n - 1 Break For DeclList Decl i int 0 < i n ++ i FuncCall scanf ExprList ""%d"" & ArrayRef trp i FuncCall sort ExprList trp + trp n Decl cur int 0 Decl ans int 0 While < cur n Compound While < cur n Compound Decl s int ArrayRef trp ++ cur While && < cur n <= ArrayRef trp cur + s r ++ cur Decl p int ArrayRef trp - cur 1 While && < cur n <= ArrayRef trp cur + p r ++ cur ++ ans End End FuncCall printf ExprList ""%d\n"" ans End End",0
313,313,FileAST FuncDef Decl FuncDecl main int Compound Decl idx int 100 Decl i int 100 Decl j int 100 Decl lines int 100 Decl fun_name int 100 Decl None int 100 Decl N int 100 Decl ArrayDecl ArrayDecl na int 101 101 Decl ArrayDecl ArrayDecl a int 101 101 For = i 0 < i n ++ i For = j 1 < j n ++ j = ArrayRef ArrayRef a i j + ArrayRef ArrayRef a j i ArrayRef ArrayRef a i i Return 0 End,0
879,879,,1
623,623,"FileAST Decl ArrayDecl a double 12345 Decl x double Decl ans double Decl sum double FuncDef Decl FuncDecl main int Compound Decl n int While >> cin n Compound = sum 1 >> cin ArrayRef a 0 For DeclList Decl i int 1 < i n ++ i Compound >> cin ArrayRef a i += sum / ArrayRef a 0 ArrayRef a i End = sum / 1.0 sum >> cin x = ans * * sum ArrayRef a 0 x FuncCall printf ExprList ""%.2f\n"" ans End Return 0 End",1
706,706,"FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl m int Decl n int Decl ArrayDecl ArrayDecl sz int 200 200 Decl result int 0 FuncCall scanf ExprList ""%d"" & k Decl i int Decl p int Decl q int For = i 0 < i k ++ i Compound FuncCall scanf ExprList ""%d%d"" & m & n For = p 0 < p m ++ p Compound For = q 0 < q n ++ q Compound FuncCall scanf ExprList ""%d"" & ArrayRef ArrayRef sz p q End If || == p 0 == p - m 1 Compound For = q 0 < q n ++ q Compound += result ArrayRef ArrayRef sz p q End End Compound += result ArrayRef ArrayRef sz p 0 += result ArrayRef ArrayRef sz p - n 1 End End FuncCall printf ExprList ""%d\n"" result = result 0 End Return 0 End",1
89,89,"FileAST Typedef ll long Decl tot int 1 Decl n int Decl m int Decl q int Decl ArrayDecl s int 15 Decl ArrayDecl t int 15 Decl ArrayDecl l int 15 Decl ArrayDecl r int 15 Decl ArrayDecl ArrayDecl dis int 22 22 Decl ArrayDecl ArrayDecl dp int 22 60010 FuncDef Decl FuncDecl main int Compound FuncCall scanf ExprList ""%d%d%d"" & n & m & q FuncCall memset ExprList dis 63 sizeof dis For DeclList Decl i int 1 <= i n ++ i Compound = ArrayRef ArrayRef dis i i 0 End FuncCall memset ExprList dp 63 sizeof dp = ArrayRef ArrayRef dp 0 1 0 Decl ans int 0 FuncCall printf ExprList ""%d\n"" ans Return 0 End",0
872,872,,1
131,131,"FileAST FuncDef Decl FuncDecl main int Compound Decl FuncDecl ParamList Decl ArrayDecl ArrayDecl array int 100 100 Decl x int Decl y int jisuan void Decl k int Decl i int Decl m int Decl n int Decl p int Decl q int Decl ArrayDecl ArrayDecl a int 100 100 FuncCall scanf ExprList ""%d"" & k For = i 0 < i k ++ i Compound FuncCall scanf ExprList ""%d%d"" & m & n For = p 0 < p m ++ p Compound For = q 0 < q n ++ q Compound FuncCall scanf ExprList ""%d"" & ArrayRef ArrayRef a p q End End FuncCall jisuan ExprList a m n End End Decl FuncDecl ParamList Decl ArrayDecl ArrayDecl array int 100 100 Decl x int Decl y int jisuan void",0
423,423,"FileAST Decl t int Decl m int Decl n int Decl i int Decl j int Decl k int Decl xx int Decl x1 int Decl x2 int Decl x int Decl y int Decl s int Decl n0 int FuncDef Decl FuncDecl ParamList Decl ArrayDecl a int Decl ArrayDecl b int init void Compound FuncCall freopen ExprList ""tt.in"" ""r"" stdin FuncCall scanf ExprList ""%d%d"" & m & n For = i 1 <= i n ++ i FuncCall scanf ExprList ""%d"" & ArrayRef b i End Decl FuncDecl ParamList Decl ArrayDecl a int Decl k int output void Decl FuncDecl ParamList Decl x int Decl y int proce void Decl FuncDecl main int",0
1040,1040,,1
287,287,"FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl days int 13 InitList 0 31 28 31 30 31 30 31 31 30 31 30 31 Decl year int Decl month int Decl day int Decl isleapyear int FuncCall scanf ExprList ""%d%d%d"" & year & month & day = isleapyear || && == % year 4 0 != % year 100 0 == % year 400 0 If && && isleapyear == month 2 || < day 1 > day 29 Compound FuncCall printf ExprList ""Illegal input.\n"" Return - 1 End If && && isleapyear != month 2 || < day 1 > day ArrayRef days month Compound FuncCall printf ExprList ""Illegal input.\n"" Return - 1 End If && ! isleapyear || < day 1 > day ArrayRef days month Compound FuncCall printf ExprList ""Illegal input.\n"" Return - 1 End Decl n int 0 Decl i int For = i 0 < i month ++ i Compound += n ArrayRef days i End += n day If && > month 2 isleapyear ++ n FuncCall printf ExprList ""%d"" n Return 0 End",0
281,281,"FileAST FuncDef Decl FuncDecl main int Compound Decl k int FuncCall scanf ExprList ""%d"" & k Decl i int Decl j int Decl p int Decl q int Decl ArrayDecl ArrayDecl N int 100 100 Decl m int Decl n int Decl sum int 0 For = i 1 <= i k ++ i Compound = sum 0 FuncCall scanf ExprList ""%d%d"" & m & n For = p 1 <= p m ++ p Compound For = q 1 <= q n ++ q Compound FuncCall scanf ExprList ""%d"" & ArrayRef ArrayRef n p q End End For = j 1 <= j n ++ j Compound += sum ArrayRef ArrayRef n 1 j End For = j 1 <= j n ++ j Compound += sum ArrayRef ArrayRef n m j End For = j 1 <= j m ++ j Compound += sum ArrayRef ArrayRef n j 1 End For = j 1 <= j m ++ j Compound += sum ArrayRef ArrayRef n j n End = sum - - - - sum ArrayRef ArrayRef n 1 1 ArrayRef ArrayRef n 1 n ArrayRef ArrayRef n m 1 ArrayRef ArrayRef n m n FuncCall printf ExprList ""%d\n"" sum End Return 0 End",0
59,59,"FileAST FuncDef Decl FuncDecl main int Compound Decl a int Decl b int Decl c int Decl d int Decl e int FuncCall scanf ExprList ""%d %d %d"" & a & b & c = d 0 Decl ArrayDecl days1 int 13 InitList 0 31 28 31 30 31 30 31 31 30 31 30 31 Decl ArrayDecl days2 int 13 InitList 0 31 29 31 30 31 30 31 31 30 31 30 31 If || && == % a 4 0 != % a 100 0 == % a 400 0 Compound For = e 0 < e b ++ e Compound = d + d ArrayRef days1 e End = d + d c End Compound = d + d c End = d - d 1 FuncCall printf ExprList ""%d"" d End",0
118,118,FileAST Typedef ll long Decl eps double 1e-9 Decl mod ll 998244353 Decl g ll 3 FuncDef Decl FuncDecl ParamList Decl a ll Decl n ll Pow ll Compound Decl ans ll 1 While n Compound If & n 1 = ans % * ans a mod >>= n 1 = a % * a a mod End Return ans End Decl ArrayDecl A ll << 1 20 Decl ArrayDecl B ll << 1 20 Decl FuncDecl ParamList Decl ArrayDecl A ll Decl len int rader void Decl FuncDecl ParamList Decl ArrayDecl A ll Decl len int Decl on int ntt void Decl n int Decl m int FuncDef Decl FuncDecl Conv void Compound Decl len int 1 While <= len * 2 n <<= len 1 FuncCall ntt ExprList a len 1 FuncCall ntt ExprList b len 1 For DeclList Decl i int 0 < i len ++ i Compound = ArrayRef a i % * ArrayRef a i ArrayRef b i mod End FuncCall ntt ExprList a len - 1 End Decl FuncDecl main int,0
58,58,"FileAST FuncDef Decl FuncDecl main int Compound Decl a int Decl b int Decl n int While ~ FuncCall scanf ExprList ""%d%d%d"" & a & b & n Compound If && && == a 0 == b 0 == n 0 Break Decl ArrayDecl arr int 48 = ArrayRef arr 1 1 = ArrayRef arr 2 1 For DeclList Decl i int 3 < i 48 ++ i = ArrayRef arr i % + * a ArrayRef arr - i 1 * b ArrayRef arr - i 2 7 FuncCall printf ExprList ""%d\n"" ArrayRef arr % n 48 End End",0
787,787,,1
23,23,"FileAST Typedef LL long FuncDef Decl FuncDecl main int Compound Decl n int Decl m int Decl ArrayDecl a int 128 Decl ArrayDecl b int 128 Decl i int Decl j int While ExprList FuncCall scanf ExprList ""%d %d"" & n & m || n m Compound For = i 0 < i n ++ i FuncCall scanf ExprList ""%d"" & ArrayRef a i FuncCall sort ExprList a + a n FuncCall sort ExprList b + b m Decl f int 0 Decl j int 0 Decl sum int If == f n FuncCall printf ExprList ""NULL"" FuncCall printf ExprList ""\n"" End Return 0 End",0
537,537,FileAST FuncDef Decl FuncDecl main int Compound Decl t int >> cin t While > t 0 Compound Decl ArrayDecl ArrayDecl a int 102 102 Decl m int Decl n int >> >> cin m n Decl sum int 0 If == m 1 Compound End Compound For DeclList Decl i int 1 < i - m 1 ++ i = sum + + sum * * + a i * - + * + a i n 1 End << << cout sum endl -- t End Return 0 End,1
893,893,,1
653,653,"FileAST FuncDef Decl FuncDecl ParamList Decl m int Decl n int juzhen void Compound Decl ArrayDecl ArrayDecl a int 100 100 Decl i int Decl j int Decl sum int 0 For = i 0 < i m ++ i Compound For = j 0 < j n ++ j Compound FuncCall scanf ExprList ""%d"" + * + a i j End End If == m 1 Compound = sum 0 End If == n 1 Compound = sum 0 End FuncCall printf ExprList ""%d\n"" sum End Decl FuncDecl main int",1
820,820,,1
690,690,FileAST Typedef ll long Decl inf int 0x3f3f3f3f Decl maxn int + 4e5 10 Decl maxv int + 1e3 10 Decl eps double 1e-9 Decl mod ll 998244353 Decl g ll 3 FuncDef Decl FuncDecl ParamList Decl a ll Decl n ll Pow ll Compound Decl ans ll 1 While n Compound If & n 1 = ans % * ans a mod >>= n 1 = a % * a a mod End Return ans End Decl FuncDecl ParamList Decl ArrayDecl y ll Decl len int rader void Decl FuncDecl ParamList Decl ArrayDecl y ll Decl len int Decl on int ntt void Decl ArrayDecl inv ll maxn Decl ArrayDecl fac ll maxn Decl ArrayDecl f ll maxn Decl inv2 ll Decl ArrayDecl a ll maxn Decl ArrayDecl b ll maxn Decl ArrayDecl A ll maxn Decl n int Decl FuncDecl init void FuncDef Decl FuncDecl solve void Compound For DeclList Decl i int 0 < i n ++ i Compound = ArrayRef a i % * ArrayRef inv i FuncCall pow ExprList 2 - n i mod End FuncCall reverse ExprList + b 1 + + b 1 n = ArrayRef b n 0 End Decl FuncDecl Conv void Decl FuncDecl gao void Decl FuncDecl main int,1
327,327,"FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl m int Decl n int Decl i int Decl j int Decl l int Decl s int Decl ArrayDecl ArrayDecl sz int 100 100 FuncCall scanf ExprList ""%d"" & k Decl PtrDecl sf int Cast Typename PtrDecl TypeDecl int FuncCall malloc ExprList * sizeof Typename TypeDecl int k For = i 0 < i k ++ i Compound = s 0 FuncCall scanf ExprList ""%d %d"" & m & n For = j 0 < j m ++ j Compound For = l 0 < l n ++ l Compound FuncCall scanf ExprList ""%d"" & ArrayRef ArrayRef sz j l End End If == m 1 Compound For = l 0 < l n ++ l Compound += s ArrayRef ArrayRef sz 0 l End End If == n 1 Compound For = j 0 < j m ++ j Compound += s ArrayRef ArrayRef sz j 0 End End Compound For = j 0 < j m ++ j Compound += s + ArrayRef ArrayRef sz j 0 ArrayRef ArrayRef sz j - n 1 End For = l 0 < l n ++ l Compound += s + ArrayRef ArrayRef sz 0 l ArrayRef ArrayRef sz - m 1 l End = s - - - - s ArrayRef ArrayRef sz 0 0 ArrayRef ArrayRef sz 0 - n 1 ArrayRef ArrayRef sz - m 1 0 ArrayRef ArrayRef sz - m 1 - n 1 End = ArrayRef sf i s End Return 0 End",0
531,531,"FileAST Typedef LL long FuncDef Decl FuncDecl main int Compound Decl n int Decl i int Decl sum double Decl flag int 1 While != FuncCall scanf ExprList ""%d"" & n eof Compound If flag Compound FuncCall printf ExprList ""# Cards  Overhang\n"" = flag 0 End = sum 0 For = i 1 <= i n ++ i Compound = sum + sum / 1.0 * 2 i End FuncCall printf ExprList ""%5d     %.3lf\n"" n sum End Return 0 End",1
812,812,,1
845,845,,1
384,384,"FileAST FuncDef Decl FuncDecl main int Compound Decl y int Decl m int Decl d int Decl sum int 0 Decl i int 0 Decl ArrayDecl n int 12 = sum 0 FuncCall scanf ExprList ""%d%d%d"" & y & m & d If && == % y 4 0 != % y 100 0 Compound = ArrayRef n 0 31 = ArrayRef n 1 29 = ArrayRef n 2 31 = ArrayRef n 3 30 = ArrayRef n 4 31 = ArrayRef n 5 30 = ArrayRef n 6 31 = ArrayRef n 7 31 = ArrayRef n 8 30 = ArrayRef n 9 31 = ArrayRef n 10 30 = ArrayRef n 11 31 += sum d FuncCall printf ExprList ""%d\n"" sum End If && && == % y 4 0 == % y 100 0 != % y 400 0 Compound = ArrayRef n 0 31 = ArrayRef n 1 28 = ArrayRef n 2 31 = ArrayRef n 3 30 = ArrayRef n 4 31 = ArrayRef n 5 30 = ArrayRef n 6 31 = ArrayRef n 7 31 = ArrayRef n 8 30 = ArrayRef n 9 31 = ArrayRef n 10 30 = ArrayRef n 11 31 += sum d FuncCall printf ExprList ""%d\n"" sum End If && && == % y 4 0 == % y 100 0 == % y 400 0 Compound = ArrayRef n 0 31 = ArrayRef n 1 29 = ArrayRef n 2 31 = ArrayRef n 3 30 = ArrayRef n 4 31 = ArrayRef n 5 30 = ArrayRef n 6 31 = ArrayRef n 7 31 = ArrayRef n 8 30 = ArrayRef n 9 31 = ArrayRef n 10 30 = ArrayRef n 11 31 For = i 0 < i - m 1 ++ i Compound += sum ArrayRef n i End += sum d FuncCall printf ExprList ""%d\n"" sum End If != % y 4 0 Compound = ArrayRef n 0 31 = ArrayRef n 1 28 = ArrayRef n 2 31 = ArrayRef n 3 30 = ArrayRef n 4 31 = ArrayRef n 5 30 = ArrayRef n 6 31 = ArrayRef n 7 31 = ArrayRef n 8 30 = ArrayRef n 9 31 = ArrayRef n 10 30 = ArrayRef n 11 31 = sum + sum d FuncCall printf ExprList ""%d\n"" sum End Return 0 End",0
951,951,,1
999,999,,1
331,331,FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl m int Decl n int Decl ArrayDecl a int 100 Decl ArrayDecl sum int 100 >> cin k For DeclList Decl p int 0 < p k ++ p Compound << << cout ArrayRef sum p endl End Return 0 End,0
258,258,"FileAST Decl ArrayDecl ArrayDecl a char 6 27 InitList InitList ""00000"" InitList ""00001"" InitList ""00010"" InitList ""00011"" InitList ""00100"" InitList ""00101"" InitList ""00110"" InitList ""00111"" InitList ""01000"" InitList ""01001"" InitList ""01010"" InitList ""01011"" InitList ""01100"" InitList ""01101"" InitList ""01110"" InitList ""01111"" InitList ""10000"" InitList ""10001"" InitList ""10010"" InitList ""10011"" InitList ""10100"" InitList ""10101"" InitList ""10110"" InitList ""10111"" InitList ""11000"" InitList ""11001"" InitList ""11010"" Decl ArrayDecl ArrayDecl ans char 30 30 Decl ArrayDecl num char 1000 Decl ArrayDecl s char 100 FuncDef Decl FuncDecl main int Compound Decl t int Decl cas int 1 FuncCall scanf ExprList ""%d"" & t While -- t Compound Decl r int Decl c int FuncCall scanf ExprList ""%d%d"" & r & c FuncCall getchar FuncCall gets ExprList s FuncCall memset ExprList num '\0' sizeof num Decl i int 0 While != ArrayRef s i '\0' Compound If == ArrayRef s i ' ' FuncCall strcat ExprList num ArrayRef a 0 Compound Decl x int + - ArrayRef s i 'A' 1 FuncCall strcat ExprList num ArrayRef a x End ++ i End For DeclList Decl i int 0 < i 400 ++ i Compound FuncCall strcat ExprList num ""0"" End Decl tot int 0 Decl x int 0 Decl y int 0 = ArrayRef ArrayRef ans 0 0 ArrayRef num 0 While < tot - * r c 1 Compound While && < + y 1 c == ArrayRef ArrayRef ans x + y 1 '*' Compound = ArrayRef ArrayRef ans x ++ y ArrayRef num ++ tot End While && < + x 1 r == ArrayRef ArrayRef ans + x 1 y '*' Compound = ArrayRef ArrayRef ans ++ x y ArrayRef num ++ tot End While && >= - y 1 0 == ArrayRef ArrayRef ans x - y 1 '*' Compound = ArrayRef ArrayRef ans x -- y ArrayRef num ++ tot End While && >= - x 1 0 == ArrayRef ArrayRef ans - x 1 y '*' Compound = ArrayRef ArrayRef ans -- x y ArrayRef num ++ tot End End FuncCall printf ExprList ""%d "" ++ cas FuncCall printf ExprList ""\n"" End Return 0 End",0
108,108,"FileAST Typedef ll long Decl maxn int + 1e5 10 Decl n int Decl m int Decl c int Decl ArrayDecl a int maxn FuncDef Decl FuncDecl main int Compound While ~ FuncCall scanf ExprList ""%d"" & n Compound = ArrayRef a 0 0 Decl b int >> >> cin m c For DeclList Decl i int 1 <= i n ++ i Compound FuncCall scanf ExprList ""%d"" & b = ArrayRef a i + ArrayRef a - i 1 b End FuncCall sort ExprList a + + a n 1 Decl ans ll 0 << << cout ans endl End Return 0 End",0
719,719,"FileAST Typedef ll long Decl ArrayDecl a ll 100005 Decl ArrayDecl Left ll 100005 Decl ArrayDecl Right ll 100005 Decl Max ll FuncDef Decl FuncDecl main int Compound Decl t int Decl n int While ExprList >> cin n n Compound For DeclList Decl i int 1 <= i n ++ i FuncCall scanf ExprList ""%I64d"" & ArrayRef a i = ArrayRef left 1 1 = ArrayRef right n n = max 0 << << cout max endl End Return 0 End",1
669,669,"FileAST FuncDef Decl FuncDecl main int Compound Decl n int Decl m int Decl k int Decl sum int 0 Decl ArrayDecl a int 15 Decl ArrayDecl b int 15 FuncCall scanf ExprList ""%d%d%d"" & n & m & k For DeclList Decl i int 0 < i k ++ i FuncCall scanf ExprList ""%d"" & ArrayRef b i FuncCall printf ExprList ""%d\n"" / sum 2 End",1
735,735,"FileAST Typedef ll long Decl maxn int 1000010 Decl ArrayDecl s char maxn Decl ArrayDecl ArrayDecl C ll maxn 2 Decl ArrayDecl Hash ll maxn Decl seed int 13 Decl FuncDecl ParamList Decl x int lowbit int Decl FuncDecl init void Decl len int Decl FuncDecl ParamList Decl i int Decl pos int Decl data ll update void FuncDef Decl FuncDecl ParamList Decl i int Decl pos int get ll Compound Decl ans ll 0 While pos Compound += ans ArrayRef ArrayRef c i pos -= pos FuncCall lowbit ExprList pos End Return ans End FuncDef Decl FuncDecl ParamList Decl i int Decl l int Decl r int gethash ll Compound Return - FuncCall get ExprList i r FuncCall get ExprList i - l 1 End FuncDef Decl FuncDecl main int Compound FuncCall init While ~ FuncCall scanf ExprList ""%s"" + s 1 Compound FuncCall memset ExprList c 0 sizeof c Decl t int >> cin t = len FuncCall strlen ExprList + s 1 For DeclList Decl i int 1 <= i len ++ i Compound FuncCall update ExprList 0 i * - ArrayRef s i 'a' ArrayRef hash i FuncCall update ExprList 1 - + len 1 i * - ArrayRef s i 'a' ArrayRef hash - + len 1 i End While -- t Compound Decl c char FuncCall getchar FuncCall scanf ExprList ""%c"" & c If == c 'C' Compound Decl ArrayDecl b char 5 Decl a int FuncCall scanf ExprList ""%d%s"" & a b FuncCall update ExprList 0 a * - - ArrayRef s a 'a' ArrayRef hash a FuncCall update ExprList 0 a * - ArrayRef b 0 'a' ArrayRef hash a FuncCall update ExprList 1 - + len 1 a * - - ArrayRef s a 'a' ArrayRef hash - + len 1 a FuncCall update ExprList 1 - + len 1 a * - ArrayRef b 0 'a' ArrayRef hash - + len 1 a = ArrayRef s a ArrayRef b 0 End Compound Decl l int Decl r int FuncCall scanf ExprList ""%d%d"" & l & r If == * FuncCall gethash ExprList 0 l r ArrayRef hash - len l * FuncCall gethash ExprList 1 - + len 1 r - + len 1 l ArrayRef hash - r 1 FuncCall puts ExprList ""yes"" FuncCall puts ExprList ""no"" End End End Return 0 End",1
290,290,"FileAST FuncDef Decl FuncDecl main int Compound Decl n int Decl m int While >> >> cin n m Compound Decl i int Decl j int << cout ""+"" << << cout ""+"" endl For = i 1 <= i m ++ i Compound << cout ""|"" For = j 1 <= j n ++ j << cout "" "" << << cout ""|"" endl End << cout ""+"" << << cout ""+"" endl << cout endl End Return 0 End",0
651,651,"FileAST Decl n int Decl ArrayDecl a int 35 Decl ArrayDecl ans int 110 Decl num int Decl FuncDecl ParamList Decl x int find int Decl FuncDecl ParamList Decl pos int change void Decl FuncDecl solve void FuncDef Decl FuncDecl main int Compound Decl t int Decl cas int 1 FuncCall scanf ExprList ""%d"" & t While -- t Compound FuncCall scanf ExprList ""%d"" & n For DeclList Decl i int 1 <= i n ++ i FuncCall scanf ExprList ""%d"" & ArrayRef a i FuncCall solve FuncCall printf ExprList ""%d %d"" ++ cas num FuncCall puts ExprList """" End Return 0 End",1
783,783,,1
972,972,,1
242,242,"FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl a int 5 Decl ArrayDecl b int 5 Decl ArrayDecl c int 5 Decl ArrayDecl sum int 5 Decl i int For = i 0 < i 5 ++ i FuncCall printf ExprList ""%d\n"" ArrayRef sum i Return 0 End",0
815,815,,1
886,886,,1
881,881,,1
585,585,"FileAST FuncDef Decl FuncDecl main int Compound Decl n int 0 Decl x int 0 Decl y int 0 Decl total int 0 Decl ArrayDecl ArrayDecl Matrix int 100 100 InitList InitList 0 InitList 0 FuncCall scanf ExprList ""%d"" & n For DeclList Decl k int 0 < k n ++ k Compound FuncCall scanf ExprList ""%d %d"" & x & y For DeclList Decl i int 0 < i x ++ i For DeclList Decl j int 0 < j y ++ j Compound FuncCall scanf ExprList ""%d"" & ArrayRef ArrayRef matrix i j If || == i 0 == i - x 1 += total ArrayRef ArrayRef matrix i j If || == j 0 == j - y 1 += total ArrayRef ArrayRef matrix i j End FuncCall printf ExprList ""%d\n"" total = total 0 End Return 0 End",1
775,775,,1
957,957,,1
717,717,"FileAST FuncDef Decl FuncDecl main int Compound Decl year int Decl month int Decl day int Decl i int Decl sum int 0 Decl m int 0 FuncCall scanf ExprList ""%d%d%d"" & year & month & day If || && == % year 4 0 != % year 100 0 == % year 400 0 Compound Decl ArrayDecl M int 13 = ArrayRef m 1 = ArrayRef m 3 = ArrayRef m 5 = ArrayRef m 7 = ArrayRef m 8 = ArrayRef m 10 = ArrayRef m 12 31 = ArrayRef m 4 = ArrayRef m 6 = ArrayRef m 9 = ArrayRef m 11 30 = ArrayRef m 2 29 = ArrayRef m 0 0 For = i 0 < i month ++ i Compound = m + m ArrayRef m i End = sum + m day End Compound Decl ArrayDecl N int 13 = ArrayRef n 1 = ArrayRef n 3 = ArrayRef n 5 = ArrayRef n 7 = ArrayRef n 8 = ArrayRef n 10 = ArrayRef n 12 31 = ArrayRef n 4 = ArrayRef n 6 = ArrayRef n 9 = ArrayRef n 11 30 = ArrayRef n 2 28 = ArrayRef n 0 0 = sum + m day End FuncCall printf ExprList ""%d"" sum Return 0 End",1
580,580,FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl m int Decl n int Decl i int Decl j int Decl l int Decl ArrayDecl ArrayDecl b int 101 101 Decl ArrayDecl sum int 1000 >> cin k For = l 1 <= l k ++ l Compound >> >> cin m n For = i 1 <= i m ++ i Compound For = j 1 <= j n ++ j Compound >> cin ArrayRef ArrayRef b i j End End = ArrayRef sum l 0 For = j 1 <= j n ++ j += ArrayRef sum l ArrayRef ArrayRef b 1 j For = j 1 <= j n ++ j += ArrayRef sum l ArrayRef ArrayRef b m j For = i 2 < i m ++ i += ArrayRef sum l ArrayRef ArrayRef b i 1 For = i 2 < i m ++ i += ArrayRef sum l ArrayRef ArrayRef b i n End If == k 1 << cout ArrayRef sum 1 Compound << cout ArrayRef sum 1 End Return 0 End,1
665,665,"FileAST Decl MAXN int 35 FuncDef Decl FuncDecl main int Compound Decl ArrayDecl s char 100 Decl ArrayDecl total int maxn Decl ArrayDecl ArrayDecl word int 100 maxn FuncCall memset ExprList total 0 sizeof total Decl max_t int ArrayRef total 0 FuncCall memset ExprList word 0 sizeof word For DeclList Decl i int 0 <= i 25 ++ i Compound If == i 0 FuncCall printf ExprList ""%c"" + i 'A' FuncCall printf ExprList "" %c"" + i 'A' End FuncCall printf ExprList ""\n"" End",1
251,251,"FileAST FuncDef Decl FuncDecl ParamList Decl argc int Decl ArrayDecl PtrDecl argv char main int Compound Decl year int Decl month int Decl day int FuncCall scanf ExprList ""%d%d%d"" & year & month & day Decl n int 0 Decl ArrayDecl days int 13 InitList 0 31 28 31 30 31 30 31 31 30 31 30 31 Decl i int For = i 0 < i month ++ i Compound = n + ArrayRef days i n End = n + day n If || && == % year 100 0 == % year 400 0 && != % year 100 0 == % year 4 0 ++ n FuncCall printf ExprList ""%d\n"" n Return 0 End",0
371,371,FileAST Typedef ll long Decl maxn int 50000 Decl ArrayDecl a ll maxn FuncDef Decl FuncDecl init void Compound = ArrayRef a 0 1 = ArrayRef a 1 2 = ArrayRef a 2 4 = ArrayRef a 3 8 For DeclList Decl i int 1 < i maxn ++ i Compound = ArrayRef a i + - * i i i 2 End End Decl FuncDecl main int,0
390,390,FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl ArrayDecl a int 100 100 Decl j int Decl i int Decl l int Decl p int Decl q int Decl k int Decl m int Decl n int Decl sum int >> cin k For = i 0 < i k ++ i Compound = sum 0 >> >> cin m n For = j 1 <= j m ++ j Compound For = l 1 <= l n ++ l >> cin ArrayRef ArrayRef a j l End For = p 1 <= p n ++ p Compound = sum + + sum ArrayRef ArrayRef a 1 p ArrayRef ArrayRef a m p End For = q 2 < q m ++ q Compound = sum + + sum ArrayRef ArrayRef a q 1 ArrayRef ArrayRef a q n End << << cout sum endl End Return 0 End,0
172,172,FileAST Typedef LL long Decl N int 65 Decl mod int 1000000007 Decl ArrayDecl ArrayDecl ArrayDecl dp int n n n Decl ArrayDecl p2 int * n n Decl ArrayDecl ArrayDecl pp int n n Decl ArrayDecl ArrayDecl C int n n FuncDef Decl FuncDecl init void Compound = ArrayRef p2 0 1 For DeclList Decl i int 0 < i n ++ i Compound = ArrayRef ArrayRef pp i 0 1 For DeclList Decl j int 1 < j n ++ j Compound = ArrayRef ArrayRef pp i j % * * 1LL ArrayRef ArrayRef pp i - j 1 - ArrayRef p2 i 1 mod End End = ArrayRef ArrayRef ArrayRef dp 1 1 1 1 End Decl FuncDecl main int,0
1029,1029,,1
20,20,FileAST FuncDef Decl FuncDecl main int Compound Decl year int Decl month int Decl date int Decl day int 0 >> >> >> cin year month date If || == % year 400 0 && == % year 4 0 != % year 100 0 Compound Decl ArrayDecl a int 13 InitList 0 31 29 31 30 31 30 31 31 30 31 30 31 For DeclList Decl i int 1 <= i - month 1 ++ i Compound += day ArrayRef a i End += day date End Compound Decl ArrayDecl b int 13 InitList 0 31 28 31 30 31 30 31 31 30 31 30 31 += day date End << << cout day endl Return 0 End,0
606,606,FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl m int Decl n int Decl ArrayDecl ArrayDecl a int 100 100 Decl i int Decl j int Decl sum int >> cin k While > k 0 Compound >> >> cin m n If && > m 1 > n 1 Compound = sum 0 For = i 0 < i m ++ i Compound += sum * * + a i += sum * - + * + a i n 1 End = sum - - - - sum * * a * - + * - + a m 1 n 1 * - + * a n 1 * * - + a m 1 << << cout sum endl End If && == m 1 == n 1 Compound = sum 0 = sum * * a << << cout sum endl End If && == m 1 > n 1 Compound = sum 0 << << cout sum endl End If && == n 1 > m 1 Compound = sum 0 << << cout sum endl End -- k End End,1
350,350,"FileAST FuncDef Decl FuncDecl main int Compound Decl i int Decl k int Decl row int Decl col int Decl ROW int Decl ArrayDecl ArrayDecl sz int 100 100 Decl COL int Decl ArrayDecl sum int 100 FuncCall scanf ExprList ""%d"" & k For = i 0 < i k ++ i Compound = ArrayRef sum i 0 End FuncCall scanf ExprList ""%d"" & k Return 0 End",0
279,279,"FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl l int Decl m int Decl n int Decl i int Decl j int Decl s1 int Decl s2 int Decl s3 int Decl s4 int Decl s int Decl ArrayDecl ArrayDecl sz int 100 100 FuncCall scanf ExprList ""%d"" & k Decl PtrDecl sf int Cast Typename PtrDecl TypeDecl int FuncCall malloc ExprList * sizeof Typename TypeDecl int k For = l 0 < l k ++ l Compound FuncCall printf ExprList ""%d\n"" ArrayRef sf l End Return 0 End",0
969,969,,1
223,223,"FileAST Typedef LL long FuncDef Decl FuncDecl main int Compound Decl n int Decl m int While >> >> cin n m Compound If && == m 0 == n 0 Break Decl ArrayDecl a int 101 = ArrayRef a n m FuncCall sort ExprList a + + a n 1 For DeclList Decl i int 0 < i + n 1 ++ i Compound If > i 0 Compound << cout "" "" End << cout ArrayRef a i End << cout endl End Return 0 End",0
569,569,FileAST FuncDef Decl FuncDecl main int Compound Decl x int Decl y int Decl i int Decl j int Decl flag int 1 >> >> cin x y Decl ArrayDecl a int x Decl ArrayDecl b int y = ArrayRef a 0 x = ArrayRef b 0 y For = i 1 <= i x ++ i = ArrayRef a i 0 Return 0 End,1
126,126,"FileAST FuncDef Decl FuncDecl main int Compound Decl a int Decl b int Decl c int Decl d int Decl ArrayDecl f int 12 InitList 31 28 31 30 31 30 31 31 30 31 30 31 FuncCall scanf ExprList ""%d%d%d"" & a & b & c Decl sum int 0 Decl i int For = i 0 < i - b 1 ++ i Compound = sum + sum ArrayRef f i End If || && == % a 4 0 != % a 100 0 == % a 400 0 Compound If < b 3 Compound = d + sum c End Compound = d + + sum 1 c End End Compound = d + sum c End FuncCall printf ExprList ""%d"" d Return 0 End",0
298,298,FileAST FuncDef Decl FuncDecl ParamList Decl m int Decl n int juzhen int Compound Decl ArrayDecl ArrayDecl a int 100 100 Decl s int 0 Decl i int Decl j int For = i 1 <= i n ++ i += s ArrayRef ArrayRef a 1 i Return s End Decl FuncDecl main int,0
913,913,,1
1013,1013,,1
994,994,,1
762,762,,1
6,6,FileAST Decl ArrayDecl f int 34 Decl ArrayDecl vis int 34 Decl FuncDecl init void FuncDef Decl FuncDecl main int Compound Decl n int Decl m int >> cin n FuncCall init While -- n Compound >> cin m FuncCall memset ExprList vis 0 sizeof vis Decl ans int 0 For DeclList Decl i int 2 <= i 29 ++ i Compound += ans * ArrayRef vis i ArrayRef f - i 1 End << << cout ans endl End Return 0 End,0
898,898,,1
869,869,,1
113,113,"FileAST FuncDef Decl FuncDecl main int Compound Decl n int Decl a int Decl b int Decl m int Decl i int Decl ArrayDecl x char 100 Decl ArrayDecl y char 100 While != FuncCall scanf ExprList ""%d"" & n eof Compound While -- n Compound FuncCall scanf ExprList ""%s%s"" x y = a FuncCall strlen ExprList x = m / a 2 = b FuncCall strlen ExprList y For = i m < i a ++ i FuncCall printf ExprList ""%c"" ArrayRef x i FuncCall printf ExprList ""\n"" End End Return 0 End",0
206,206,"FileAST Decl ArrayDecl a int 100005 Decl ArrayDecl b int 100005 FuncDef Decl FuncDecl main int Compound Decl n int While >> cin n Compound Decl flag int 1 FuncCall memset ExprList a 0 sizeof a FuncCall memset ExprList b 0 sizeof b Decl ans int 0 For DeclList Decl i int 0 < i n ++ i ^= ArrayRef a i ans FuncCall sort ExprList a + a n FuncCall sort ExprList b + b n If flag << << cout ans endl << << cout ""-1"" endl End Return 0 End",0
199,199,FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl n int Decl m int Decl sum int 0 Decl i int Decl j int Decl p int Decl ArrayDecl ArrayDecl a int 100 100 >> cin k While > k 0 Compound >> >> cin m n If && == n 1 == m 1 Compound << << cout ArrayRef ArrayRef a 0 0 endl End If && == n 1 > m 1 Compound For = i 0 < i m ++ i Compound += sum ArrayRef ArrayRef a i 0 End << << cout sum endl = sum 0 End If && > n 1 == m 1 Compound << << cout sum endl = sum 0 End Compound -= sum + + + ArrayRef ArrayRef a 0 0 ArrayRef ArrayRef a 0 - n 1 ArrayRef ArrayRef a - m 1 0 ArrayRef ArrayRef a - m 1 - n 1 << << cout sum endl End = sum 0 -- k End End,0
491,491,"FileAST Typedef ll long Typedef ull unsigned Decl N int + 200000 10 Decl ArrayDecl a int n Decl ArrayDecl MAX int 3 Decl ArrayDecl MAXN int 3 Decl FuncDecl read int FuncDef Decl FuncDecl main int Compound Decl t int Decl n int Decl m int Decl k int FuncCall scanf ExprList ""%d"" & t While -- t Compound FuncCall scanf ExprList ""%d%d%d"" & n & m & k For DeclList Decl i int 1 <= i n ++ i Compound FuncCall scanf ExprList ""%d"" & ArrayRef a i End Decl num int 0 Decl r int 0 Decl ans ll 0 FuncCall printf ExprList ""%lld\n"" ans End Return 0 End",0
955,955,,1
832,832,,1
17,17,"FileAST Decl MAXN int + 20000 5 Decl ArrayDecl cow int maxn FuncDef Decl FuncDecl main int Compound Decl n int Decl s int FuncCall scanf ExprList ""%d%d"" & n & s FuncCall sort ExprList cow + cow n Decl sum int 0 For DeclList Decl i int 0 < i n ++ i += sum - FuncCall upper_bound ExprList + + cow i 1 + cow n - s ArrayRef cow i + + cow i 1 FuncCall printf ExprList ""%d\n"" sum End",0
630,630,"FileAST Typedef ll long Decl maxn int 123456 Decl ArrayDecl p int 8 Decl ArrayDecl ArrayDecl sx int 6 maxn Decl ArrayDecl ArrayDecl sy int 6 maxn Decl ArrayDecl ArrayDecl dp int 150 123 Decl ArrayDecl op_s int 123 Decl ArrayDecl op_t int 123 Decl ArrayDecl ArrayDecl id int 6 150 Decl FuncDecl init void Decl FuncDecl ParamList Decl ArrayDecl a int Cantor int Decl FuncDecl ParamList Decl ArrayDecl a int Decl ArrayDecl b int Decl ArrayDecl c int cal void Decl FuncDecl ParamList Decl ArrayDecl a int Decl ArrayDecl b int cal2 void FuncDef Decl FuncDecl main int Compound FuncCall init Decl n int Decl m int While ~ FuncCall scanf ExprList ""%d%d"" & n & m Compound Decl ArrayDecl a int 6 Decl ArrayDecl b int 6 For DeclList Decl i int 1 <= i m ++ i Compound FuncCall scanf ExprList ""%d%d"" & ArrayRef op_s i & ArrayRef op_t i End FuncCall memset ExprList dp 0x3f sizeof dp Decl x int Decl s int Decl t int = x FuncCall cantor ExprList a = ArrayRef ArrayRef dp 0 x 0 Decl ans int ArrayRef ArrayRef dp m 1 If == ans 0x3f3f3f3f = ans - 1 FuncCall printf ExprList ""%d\n"" ans End Return 0 End",1
529,529,FileAST FuncDef Decl FuncDecl main int Compound Decl x int Decl y int Decl ArrayDecl a int 10 Decl ArrayDecl b int 10 Decl i int Decl j int Decl max int >> >> cin x y = ArrayRef a 0 x = ArrayRef b 0 y For = i 1 < i 10 ++ i Compound = ArrayRef a i / ArrayRef a - i 1 2 = ArrayRef b i / ArrayRef b - i 1 2 End << << cout max endl Return 0 End,1
1028,1028,,1
522,522,"FileAST Typedef ll long Decl eps double 1e-9 Decl mod ll 998244353 Decl g ll 3 FuncDef Decl FuncDecl ParamList Decl a ll Decl n ll Pow ll Compound Decl ans ll 1 While n Compound If & n 1 = ans % * ans a mod >>= n 1 = a % * a a mod End Return ans End Decl ArrayDecl A ll << 1 20 Decl ArrayDecl B ll << 1 20 Decl FuncDecl ParamList Decl ArrayDecl A ll Decl len int rader void Decl FuncDecl ParamList Decl ArrayDecl A ll Decl len int Decl on int ntt void Decl n int Decl m int Decl FuncDecl Conv void FuncDef Decl FuncDecl main int Compound FuncCall scanf ExprList ""%d%d"" & n & m FuncCall conv For DeclList Decl i int 0 <= i + n m ++ i Compound FuncCall printf ExprList ""%lld "" ArrayRef a i End FuncCall puts ExprList """" Return 0 End",0
13,13,FileAST FuncDef Decl FuncDecl main int Compound Decl m int Decl n int Decl i int 1 Decl j int Decl ArrayDecl ArrayDecl a int 101 101 Decl s int Decl k int Decl sum1 int Decl sum2 int Decl sum3 int Decl sum4 int Decl sum int >> cin s While <= i s Compound = sum1 0 = sum2 0 = sum3 0 = sum4 0 >> cin m >> cin n For = j 0 < j n ++ j += sum2 ArrayRef ArrayRef a - m 1 j = sum + + + sum1 sum2 sum3 sum4 << << cout - - - - sum ArrayRef ArrayRef a 0 0 ArrayRef ArrayRef a 0 - n 1 ArrayRef ArrayRef a - m 1 0 ArrayRef ArrayRef a - m 1 - n 1 endl ++ i End Return 0 End,0
81,81,FileAST FuncDef Decl FuncDecl main int Compound Decl k int 0 Decl ArrayDecl ArrayDecl juzhen int 100 100 Decl m int 0 Decl n int 0 >> cin k While > k 0 Compound = m 0 = n 0 FuncCall memset ExprList juzhen 0 sizeof juzhen >> >> cin m n Decl i int 0 Decl j int 0 Decl sum int 0 For = i 0 <= i - m 1 ++ i Compound For = j 0 <= j - n 1 ++ j Compound >> cin ArrayRef ArrayRef juzhen i j End End << << cout sum endl -- k End Return 0 End,0
410,410,"FileAST FuncDef Decl FuncDecl main int Compound Decl a int Decl b int Decl i int Decl c int Decl days int Decl ArrayDecl m int 13 InitList 0 31 28 31 30 31 30 31 31 30 31 30 31 FuncCall scanf ExprList ""%d%d%d"" & a & b & c = days 0 If || && == % a 4 0 != % a 100 0 == % a 400 0 Compound = ArrayRef m 2 29 FuncCall printf ExprList ""%d\n"" + days c End Compound For = i 0 < i b ++ i Compound += days ArrayRef m i End FuncCall printf ExprList ""%d\n"" + days c End Return 0 End",0
891,891,,1
72,72,"FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl ArrayDecl a int 200 200 Decl t int Decl n int Decl m int Decl i int Decl j int Decl s int Decl PtrDecl ArrayDecl p int 200 FuncCall scanf ExprList ""%d"" & t While -- t Compound FuncCall scanf ExprList ""%d%d"" & n & m = p a = s 0 For = i 0 < i m ++ i = s + s * + * p i If > n 1 If > m 1 FuncCall printf ExprList ""%d\n"" s End End",0
207,207,"FileAST FuncDef Decl FuncDecl main int Compound Decl FuncDecl jvzhen int Decl n int Decl i int Decl a int FuncCall scanf ExprList ""%d"" & n For = i 1 <= i n ++ i Compound = a FuncCall jvzhen FuncCall printf ExprList ""%d\n"" a End Return 0 End Decl FuncDecl jvzhen int",0
586,586,FileAST FuncDef Decl FuncDecl main int Compound Decl a int Decl m int Decl n int Decl i int Decl j int Decl k int Decl ArrayDecl ArrayDecl b int 100 100 Decl sum int 0 >> cin a For = k 0 < k a ++ k Compound = sum 0 >> >> cin m n EmptyStatement For = i 0 < i m ++ i For = j 0 < j n ++ j >> cin ArrayRef ArrayRef b i j For = i 0 < i m ++ i += sum + * * + b i * - + * + b i n 1 For = i 1 < i - n 1 ++ i += sum + * + * b i * + * - + b m 1 i << << cout sum endl End Return 0 End,1
468,468,FileAST FuncDef Decl FuncDecl main int Compound Decl max int 100 Decl num int >> cin num While -- num Compound Decl m int Decl n int >> >> cin m n Decl ArrayDecl ArrayDecl a int max max Decl i int Decl j int Decl sum int 0 For = i 1 < i - m 1 ++ i Compound If == n 1 Compound += sum ArrayRef ArrayRef a i 0 End Compound += sum ArrayRef ArrayRef a i 0 += sum ArrayRef ArrayRef a i - n 1 End End << << cout sum endl End Return 0 End,0
726,726,FileAST FuncDef Decl FuncDecl main int Compound Decl group int 0 Decl row int 0 Decl col int 0 Decl ArrayDecl ArrayDecl a int 101 101 Decl PtrDecl ArrayDecl p int 101 Decl i int Decl j int Decl sum int 0 = p a >> cin group While -- group Compound >> >> cin row col = sum 0 If && == row 1 == col 1 = sum * * p Compound For = i 0 < i col ++ i Compound += sum * + * p i If > row 1 += sum * + * - + p row 1 i End End << << cout sum endl End End,1
71,71,"FileAST FuncDef Decl FuncDecl main int Compound Decl n int Decl k int Decl m int Decl i int Decl a int 0 Decl b int 0 Decl c int 0 Decl d int 0 Decl e int 0 Decl ArrayDecl ArrayDecl sz int 100 100 FuncCall scanf ExprList ""%d"" & k For DeclList Decl l int 1 <= l k ++ l Compound FuncCall scanf ExprList ""%d %d"" & m & n For = i 0 < i m ++ i Compound For DeclList Decl j int 0 < j n ++ j Compound FuncCall scanf ExprList ""%d"" & ArrayRef ArrayRef sz i j End End For = i 0 < i m ++ i Compound += a ArrayRef ArrayRef sz i 0 += b ArrayRef ArrayRef sz i - n 1 End For DeclList Decl j int 0 < j n ++ j Compound += c ArrayRef ArrayRef sz 0 j += d ArrayRef ArrayRef sz - m 1 j End = e - - - - + + + a b c d ArrayRef ArrayRef sz 0 0 ArrayRef ArrayRef sz 0 - n 1 ArrayRef ArrayRef sz - m 1 0 ArrayRef ArrayRef sz - m 1 - n 1 FuncCall printf ExprList ""%d\n"" e = e 0 = a 0 = b 0 = c 0 = d 0 End Return 0 End",0
1002,1002,,1
984,984,,1
273,273,"FileAST Typedef LL long FuncDef Decl FuncDecl main int Compound Decl n LL Decl m LL Decl c LL Decl i LL FuncCall scanf ExprList ""%d"" & c While -- c Compound Decl ArrayDecl a LL 31 = ArrayRef a 0 = ArrayRef a 1 0 ExprList = ArrayRef a 2 1 = ArrayRef a 3 2 Decl sum1 LL Decl sum2 LL = sum1 = sum2 1 FuncCall scanf ExprList ""%lld%lld"" & n & m For = i n > i - n m -- i *= sum1 i FuncCall printf ExprList ""%lld\n"" * / sum1 sum2 ArrayRef a m End Return 0 End",0
101,101,"FileAST Decl MAXN int 105 Decl INF int 1e9 Decl a int Decl b int Decl n int Decl ArrayDecl ArrayDecl d int maxn maxn FuncDef Decl FuncDecl main int Compound While == FuncCall scanf ExprList ""%d%d%d"" & n & a & b 3 Compound For DeclList Decl i int 1 <= i n ++ i For DeclList Decl j int 1 <= j n ++ j = ArrayRef ArrayRef d i j TernaryOp == i j 0 inf FuncCall printf ExprList ""%d\n"" TernaryOp == ArrayRef ArrayRef d a b inf - 1 ArrayRef ArrayRef d a b End End",0
159,159,FileAST Decl FuncDecl ParamList Decl a int run int FuncDef Decl FuncDecl main int Compound Decl y int Decl m int Decl d int >> >> >> cin y m d Decl isr int FuncCall run ExprList y Decl ArrayDecl p int 13 InitList 0 31 28 31 30 31 30 31 31 30 31 30 31 Decl days int 0 For DeclList Decl i int 1 < i m ++ i Compound = days + days ArrayRef p i End = days + days d If && == isr 1 >= m 3 ++ days << cout days End,0
26,26,FileAST Typedef LL long FuncDef Decl FuncDecl main int Compound Decl t int Decl n int Decl ArrayDecl a int 100 >> cin t While -- t Compound >> cin n For DeclList Decl i int 0 < i n ++ i >> cin ArrayRef a i FuncCall sort ExprList a + a n << << cout * - ArrayRef a - n 1 ArrayRef a 0 2 endl End Return 0 End,0
211,211,"FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl ArrayDecl mouth int 12 2 InitList InitList 31 28 31 30 31 30 31 31 30 31 30 31 InitList 31 29 31 30 31 30 31 31 30 31 30 31 Decl leapyear int Decl a int Decl b int Decl c int Decl i int Decl d int 0 FuncCall scanf ExprList ""%d %d %d"" & a & b & c = leapyear || && == % a 4 0 != % a 100 0 == % a 400 0 For = i 0 < i - b 1 ++ i Compound = d + d ArrayRef ArrayRef mouth leapyear i End = d + d c FuncCall printf ExprList ""%d"" d Return 0 End",0
931,931,,1
277,277,"FileAST FuncDef Decl FuncDecl main int Compound Decl FuncDecl ParamList Decl n int test int Decl ArrayDecl a int 13 InitList 0 31 28 31 30 31 30 31 31 30 31 30 31 Decl ArrayDecl b int 13 InitList 0 31 29 31 30 31 30 31 31 30 31 30 31 Decl y int Decl m int Decl d int Decl s int Decl i int FuncCall scanf ExprList ""%d%d%d"" & y & m & d If == FuncCall test ExprList y 1 Compound = s d End Compound = s d For = i 0 < i m ++ i = s + s ArrayRef a i End FuncCall printf ExprList ""%d"" s FuncCall getchar FuncCall getchar End Decl FuncDecl ParamList Decl n int test int",0
657,657,"FileAST Decl FuncDecl ParamList Decl nian int run int Decl FuncDecl ParamList Decl m int Decl n int mon int FuncDef Decl FuncDecl main int Compound Decl year int Decl month int Decl day int Decl date int Decl i int FuncCall scanf ExprList ""%d %d %d"" & year & month & day = date 0 For = i 1 < i month ++ i = date + date FuncCall mon ExprList i year = date + date day FuncCall printf ExprList ""%d"" date Return 0 End",1
767,767,,1
1000,1000,,1
431,431,FileAST FuncDef Decl FuncDecl main int Compound Decl t int Decl m int Decl n int Decl ArrayDecl ArrayDecl a int 100 100 InitList 0 Decl sum int >> cin t Decl i int Decl j int Decl k int For = i 0 < i t ++ i Compound >> cin m >> cin n = sum 0 For = j 0 < j m ++ j For = k 0 < k n ++ k = ArrayRef ArrayRef a j k 0 For = j 0 < j m ++ j For = k 0 < k n ++ k >> cin ArrayRef ArrayRef a j k For = j 0 < j n ++ j Compound = sum + sum ArrayRef ArrayRef a 0 j = sum + sum ArrayRef ArrayRef a - m 1 j End For = k 1 < k - m 1 ++ k Compound = sum + sum ArrayRef ArrayRef a k 0 = sum + sum ArrayRef ArrayRef a k - n 1 End << << cout sum endl End Return 0 End,0
119,119,FileAST FuncDef Decl FuncDecl main int Compound Decl y int Decl m int Decl d int Decl n int 0 >> >> >> cin y m d Decl ArrayDecl ping int 12 InitList 31 28 31 30 31 30 31 31 30 31 30 31 Decl ArrayDecl run int 12 InitList 31 29 31 30 31 30 31 31 30 31 30 31 If || != % y 4 0 && == % y 100 0 != % y 400 0 Compound For DeclList Decl i int 0 < i - m 1 ++ i = n + n ArrayRef ping i = n + n d End Compound = n + n d End << << cout n endl Return 0 End,0
395,395,"FileAST Decl MAXN int 105 Decl ArrayDecl ArrayDecl dp long maxn maxn Decl FuncDecl ParamList Decl n int Decl m int cal long FuncDef Decl FuncDecl main int Compound Decl n int Decl m int While true Compound FuncCall scanf ExprList ""%d%d"" & n & m If && == n 0 == m 0 Break FuncCall memset ExprList dp 0 sizeof dp For DeclList Decl i int 0 <= i n ++ i = ArrayRef ArrayRef dp i 0 1 FuncCall printf ExprList ""%d things taken %d at a time is %ld exactly.\n"" n m FuncCall cal ExprList n m End End",0
947,947,,1
694,694,"FileAST FuncDef Decl FuncDecl main int Compound Decl k int FuncCall scanf ExprList ""%d"" & k Decl s1 int 0 Decl s2 int 0 Decl s3 int 0 Decl s4 int 0 Decl s int 0 Decl r int 0 Decl c int 0 Decl ArrayDecl ArrayDecl jz int 100 100 Decl m int Decl n int Decl i int 1 While <= i k Compound FuncCall scanf ExprList ""%d %d"" & m & n = r 0 = c 0 = r - m 1 = c 0 = r 0 = c 0 = r 0 = c - n 1 For = r 0 < r m ++ r Compound += s4 ArrayRef ArrayRef jz r c End = s - - - - + + + s1 s2 s3 s4 ArrayRef ArrayRef jz 0 0 ArrayRef ArrayRef jz 0 - n 1 ArrayRef ArrayRef jz - m 1 0 ArrayRef ArrayRef jz - m 1 - n 1 FuncCall printf ExprList ""%d"" s = s1 0 = s2 0 = s3 0 = s4 0 = s 0 If != i k Compound FuncCall printf ExprList ""\n"" End ++ i End Return 0 End",1
597,597,"FileAST Decl MAXN int 26 Decl n int Decl h int Decl ArrayDecl t int maxn Decl ArrayDecl d int maxn Decl ArrayDecl f int maxn Decl ArrayDecl F int maxn Decl ArrayDecl ans int maxn Decl ArrayDecl ANS int maxn FuncDef Decl FuncDecl main int Compound Decl max int Decl sum int Decl p int Decl k int Decl i int Decl j int Decl time int While ExprList FuncCall scanf ExprList ""%d"" & n n Compound FuncCall scanf ExprList ""%d"" & h *= h 12 FuncCall memset ExprList ans 0 sizeof ans For DeclList Decl i int 0 < i - n 1 ++ i Compound FuncCall printf ExprList ""%d, "" * ArrayRef ans i 5 End FuncCall printf ExprList ""%d\n"" * ArrayRef ans - n 1 5 FuncCall printf ExprList ""Number of fish expected: %d\n\n"" max End End",1
950,950,,1
263,263,"FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl ArrayDecl dp int 122 122 InitList 0 Decl n int For DeclList Decl i int 0 < i 121 ++ i Compound = ArrayRef ArrayRef dp i 0 1 = ArrayRef ArrayRef dp i 1 1 = ArrayRef ArrayRef dp 0 i 1 = ArrayRef ArrayRef dp 1 i 1 End While == FuncCall scanf ExprList ""%d"" & n 1 FuncCall printf ExprList ""%d\n"" ArrayRef ArrayRef dp n n Return 0 End",0
253,253,FileAST Decl ArrayDecl c1 int 55 Decl ArrayDecl c2 int 55 FuncDef Decl FuncDecl main int Compound Decl n int Decl i int Decl j int Decl k int Decl sum int Decl ArrayDecl a int 27 InitList 0 >> cin n While -- n Compound For = i 1 < i 27 ++ i >> cin ArrayRef a i FuncCall memset ExprList c2 0 sizeof c2 FuncCall memset ExprList c1 0 sizeof c1 = sum 0 << << cout sum endl End Return 0 End,0
588,588,"FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl a char 1010 While >> cin a Compound Decl len int FuncCall strlen ExprList a If && == len 1 == ArrayRef a 0 '0' Break Decl sum int 0 For DeclList Decl i int 0 < i len ++ i Compound += sum - ArrayRef a i '0' End %= sum 9 If == sum 0 = sum 9 FuncCall printf ExprList ""%d\n"" sum End Return 0 End",1
713,713,"FileAST FuncDef Decl FuncDecl main int Compound Decl n int Decl i int Decl e int Decl j int Decl kn int Decl ki int Decl k int Decl l int FuncCall scanf ExprList ""%d %d"" & n & i If < n i Compound = e n = n i = i e End = l 1 = l 1 For = k 0 < k - kn ki ++ k Compound /= n 2 End DoWhile 1 Compound If == n i Compound FuncCall printf ExprList ""%d"" n Return 0 End /= n 2 /= i 2 End End",1
267,267,"FileAST FuncDef Decl FuncDecl main int Compound Decl sum int 0 Decl year int Decl month int Decl day int Decl ArrayDecl a int 32 Decl i int Decl n int FuncCall scanf ExprList ""%d%d%d"" & year & month & day = ArrayRef a 0 0 = ArrayRef a 1 31 = ArrayRef a 3 31 = ArrayRef a 4 30 = ArrayRef a 5 31 = ArrayRef a 6 30 = ArrayRef a 7 31 = ArrayRef a 8 31 = ArrayRef a 9 30 = ArrayRef a 10 31 = ArrayRef a 11 30 = ArrayRef a 12 31 If && == % year 4 0 == % year 200 0 Compound = ArrayRef a 2 29 End Compound = ArrayRef a 2 28 End For = i 0 < i month ++ i Compound = sum + sum ArrayRef a i End = n + sum day FuncCall printf ExprList ""%d"" n Return 0 End",0
976,976,,1
729,729,"FileAST Typedef ll long Decl N int Decl M int Decl T int Decl K int Decl B int Decl maxn int 55 Decl ArrayDecl ArrayDecl mp int maxn maxn Decl ArrayDecl ArrayDecl val int maxn maxn Decl ArrayDecl ArrayDecl ArrayDecl ArrayDecl dp int 6 6 maxn maxn Decl ArrayDecl ArrayDecl sv int maxn maxn Decl FuncDecl solve int FuncDef Decl FuncDecl main int Compound Decl t int FuncCall scanf ExprList ""%d"" & t While -- t Compound FuncCall scanf ExprList ""%d%d%d%d%d"" & n & m & t & k & b FuncCall memset ExprList val 0 sizeof val FuncCall memset ExprList mp 999999999 sizeof mp Decl u int Decl v int Decl w int For DeclList Decl i int 1 <= i m ++ i Compound FuncCall scanf ExprList ""%d%d%d"" & u & v & w = ArrayRef ArrayRef mp u v w = ArrayRef ArrayRef mp v u w End Decl ans int FuncCall solve FuncCall printf ExprList ""%d\n"" ans End Return 0 End",1
752,752,,1
179,179,"FileAST Typedef LL long Typedef point Struct Decl x int Decl y int Decl ArrayDecl a point 100 Decl FuncDecl ParamList Decl p point Decl q point area double FuncDef Decl FuncDecl main int Compound Decl i int Decl n int Decl sum double While && != FuncCall scanf ExprList ""%d "" & n eof n Compound For = i 0 < i n ++ i FuncCall scanf ExprList ""%d %d"" & StructRef ArrayRef a i x & StructRef ArrayRef a i y = sum FuncCall area ExprList ArrayRef a - n 1 ArrayRef a 0 FuncCall printf ExprList ""%.1f\n"" * 0.5 sum End Return 0 End",0
316,316,"FileAST FuncDef Decl FuncDecl main int Compound Decl a int Decl b int Decl c int Decl i int Decl e int Decl ArrayDecl s int 12 Decl d int 0 FuncCall scanf ExprList ""%d %d %d"" & a & b & c If || && == % a 4 0 != % a 100 0 == % a 400 0 = ArrayRef s 1 29 = ArrayRef s 1 28 = ArrayRef s 0 31 = ArrayRef s 2 31 = ArrayRef s 3 30 = ArrayRef s 4 31 = ArrayRef s 5 30 = ArrayRef s 6 31 = ArrayRef s 7 31 = ArrayRef s 8 30 = ArrayRef s 9 31 = ArrayRef s 10 30 = ArrayRef s 11 31 For = i 1 <= i b ++ i Compound = d + d ArrayRef s - i 2 End = e + d c FuncCall printf ExprList ""%d"" e Return 0 End",0
663,663,FileAST Decl ArrayDecl a int 12345 FuncDef Decl FuncDecl main int Compound Decl n int >> cin n For DeclList Decl i int 0 < i n ++ i >> cin ArrayRef a i Decl m int >> cin m While -- m Compound Decl l int Decl r int Decl ans int 0 >> >> cin l r << << cout ans endl End Return 0 End,1
498,498,FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl m int Decl n int Decl ArrayDecl ArrayDecl a int 100 100 Decl i int Decl j int Decl sum int >> cin k While > k 0 Compound >> >> cin m n If && > m 1 > n 1 Compound = sum 0 For = j 0 < j n ++ j Compound += sum * + * a j += sum * + * - + a m 1 j End = sum - - - - sum * * a * - + * - + a m 1 n 1 * - + * a n 1 * * - + a m 1 << << cout sum endl End If && == m 1 == n 1 Compound = sum 0 = sum * * a << << cout sum endl End If && == m 1 > n 1 Compound = sum 0 << << cout sum endl End If && == n 1 > m 1 Compound = sum 0 << << cout sum endl End -- k End End,0
161,161,"FileAST Typedef ll long Decl maxn int 10000010 Decl mod int + 1e9 7 Decl n int Decl ArrayDecl x ll 1010 Decl ArrayDecl y ll 1010 Decl ArrayDecl r ll 1010 Decl ArrayDecl f ll 1010 FuncDef Decl FuncDecl ParamList Decl x ll sqr ll Compound Return * x x End Decl ans ll FuncDef Decl FuncDecl main int Compound >> cin n For DeclList Decl i int 1 <= i n ++ i Compound >> >> >> cin ArrayRef x i ArrayRef y i ArrayRef r i End FuncCall printf ExprList ""%.9f\n"" * FuncCall acos ExprList - 1 ans Return 0 End",0
233,233,"FileAST FuncDef Decl FuncDecl main int Compound Decl year int Decl month int Decl day int Decl sum int Decl i int Decl ArrayDecl N int 12 InitList 31 28 31 30 31 30 31 31 30 31 30 31 FuncCall scanf ExprList ""%d %d %d"" & year & month & day = sum 0 For = i 1 < i month ++ i Compound = sum + sum ArrayRef n - i 1 End If || && == % year 4 0 != % year 100 0 == % year 400 0 = sum + sum 1 = sum + sum day FuncCall printf ExprList ""%d"" sum End",0
986,986,,1
841,841,,1
803,803,,1
646,646,"FileAST Decl MAXN int 105 Decl ArrayDecl a int maxn FuncDef Decl FuncDecl main int Compound Decl n int While ExprList FuncCall scanf ExprList ""%d"" & n n Compound For DeclList Decl i int 0 < i n ++ i FuncCall scanf ExprList ""%d"" & ArrayRef a i FuncCall sort ExprList a + a n Decl sum int 0 FuncCall printf ExprList ""%d\n"" / sum - n 2 End End",1
306,306,"FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl m int Decl n int Decl sum1 int Decl sum2 int Decl sum3 int Decl sum4 int Decl i int Decl j int Decl l int Decl ArrayDecl ArrayDecl a int 100 100 Decl ArrayDecl b int 100 FuncCall scanf ExprList ""%d"" & k For = l 1 <= l k ++ l Compound = sum1 0 = sum2 0 = sum3 0 = sum4 0 FuncCall scanf ExprList ""%d %d"" & m & n For = i 0 < i m ++ i Compound For = j 0 < j n ++ j FuncCall scanf ExprList ""%d"" & ArrayRef ArrayRef a i j End For = j 0 < j n ++ j = sum1 + sum1 ArrayRef ArrayRef a 0 j For = i 1 < i m ++ i = sum2 + sum2 ArrayRef ArrayRef a i - n 1 For = j 0 < j - n 1 ++ j = sum3 + sum3 ArrayRef ArrayRef a - i 1 j For = i 1 < i - m 1 ++ i = sum4 + sum4 ArrayRef ArrayRef a i 0 = ArrayRef b l + + + sum1 sum2 sum3 sum4 End Return 0 End",0
916,916,,1
344,344,FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl m int Decl n int Decl i int Decl q int Decl j int Decl s1 int 0 Decl s2 int 0 Decl s int Decl ArrayDecl ArrayDecl a int 100 100 >> cin k For = q 0 < q k ++ q Compound >> >> cin m n = s1 0 = s2 0 For = i 0 < i m ++ i For = j 0 < j n ++ j Compound >> cin ArrayRef ArrayRef a i j = s1 + s1 ArrayRef ArrayRef a i j End For = i 1 < i - m 1 ++ i For = j 1 < j - n 1 ++ j Compound = s2 + s2 ArrayRef ArrayRef a i j End = s - s1 s2 << << cout s endl End Return 0 End,0
442,442,FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl ArrayDecl array int 200 200 Decl ArrayDecl PtrDecl p int 200 For DeclList Decl i int 0 <= i 200 ++ i = ArrayRef p i ArrayRef array i Decl k int 0 >> cin k Return 0 End,0
923,923,,1
1008,1008,,1
178,178,FileAST FuncDef Decl FuncDecl main int Compound Decl year int Decl month int Decl day int Decl i int Decl sum int 0 Decl ArrayDecl ArrayDecl DaysOfMonth int 13 2 InitList 0 31 28 31 30 31 30 31 31 30 31 30 31 0 31 29 31 30 31 30 31 31 30 31 30 31 Decl flag int >> >> >> cin year month day If || != % year 4 0 && && == % year 4 0 == % year 100 0 != % year 400 0 = flag 0 = flag 1 If == month 1 << << cout day endl Compound For = i 1 < i month ++ i Compound += sum ArrayRef ArrayRef daysofmonth flag i End += sum day << << cout sum endl End Return 0 End,0
342,342,"FileAST FuncDef Decl FuncDecl ParamList Decl argc int Decl ArrayDecl PtrDecl argv char main int Compound Decl ArrayDecl days int 12 InitList 31 28 31 30 31 30 31 31 30 31 30 31 Decl y int Decl m int Decl d int Decl sum int 0 Decl i int Decl h int FuncCall scanf ExprList ""%d%d%d"" & y & m & d If || && == % y 4 0 != % y 100 0 == % y 400 0 Compound = ArrayRef days 1 29 End Compound = ArrayRef days 1 28 End For = i 0 < i - m 1 ++ i Compound = sum + sum ArrayRef days i End = h + sum d FuncCall printf ExprList ""%d"" h Return 0 End",0
545,545,FileAST FuncDef Decl FuncDecl main int Compound Decl year int Decl month int Decl day int Decl total int 0 >> >> >> cin year month day If || && == % year 4 0 != % year 100 0 == % year 400 0 Compound Decl ArrayDecl a int 13 InitList 31 29 31 30 31 30 31 31 30 31 30 31 For DeclList Decl i int 1 <= i - month 1 ++ i Compound = total + total ArrayRef a - i 1 End = total + total day End Compound Decl ArrayDecl b int 13 InitList 31 28 31 30 31 30 31 31 30 31 30 31 = total + total day End << << cout total endl Return 0 End,1
852,852,,1
901,901,,1
895,895,,1
356,356,FileAST FuncDef Decl FuncDecl main int Compound Decl idx int 100 Decl i int 100 Decl j int 100 Decl lines int 100 Decl n int 100 Decl fun_name int 100 Decl None int 100 Decl ArrayDecl a int 101 Decl ArrayDecl c int 101 Decl ArrayDecl b int 101 Decl ArrayDecl nc int 101 For = i 0 < i n ++ i Compound For = j 0 < j n ++ j Compound = ArrayRef c + i j + ArrayRef c + i j * ArrayRef a i ArrayRef b j End End Return 0 End,0
449,449,FileAST Typedef LL long Decl maxn LL + 1000 10 Decl mod LL 10000000 Decl ArrayDecl ArrayDecl a char 12 12 FuncDef Decl FuncDecl main int Compound Decl n int Decl m int While >> >> cin n m Compound Decl k int % m 4 If == k 0 Compound End If || == k 1 == k - 3 Compound End If || == k 2 == k - 2 Compound End If || == k 3 == k - 1 Compound For DeclList Decl j int n >= j 1 -- j Compound For DeclList Decl i int 1 <= i n ++ i Compound << cout ArrayRef ArrayRef a i j End << cout endl End End End Return 0 End,0
1027,1027,,1
42,42,"FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl c double 3005 InitList 0 Decl a0 double Decl an1 double Decl n int Decl i int Decl j int While ~ FuncCall scanf ExprList ""%d"" & n Compound FuncCall scanf ExprList ""%lf%lf"" & a0 & an1 For = i 1 <= i n ++ i FuncCall scanf ExprList ""%lf"" & ArrayRef c i Decl sum double 0 += sum + * n a0 an1 /= sum + n 1 FuncCall printf ExprList ""%.2lf\n"" sum End Return 0 End",0
773,773,,1
553,553,"FileAST Decl N int + 100000 20 Decl ArrayDecl a int n Decl ArrayDecl vis int n Decl FuncDecl ParamList Decl k int Decl n int solve int FuncDef Decl FuncDecl main int Compound Decl t int Decl n int Decl ans int FuncCall scanf ExprList ""%d"" & t While -- t Compound FuncCall memset ExprList vis 0 sizeof vis FuncCall scanf ExprList ""%d"" & n For DeclList Decl i int 1 <= i n ++ i Compound FuncCall scanf ExprList ""%d"" & ArrayRef a i End << << cout n endl End Return 0 End",1
451,451,"FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl A int 12 InitList 31 28 31 30 31 30 31 31 30 31 30 31 Decl a int Decl b int Decl c int Decl i int Decl y int FuncCall scanf ExprList ""%d%d%d"" & a & b & c = y 0 For = i 0 < i - b 1 ++ i Compound = y + y ArrayRef a i End = y + y c If || && == % a 4 0 != % a 100 0 == % a 400 0 Compound If || == b 1 == b 2 Compound FuncCall printf ExprList ""%d"" y End Compound = y + y 1 FuncCall printf ExprList ""%d"" y End End Compound FuncCall printf ExprList ""%d"" y End Return 0 End",0
415,415,"FileAST FuncDef Decl FuncDecl main int Compound Decl y int Decl m int Decl d int Decl run int 0 Decl ArrayDecl M int 13 Decl i int Decl D int FuncCall scanf ExprList ""%d%d%d"" & y & m & d = d d If || == % y 400 0 && != % y 100 0 == % y 4 0 Compound = run 1 End = run 0 If == run 1 Compound = ArrayRef m 2 29 End = ArrayRef m 2 28 For = i 1 < i m ++ i Compound = d + d ArrayRef m i End FuncCall printf ExprList ""%d"" d Return 0 End",0
224,224,"FileAST FuncDef Decl FuncDecl main int Compound Decl r int Decl m int Decl y int FuncCall scanf ExprList ""%d%d%d"" & r & m & y Decl res double Cast Typename TypeDecl double m Decl rate double / + r 100 100.0 For DeclList Decl i int 0 < i y ++ i Compound *= res rate End FuncCall printf ExprList ""%d\n"" Cast Typename TypeDecl int res End",0
129,129,"FileAST Typedef LL long Decl N int 15 Decl M int 36384 Decl Mod int 1000000009 Decl n int Decl m int Decl k int Decl ArrayDecl ArrayDecl f int m n Decl ArrayDecl g int m Decl ArrayDecl Num int m Decl ArrayDecl p2 int m Decl FuncDecl solve void FuncDef Decl FuncDecl main int Compound = ArrayRef p2 0 1 For DeclList Decl i int 1 < i m ++ i = ArrayRef p2 i % * ArrayRef p2 - i 1 2 mod Decl t int Decl i int 0 >> cin t While -- t ExprList FuncCall printf ExprList ""Case #%d:\n"" ++ i FuncCall solve Return 0 End",0
185,185,"FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl ArrayDecl a int 100 100 Decl m int Decl n int Decl i int Decl j int Decl k int Decl sum int 0 FuncCall scanf ExprList ""%d"" & k While > k 0 Compound FuncCall scanf ExprList ""%d %d"" & m & n For = j 0 < j n ++ j = sum + + sum ArrayRef ArrayRef a 0 j ArrayRef ArrayRef a - m 1 j FuncCall printf ExprList ""%d\n"" sum = sum 0 -- k End Return 0 End",0
128,128,"FileAST Typedef LL long Typedef point Struct Decl x int Decl y int Decl ArrayDecl a point 100 Decl FuncDecl ParamList Decl p point Decl q point area double FuncDef Decl FuncDecl main int Compound Decl i int Decl n int Decl sum double While && != FuncCall scanf ExprList ""%d "" & n eof n Compound = sum FuncCall area ExprList ArrayRef a - n 1 ArrayRef a 0 For = i 1 < i n ++ i += sum FuncCall area ExprList ArrayRef a - i 1 ArrayRef a i FuncCall printf ExprList ""%.1f\n"" * 0.5 sum End Return 0 End",0
270,270,"FileAST FuncDef Decl FuncDecl main int Compound Decl K int Decl i int Decl j int Decl k int Decl m int Decl n int Decl ArrayDecl ArrayDecl a int 100 100 InitList 0 Decl sum int Decl p int Decl q int Decl ArrayDecl result int 100 InitList 0 FuncCall scanf ExprList ""%d"" & k For = i 1 <= i k ++ i Compound = sum 0 FuncCall scanf ExprList ""%d%d"" & m & n For = j 0 < j m ++ j For = k 0 < k n ++ k FuncCall scanf ExprList ""%d"" + * + a j k If == m 1 Compound For = q 0 < q n ++ q = sum + sum * + * + a 0 q For = p 1 < p - m 1 ++ p = sum + + sum * + * + a p 0 * - + * + a p n 1 End If > m 1 Compound For = q 0 < q n ++ q = sum + + sum * + * + a 0 q * + * - + a m 1 q For = p 1 < p - m 1 ++ p = sum + + sum * + * + a p 0 * - + * + a p n 1 End FuncCall printf ExprList ""%d\n"" sum End Return 0 End",0
259,259,"FileAST Typedef LL long Decl FuncDecl ParamList Decl n long f int Decl FuncDecl ParamList Decl n long g int FuncDef Decl FuncDecl main int Compound Decl s int Decl a int While && >> cin a a Compound Decl i int 0 Decl b int Decl ArrayDecl c int 1000 = ArrayRef c 0 a = b a While == FuncCall f ExprList b 0 Compound = ArrayRef c ++ i FuncCall g ExprList b = b FuncCall g ExprList b End << << cout i endl For DeclList Decl j int 0 <= j - i 1 ++ j << << cout ArrayRef c j ""--->"" << << cout ArrayRef c i endl End End",0
902,902,,1
940,940,,1
568,568,FileAST FuncDef Decl FuncDecl main int Compound Decl year int Decl month int Decl day int Decl c int Decl days int 0 Decl i int Decl ArrayDecl ArrayDecl M int 12 2 InitList InitList 31 28 31 30 31 30 31 31 30 31 30 31 InitList 31 29 31 30 31 30 31 31 30 31 30 31 >> >> >> cin year month day If || && == % year 4 0 != % year 100 0 == % year 400 0 = c 1 = c 0 If == month 1 << cout day Compound For = i 0 < i - month 1 ++ i += days ArrayRef ArrayRef m c i << cout + days day End Return 0 End,1
613,613,FileAST FuncDef Decl FuncDecl ParamList Decl m int Decl n int juzhen int Compound Decl ArrayDecl ArrayDecl a int 100 100 Decl s int 0 Decl i int Decl j int For = i - n 1 >= i 1 -- i += s ArrayRef ArrayRef a m i Return s End Decl FuncDecl main int,1
165,165,"FileAST Typedef LL long FuncDef Decl FuncDecl main int Compound Decl n int Decl i int Decl j int Decl ArrayDecl a int 100 Decl t int While ExprList != FuncCall scanf ExprList ""%d"" & n eof n Compound For = i 0 < i n ++ i >> cin ArrayRef a i Compound FuncCall swap ExprList ArrayRef a j ArrayRef a + j 1 End End Return 0 End",0
226,226,FileAST Decl a long Decl b long Decl m long Decl n long Decl Max long Decl Min long 0 FuncDef Decl FuncDecl ParamList Decl n int solve void Compound Decl ans long 1 For DeclList Decl i int 1 < i n ++ i *= ans 2 = min - ans = max - ans 1 End Decl FuncDecl main int,0
1010,1010,,1
577,577,FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl m int Decl n int Decl sum int Decl ArrayDecl ArrayDecl a int 100 100 Decl i int Decl j int >> cin k While -- k Compound = sum 0 >> >> cin m n Decl PtrDecl ArrayDecl p int 100 = p a For = j 0 < j n ++ j = sum + + sum * + * p j * + * - + p m 1 j = sum - - - - sum * * p * - + * p n 1 * * - + p m 1 * - + * - + p m 1 n 1 << << cout sum endl End End,1
127,127,FileAST FuncDef Decl FuncDecl main int Compound Decl year int Decl month int Decl day int Decl sum int 0 Decl i int >> >> >> cin year month day If || == % year 400 0 && == % year 4 0 != % year 100 0 Compound Decl ArrayDecl days int 12 InitList 31 29 31 30 31 30 31 31 30 31 30 31 For = i 0 < i - month 1 ++ i = sum + sum ArrayRef days i End Compound Decl ArrayDecl days int 12 InitList 31 28 31 30 31 30 31 31 30 31 30 31 For = i 0 < i - month 1 ++ i = sum + sum ArrayRef days i End = sum + sum day << << cout sum endl Return 0 End,0
551,551,FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl m int Decl n int >> cin k While > k 0 Compound >> >> cin m n Decl ArrayDecl ArrayDecl num int 110 110 InitList 0 Decl PtrDecl ArrayDecl p int 110 Decl sum int 0 Decl i int Decl j int = p num For = i 0 < i m ++ i Compound For = j 0 < j n ++ j Compound >> cin * + * + p i j End End = p num << << cout sum endl -- k End Return 0 End,1
186,186,FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl ArrayDecl a int 100 100 Decl i int Decl j int Decl k int Decl m int Decl n int Decl num int Decl sum int 0 Decl PtrDecl p int null >> cin num For = k 1 <= k num ++ k Compound >> >> cin m n For = i 0 < i m ++ i For = j 0 < j n ++ j Compound >> cin * + * + a i j End If || == m 1 == n 1 Compound For = i 0 < i m ++ i For = j 0 < j n ++ j Compound = sum + sum * + * + a i j End End Compound For = i 0 < i - n 1 ++ i Compound = sum + sum * + * a i End For = i 0 < i - m 1 ++ i Compound = sum + sum * - + * + a i n 1 End For = i 1 < i n ++ i Compound = sum + sum * + * - + a m 1 i End For = i 1 < i m ++ i Compound = sum + sum * * + a i End End << << cout sum endl = sum 0 End Return 0 End,0
62,62,"FileAST Typedef LL long FuncDef Decl FuncDecl main int Compound Decl n int Decl ArrayDecl a int 101 Decl m int 1 While >> cin n Compound If == n 0 Break Decl sum int 0 For DeclList Decl i int 0 < i n ++ i Compound FuncCall scanf ExprList ""%d"" & ArrayRef a i += sum ArrayRef a i End Decl avg int Decl ans int 0 = avg / sum n << << << << << << << << cout ""Set #"" ++ m endl ""The minimum number of moves is "" ans ""."" endl endl End Return 0 End",0
49,49,FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl ArrayDecl a int 105 105 InitList 0 Decl n int 0 Decl row int 0 Decl col int 0 Decl i int 0 Decl j int 0 Decl PtrDecl p int null Decl sum int 0 >> cin n While -- n Compound >> >> cin row col For = i 1 < i - row 1 ++ i Compound = sum + + sum ArrayRef ArrayRef a i 0 ArrayRef ArrayRef a i - col 1 End If > row 1 Compound End << << cout sum endl = sum 0 End Return 0 End,0
788,788,,1
320,320,FileAST FuncDef Decl FuncDecl main int Compound Decl k int 0 Decl n int 0 Decl m int 0 Decl i int 0 Decl w int 0 Decl j int 0 Decl sum int 0 Decl ArrayDecl ArrayDecl s int 101 101 InitList 0 >> cin k For = w 1 <= w k ++ w Compound = sum 0 >> >> cin n m For = i 1 <= i n ++ i Compound For = j 1 <= j m ++ j Compound >> cin * + ArrayRef s i j If || || || == i 1 == i n == j 1 == j m += sum * + ArrayRef s i j End End << << cout sum endl End Return 0 End,0
18,18,"FileAST Decl MAXN int 105 Decl n int Decl ArrayDecl temp int maxn Decl ArrayDecl ArrayDecl a int maxn maxn FuncDef Decl FuncDecl ParamList Decl PtrDecl arr int arrayMax int Compound Decl max int 0 Decl dp int 0 For DeclList Decl i int 0 < i n ++ i If < dp 0 = dp ArrayRef arr i Compound += dp ArrayRef arr i = max TernaryOp > dp max dp max End Return max End FuncDef Decl FuncDecl main int Compound FuncCall scanf ExprList ""%d"" & n Decl maxAll int 0 Decl maxOne int 0 For DeclList Decl i int 0 < i n ++ i Compound FuncCall memset ExprList temp 0 sizeof temp For DeclList Decl j int i < j n ++ j Compound For DeclList Decl k int 0 < k n ++ k += ArrayRef temp k ArrayRef ArrayRef a j k = maxone FuncCall arraymax ExprList temp = maxall TernaryOp > maxone maxall maxone maxall End End FuncCall printf ExprList ""%d\n"" maxall End",0
364,364,"FileAST FuncDef Decl FuncDecl main int Compound Decl a int Decl b int Decl c int Decl d int Decl ArrayDecl e int 12 Decl i int = ArrayRef e 1 = ArrayRef e 3 = ArrayRef e 5 = ArrayRef e 7 = ArrayRef e 8 = ArrayRef e 10 = ArrayRef e 12 31 = ArrayRef e 2 28 = ArrayRef e 4 = ArrayRef e 6 = ArrayRef e 9 = ArrayRef e 11 30 = d 0 FuncCall scanf ExprList ""%d %d %d"" & a & b & c If || != % a 4 0 && == % a 100 0 != % a 400 0 Compound = d + d c End If || && == % a 4 0 != % a 100 0 == % a 400 0 Compound For = i 1 < i b ++ i Compound = ArrayRef e 2 29 = d + d ArrayRef e i End = d + d c End FuncCall printf ExprList ""%d"" d Return 0 End",0
195,195,"FileAST Typedef ll long Decl mod ll 10000000007LL FuncDef Decl FuncDecl ParamList Decl a ll Decl b ll Multi ll Compound Decl ans ll 0 While b Compound If & b 1 Compound = ans % + ans a mod End = a % << a 1 mod >>= b 1 End Return % ans mod End FuncDef Decl FuncDecl ParamList Decl ans ll Decl K ll BigMulti ll Compound If && == ans 0 == k 0 Return 1 If == ans 0 Return 0 Decl res ll 1 While k Compound If & k 1 Compound = res FuncCall multi ExprList ans res End = ans FuncCall multi ExprList ans ans >>= k 1 End Return % res mod End Decl N ll Decl K ll FuncDef Decl FuncDecl main int Compound Decl t int FuncCall scanf ExprList ""%d"" & t While -- t Compound FuncCall scanf ExprList ""%lld%lld"" & n & k Decl res ll 0 Decl ans ll For DeclList Decl i int 1 <= i n ++ i Compound FuncCall scanf ExprList ""%lld"" & ans %= ans mod = ans % + ans mod mod = res % + + res % FuncCall bigmulti ExprList ans k mod mod mod End FuncCall printf ExprList ""%lld\n"" res End Return 0 End",0
655,655,"FileAST Typedef LL long Decl maxn LL 1e6 Decl mod LL 10000000 Decl ArrayDecl str char + 80 5 FuncDef Decl FuncDecl main int Compound Decl number int While != FuncCall scanf ExprList ""%s%d"" str & number eof Compound Decl len int FuncCall strlen ExprList str If == % number 8 0 Compound FuncCall printf ExprList ""\n"" End If || == % number 8 1 == % number 8 - 7 Compound End If || == % number 8 2 == % number 8 - 6 Compound End If || == % number 8 3 == % number 8 - 5 Compound End If || == % number 8 4 == % number 8 - 4 Compound FuncCall printf ExprList ""\n"" End If || == % number 8 5 == % number 8 - 3 Compound End If || == % number 8 6 == % number 8 - 2 Compound End If || == % number 8 7 == % number 8 - 1 Compound For DeclList Decl i int 0 < i len ++ i Compound For DeclList Decl j int 0 < j i ++ j FuncCall printf ExprList "" "" FuncCall printf ExprList ""%c\n"" ArrayRef str i End End End Return 0 End",1
282,282,"FileAST Typedef ll long Decl n int Decl ArrayDecl ArrayDecl Next int 2 100010 Decl ArrayDecl vis int 100010 Decl ArrayDecl check int 100010 Decl FuncDecl ParamList Decl s int dfs void Decl ArrayDecl ch char 100010 Decl tot int Decl FuncDecl ParamList Decl x int print void FuncDef Decl FuncDecl main int Compound >> cin n For DeclList Decl i int 1 <= i n ++ i Compound >> cin ArrayRef ArrayRef next i 1 End FuncCall dfs ExprList 1 If == ArrayRef check 1 0 Compound FuncCall puts ExprList ""No solution!"" Return 0 End FuncCall memset ExprList vis 0 sizeof vis FuncCall print ExprList 1 Return 0 End",0
814,814,,1
684,684,"FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl a int 100 Decl i int Decl y int Decl m int Decl d int Decl s int FuncCall scanf ExprList ""%d%d%d"" & y & m & d If || && == % y 4 0 > % y 100 0 == % y 400 0 = ArrayRef a 2 29 = ArrayRef a 2 28 = ArrayRef a 1 31 = ArrayRef a 3 31 = ArrayRef a 5 31 = ArrayRef a 7 31 = ArrayRef a 8 31 = ArrayRef a 10 31 = ArrayRef a 12 31 = ArrayRef a 4 30 = ArrayRef a 6 30 = ArrayRef a 9 30 = ArrayRef a 11 30 = s 0 For = i 1 < i m ++ i = s + s ArrayRef a i = s + s d FuncCall printf ExprList ""%d\n"" s Return 0 End",1
1020,1020,,1
92,92,"FileAST FuncDef Decl FuncDecl main int Compound Decl i int Decl k int Decl row int Decl col int Decl ROW int Decl ArrayDecl ArrayDecl sz int 100 100 Decl COL int Decl ArrayDecl sum int 100 FuncCall scanf ExprList ""%d"" & k For = i 0 < i k ++ i Compound FuncCall printf ExprList ""%d\n"" ArrayRef sum i End FuncCall scanf ExprList ""%d"" & k Return 0 End",0
164,164,"FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl m int Decl n int Decl a int Decl b int Decl i int Decl h int Decl s int Decl t int Decl p int Decl ArrayDecl ArrayDecl sz int 100 100 Decl ArrayDecl result int 100 FuncCall scanf ExprList ""%d"" & k For = i 0 < i k ++ i Compound FuncCall scanf ExprList ""%d %d"" & n & m For = a 0 < a n ++ a Compound For = b 0 < b m ++ b Compound FuncCall scanf ExprList ""%d"" & ArrayRef ArrayRef sz a b End End ExprList = h 0 = s 0 = t 0 = p 0 For = b 0 < b m ++ b Compound = h + h ArrayRef ArrayRef sz 0 b If > n 1 Compound = s + s ArrayRef ArrayRef sz - n 1 b End End For = a 1 < a - n 1 ++ a Compound = t + t ArrayRef ArrayRef sz a 0 If > m 1 Compound = p + p ArrayRef ArrayRef sz a - m 1 End End = ArrayRef result i + + + h s t p End Return 0 End",0
196,196,"FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl s long 51 InitList 0 1 Decl i int For = i 2 <= i 50 ++ i = ArrayRef s i + ArrayRef s - i 2 ArrayRef s - i 1 Decl n int While && FuncCall scanf ExprList ""%d"" & n != n - 1 FuncCall printf ExprList ""%I64d\n"" ArrayRef s n Return 0 End",0
679,679,"FileAST Decl inf int 0x3f3f3f3f Decl ArrayDecl ArrayDecl map int 550 550 Decl ArrayDecl vis int 550 Decl ArrayDecl val int 550 Decl ArrayDecl dis int 550 Decl ArrayDecl sum int 550 FuncDef Decl FuncDecl main int Compound Decl n int Decl m int Decl s int Decl e int FuncCall scanf ExprList ""%d %d %d %d"" & n & m & s & e Decl i int Decl j int Decl k int 0 For = i 0 < i n ++ i Compound FuncCall scanf ExprList ""%d"" & ArrayRef val i End Decl x int Decl y int Decl z int = ArrayRef dis s 0 = ArrayRef sum s ArrayRef val s Decl min int Decl v int FuncCall printf ExprList ""%d %d\n"" ArrayRef dis e ArrayRef sum e Return 0 End",1
230,230,FileAST FuncDef Decl FuncDecl ParamList Decl m int Decl n int Decl ArrayDecl ArrayDecl a int 100 sum int Compound Decl i int Decl sum int 0 For = i 1 <= i - m 2 ++ i Compound += sum * * + a i += sum * - + * + a i n 1 End Return sum End Decl FuncDecl main int,0
435,435,"FileAST Typedef ll long FuncDef Decl FuncDecl main int Compound Decl n ll Decl ArrayDecl ArrayDecl dp ll 36 36 Decl cas ll 1 EmptyStatement = ArrayRef ArrayRef dp 0 0 0 = ArrayRef ArrayRef dp 1 1 1 For DeclList Decl i int 1 <= i 35 ++ i Compound = ArrayRef ArrayRef dp i i ArrayRef ArrayRef dp - i 1 i For DeclList Decl j int + i 1 <= j 35 ++ j Compound = ArrayRef ArrayRef dp i j + ArrayRef ArrayRef dp i - j 1 ArrayRef ArrayRef dp - i 1 j End End While && ~ FuncCall scanf ExprList ""%I64d"" & n != n - 1 Compound FuncCall printf ExprList ""%I64d %I64d %I64d\n"" ++ cas n * 2 ArrayRef ArrayRef dp n n End Return 0 End",0
763,763,,1
64,64,"FileAST Typedef ll long Decl inf int 0x3f3f3f3f Decl maxn int + 4e5 10 Decl maxv int + 1e3 10 Decl eps double 1e-9 Decl mod ll 998244353 Decl g ll 3 FuncDef Decl FuncDecl ParamList Decl a ll Decl n ll Pow ll Compound Decl ans ll 1 While n Compound If & n 1 = ans % * ans a mod >>= n 1 = a % * a a mod End Return ans End Decl FuncDecl ParamList Decl ArrayDecl y ll Decl len int rader void Decl FuncDecl ParamList Decl ArrayDecl y ll Decl len int Decl on int ntt void Decl ArrayDecl inv ll maxn Decl ArrayDecl fac ll maxn Decl ArrayDecl f ll maxn Decl inv2 ll Decl ArrayDecl a ll maxn Decl ArrayDecl b ll maxn Decl ArrayDecl A ll maxn Decl n int Decl FuncDecl init void Decl FuncDecl solve void Decl FuncDecl Conv void FuncDef Decl FuncDecl gao void Compound Decl r ll inv2 For DeclList Decl i int 1 <= i n ++ i Compound = ArrayRef f i % * % * r ArrayRef inv - i 1 mod ArrayRef a - n i mod = ArrayRef f i % + ArrayRef f - i 1 ArrayRef f i mod FuncCall printf ExprList ""%lld "" ArrayRef f i = r % * r inv2 mod End FuncCall puts ExprList """" End Decl FuncDecl main int",0
811,811,,1
40,40,FileAST Decl ArrayDecl ArrayDecl m int 100 100 Decl FuncDecl a void FuncDef Decl FuncDecl main int Compound Decl k int Decl i int >> cin k For = i 0 < i k ++ i Compound FuncCall a End Return 0 End,0
309,309,FileAST FuncDef Decl FuncDecl function void Compound Decl ArrayDecl ArrayDecl a int 110 110 Decl PtrDecl ArrayDecl p int 110 Decl n int Decl m int Decl i int Decl sum int 0 Decl j int >> >> cin n m = p a For = i 1 < i - n 1 ++ i Compound += sum * * + p i If > m 1 += sum * - + * + p i m 1 End << << cout sum endl End Decl FuncDecl main int,0
311,311,"FileAST FuncDef Decl FuncDecl ParamList Decl argc int Decl ArrayDecl PtrDecl argv char main int Compound Decl year int Decl month int Decl day int Decl ArrayDecl monthday int 12 InitList 31 28 31 30 31 30 31 31 30 31 30 31 FuncCall scanf ExprList ""%d%d%d"" & year & month & day Decl i int Decl sum int 0 For = i 1 < i month ++ i Compound = sum + sum ArrayRef monthday - i 1 End = sum + sum day Decl a int = a % year 4 If && > month 2 == a 0 Compound = sum + sum 1 End FuncCall printf ExprList ""%d"" sum Return 0 End",0
197,197,FileAST FuncDef Decl FuncDecl main int Compound Decl k int 0 Decl ArrayDecl ArrayDecl juzhen int 100 100 Decl m int 0 Decl n int 0 >> cin k While > k 0 Compound = m 0 = n 0 FuncCall memset ExprList juzhen 0 sizeof juzhen >> >> cin m n Decl i int 0 Decl j int 0 Decl sum int 0 For = j 1 <= j - m 2 ++ j Compound = sum + sum * - + * + juzhen j n 1 End << << cout sum endl -- k End Return 0 End,0
56,56,"FileAST FuncDef Decl FuncDecl ParamList Decl m int Decl n int sum int Compound Decl ArrayDecl ArrayDecl a int n m Decl i int Decl j int Decl t int 0 If || == m 1 == n 1 For = i 0 < i - + m n 1 ++ i Compound FuncCall scanf ExprList ""%d"" & j += t j End Compound End Return t End Decl FuncDecl main int",0
958,958,,1
460,460,"FileAST Typedef ll long Decl maxn int 10000010 Decl mod int + 1e9 7 Decl ArrayDecl fac ll maxn Decl ArrayDecl inv ll maxn FuncDef Decl FuncDecl ParamList Decl n int Decl m int C ll Compound Return % * % * ArrayRef fac n ArrayRef inv m mod ArrayRef inv - n m mod End FuncDef Decl FuncDecl ParamList Decl n int Decl m int A ll Compound Return % * ArrayRef fac n ArrayRef inv - n m mod End Decl n int Decl ArrayDecl b ll maxn FuncDef Decl FuncDecl main int Compound FuncCall scanf ExprList ""%d"" & n = ArrayRef b 0 1 = ArrayRef b 1 2 For DeclList Decl i int 2 <= i n ++ i Compound = ArrayRef b i % - + % * * * 1LL 2 i ArrayRef b - i 1 mod mod % * % * * 1LL - i 1 - i 1 mod ArrayRef b - i 2 mod mod End Decl ans ll 0 = ArrayRef fac 0 1 = ArrayRef inv 1 1 = ArrayRef inv 0 1 FuncCall printf ExprList ""%lld\n"" % ans mod Return 0 End",0
683,683,FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl x int 1000 Decl ArrayDecl a int 1000 Decl ArrayDecl y int 1000 >> >> cin ArrayRef x 1 ArrayRef y 1 Decl i int Decl j int = ArrayRef a 0 1 For = i 1 < i 100 ++ i Compound = ArrayRef a i * ArrayRef a - i 1 2 End Decl n int j Decl m int j If && == ArrayRef x 1 1000 == ArrayRef y 1 1000 << << cout 1000 endl << << cout ArrayRef x + - n i 1 endl Return 0 End,1
1018,1018,,1
944,944,,1
970,970,,1
176,176,"FileAST Decl FuncDecl ParamList Decl n int Decl m int C int FuncDef Decl FuncDecl main int Compound Decl i int Decl n int Decl ans long Decl ArrayDecl a long 13 = ArrayRef a 0 1 = ArrayRef a 1 0 = ArrayRef a 2 1 = ArrayRef a 3 2 For = i 4 <= i 12 ++ i = ArrayRef a i * - i 1 + ArrayRef a - i 1 ArrayRef a - i 2 While && != FuncCall scanf ExprList ""%d"" & n eof != n 0 Compound = ans 0 FuncCall printf ExprList ""%I64d\n"" ans End Return 0 End",0
114,114,"FileAST Typedef LL long FuncDef Decl FuncDecl main int Compound Decl t int Decl ArrayDecl ans double 101 Decl ArrayDecl a double 101 Decl ArrayDecl b double 101 While >> cin t Compound If < t 0 Break FuncCall memset ExprList ans 0 sizeof ans If > t 0 FuncCall printf ExprList ""%.1f %.1f"" ArrayRef a 0 ArrayRef b 0 For DeclList Decl i int 1 < i t ++ i Compound FuncCall printf ExprList "" %.1f %.1f"" ArrayRef a i ArrayRef b i End << cout endl End Return 0 End",0
473,473,"FileAST FuncDef Decl FuncDecl main int Compound Decl n int Decl i int 0 Decl j int 0 Decl k int 0 Decl x int Decl y int Decl ArrayDecl ArrayDecl an int 100 100 Decl ArrayDecl sum int 100 InitList 0 FuncCall scanf ExprList ""%d"" & n For = i 0 < i n ++ i Compound FuncCall scanf ExprList ""%d %d"" & x & y For = j 0 < j x ++ j Compound For = k 0 < k y ++ k Compound FuncCall scanf ExprList ""%d"" & ArrayRef ArrayRef an j k If || || || == j 0 == j - x 1 == k 0 == k - y 1 Compound += ArrayRef sum i ArrayRef ArrayRef an j k End End End End Return 0 End",0
107,107,FileAST FuncDef Decl FuncDecl main int Compound Decl t int 100 Decl idx int 100 Decl T int 100 Decl i int 100 Decl j int 100 Decl lines int 100 Decl fun_name int 100 Decl None int 100 Decl N int 100 Decl ArrayDecl a int 101 Decl ArrayDecl nb int 101 Decl ArrayDecl na int 101 Decl ArrayDecl b int 101 For = t 0 < t t ++ t Compound For = i 2 < i - n 1 ++ i Compound = ArrayRef b i FuncCall log10 ExprList * 0.33333 + + ArrayRef a - i 1 FuncCall cos ExprList ArrayRef a i ArrayRef a + i 1 End For = j 2 < j - n 1 ++ j Compound = ArrayRef a j ArrayRef b j End End Return 0 End,0
751,751,,1
170,170,"FileAST Decl MAXN int 105 Decl n int Decl m int Decl ArrayDecl ArrayDecl field char maxn maxn Decl FuncDecl ParamList Decl i int Decl j int dfs void Decl FuncDecl solve void FuncDef Decl FuncDecl main int Compound FuncCall scanf ExprList ""%d%d"" & n & m For DeclList Decl i int 0 < i n ++ i FuncCall scanf ExprList ""%s"" & ArrayRef field i FuncCall solve End",0
600,600,"FileAST FuncDef Decl FuncDecl main int Compound Decl y int Decl m int Decl d int Decl i int Decl D int Decl ArrayDecl p int 12 InitList 31 28 31 30 31 30 31 31 30 31 30 31 = d 0 FuncCall scanf ExprList ""%d%d%d"" & y & m & d If || && == % y 4 0 != % y 100 0 == % y 400 0 Compound For = i 0 < i - m 1 ++ i Compound = d + d ArrayRef p i End = d + + d d 1 FuncCall printf ExprList ""%d"" d End Compound For = i 0 < i - m 1 ++ i Compound = d + d ArrayRef p i End = d + d d FuncCall printf ExprList ""%d"" d End Return 0 End",1
1052,1052,,1
479,479,"FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl j int 0 Decl y int Decl i int Decl m int Decl d int Decl ArrayDecl number int 12 InitList 31 28 31 30 31 30 31 31 30 31 30 31 FuncCall scanf ExprList ""%d %d %d"" & y & m & d For = i 1 < i m ++ i Compound += j ArrayRef number - i 1 End = k + j d If || && == % y 4 0 != % y 100 0 == % y 400 0 Compound If > m 1 FuncCall printf ExprList ""%d"" + k 1 End FuncCall printf ExprList ""%d"" k Return 0 End",0
609,609,"FileAST FuncDef Decl FuncDecl main int Compound Decl year int Decl month int Decl day int Decl n int Decl i int Decl t int 0 FuncCall scanf ExprList ""%d%d%d"" & year & month & day Decl ArrayDecl a int 13 InitList 0 31 28 31 30 31 30 31 31 30 31 30 31 For = i 0 < i month ++ i Compound = t + t ArrayRef a i End If >= month 3 If == % year 4 0 If == % year 100 0 If == % year 400 0 = n + + t 1 day = n + t day = n + + t 1 day = n + t day = n + t day FuncCall printf ExprList ""%d"" n Return 0 End",1
149,149,"FileAST Decl N int 12345 Decl M int 123456 Decl inf int 0x3f3f3f3f Decl ArrayDecl edge Struct Decl from int Decl to int Decl dis int Decl nxt int << m 1 Decl ArrayDecl head int n Decl edgenum int Decl FuncDecl ParamList Decl u int Decl v int Decl d int addedge void Decl n int Decl m int Decl ArrayDecl sp int n Decl ArrayDecl in int n Decl FuncDecl topsort void Decl ArrayDecl ArrayDecl dp int 2 n Decl ArrayDecl a int m Decl FuncDecl ParamList Decl u int solve void FuncDef Decl FuncDecl main int Compound Decl T int Decl u int Decl v int Decl d int FuncCall scanf ExprList ""%d"" & t While -- t Compound FuncCall memset ExprList head - 1 sizeof head = edgenum 0 FuncCall memset ExprList in 0 sizeof in FuncCall scanf ExprList ""%d %d"" & n & m FuncCall topsort For DeclList Decl i int 0 < i n ++ i Compound = ArrayRef ArrayRef dp i 0 = ArrayRef ArrayRef dp i 1 inf End If == ArrayRef ArrayRef dp 0 1 inf = ArrayRef ArrayRef dp 0 1 - 1 FuncCall printf ExprList ""%d\n"" ArrayRef ArrayRef dp 0 1 End Return 0 End",0
209,209,"FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl m int Decl n int Decl ArrayDecl ArrayDecl sz int 100 100 Decl ArrayDecl sum int 100 Decl i int Decl j int Decl a int Decl b int Decl c int Decl d int Decl e int = b 0 = c 0 = d 0 = e 0 FuncCall scanf ExprList ""%d"" & k For = a 0 < a k ++ a Compound FuncCall scanf ExprList ""%d %d"" & m & n For = i 0 < i m ++ i Compound For = j 0 < j n ++ j Compound FuncCall scanf ExprList ""%d"" & ArrayRef ArrayRef sz i j End End For = j 0 < j n ++ j Compound = b + b ArrayRef ArrayRef sz 0 j = c + c ArrayRef ArrayRef sz - m 1 j End For = i 1 < i - m 1 ++ i Compound = d + d ArrayRef ArrayRef sz i 0 = e + e ArrayRef ArrayRef sz i - n 1 End = ArrayRef sum a + + + b c d e = b 0 = c 0 = d 0 = e 0 End Return 0 End",0
297,297,"FileAST Typedef LL long Decl maxn LL 1e6 Decl mod LL 10000000 Decl ArrayDecl str char + 80 5 FuncDef Decl FuncDecl main int Compound Decl number int While != FuncCall scanf ExprList ""%s%d"" str & number eof Compound Decl len int FuncCall strlen ExprList str If == % number 8 0 Compound FuncCall printf ExprList ""\n"" End If || == % number 8 1 == % number 8 - 7 Compound End If || == % number 8 2 == % number 8 - 6 Compound End If || == % number 8 3 == % number 8 - 5 Compound For DeclList Decl i int 0 < i len ++ i Compound For DeclList Decl j int 0 < j i ++ j FuncCall printf ExprList "" "" FuncCall printf ExprList ""%c\n"" ArrayRef str - - len 1 i End End If || == % number 8 4 == % number 8 - 4 Compound FuncCall printf ExprList ""\n"" End If || == % number 8 5 == % number 8 - 3 Compound End If || == % number 8 6 == % number 8 - 2 Compound End If || == % number 8 7 == % number 8 - 1 Compound End End Return 0 End",0
278,278,"FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl ArrayDecl aaa int 3 5 Decl year int Decl mon int Decl day int Decl i int Decl n int Decl m int Decl ArrayDecl month int 12 ExprList = ArrayRef month 0 31 = ArrayRef month 1 28 = ArrayRef month 2 31 = ArrayRef month 3 30 = ArrayRef month 4 31 = ArrayRef month 5 30 = ArrayRef month 6 31 = ArrayRef month 7 31 = ArrayRef month 8 30 = ArrayRef month 9 31 = ArrayRef month 10 30 = ArrayRef month 11 31 For = i 0 < i 5 ++ i Compound FuncCall scanf ExprList ""%d %d %d\n"" & year & mon & day = ArrayRef ArrayRef aaa i 0 year = ArrayRef ArrayRef aaa i 1 mon = ArrayRef ArrayRef aaa i 2 day End End",0
307,307,"FileAST FuncDef Decl FuncDecl ParamList Decl argc int Decl ArrayDecl PtrDecl argv char main int Compound Decl x int Decl s int Decl c int Decl y int Decl e int 0 Decl t int Decl q int Decl n int 0 Decl j int Decl ArrayDecl b int 1000 Decl i int Decl ArrayDecl a int 1000 Decl num int = num 1 FuncCall scanf ExprList ""%d %d"" & x & y = s x = c y If || == x 1 == y 1 FuncCall printf ExprList ""1\n"" Compound DoWhile != x 1 Compound = x / x 2 ++ n End DoWhile != y 1 Compound ++ e = y / y 2 End ++ e ++ n For = i 1 <= i n ++ i Compound = ArrayRef a i s = s / s 2 End End Return 0 End",0
672,672,FileAST Decl FuncDecl ParamList Decl n int ping int Decl FuncDecl ParamList Decl n int run int FuncDef Decl FuncDecl main int Compound Decl n int Decl month int Decl day int Decl sum int 0 >> >> >> cin n month day Decl i int If || == % n 400 0 && == % n 4 0 != % n 100 0 Compound For = i 1 < i month ++ i += sum FuncCall run ExprList i += sum day << cout sum End Compound += sum day << cout sum End Return 0 End,1
863,863,,1
173,173,"FileAST Decl MAXN int 50005 Decl ArrayDecl a int maxn Decl ArrayDecl T Struct Decl L int Decl R int Decl nMin int Decl nMax int * maxn 3 Decl FuncDecl ParamList Decl root int Decl l int Decl r int init void Decl FuncDecl ParamList Decl root int Decl l int Decl r int get_max int Decl FuncDecl ParamList Decl root int Decl l int Decl r int get_min int FuncDef Decl FuncDecl main int Compound Decl n int Decl q int FuncCall scanf ExprList ""%d%d"" & n & q For DeclList Decl i int 1 <= i n ++ i FuncCall scanf ExprList ""%d"" & ArrayRef a i FuncCall memset ExprList t 0 sizeof t FuncCall init ExprList 1 1 n While -- q Compound Decl l int Decl r int FuncCall scanf ExprList ""%d%d"" & l & r FuncCall printf ExprList ""%d\n"" - FuncCall get_max ExprList 1 l r FuncCall get_min ExprList 1 l r End End",0
693,693,FileAST Typedef ll long Decl eps double 1e-9 Decl mod ll 998244353 Decl g ll 3 FuncDef Decl FuncDecl ParamList Decl a ll Decl n ll Pow ll Compound Decl ans ll 1 While n Compound If & n 1 = ans % * ans a mod >>= n 1 = a % * a a mod End Return ans End Decl ArrayDecl A ll << 1 20 Decl ArrayDecl B ll << 1 20 Decl FuncDecl ParamList Decl ArrayDecl A ll Decl len int rader void FuncDef Decl FuncDecl ParamList Decl ArrayDecl A ll Decl len int Decl on int ntt void Compound FuncCall rader ExprList a len If == on - 1 Compound Decl t ll FuncCall pow ExprList len - mod 2 For DeclList Decl i int 0 < i len ++ i = ArrayRef a i % * ArrayRef a i t mod End End Decl n int Decl m int Decl FuncDecl Conv void Decl FuncDecl main int,1
567,567,FileAST Typedef ll long Decl mod int 998244353 Decl maxn int + 2e5 123 Decl n int Decl k int FuncDef Decl FuncDecl ParamList Decl a ll Decl b ll qpower ll Compound Decl ans ll 1 While > b 0 Compound If & b 1 Compound = ans % * ans a mod End >>= b 1 = a % * a a mod End Return ans End Decl ArrayDecl fac ll maxn Decl ArrayDecl inv ll maxn FuncDef Decl FuncDecl ParamList Decl n int Decl m int C ll Compound Return % * % * ArrayRef fac n ArrayRef inv m mod ArrayRef inv - n m mod End FuncDef Decl FuncDecl init void Compound = ArrayRef fac 0 = ArrayRef inv 0 1 For DeclList Decl i int 1 < i maxn ++ i Compound = ArrayRef fac i % * ArrayRef fac - i 1 i mod = ArrayRef inv i % * FuncCall qpower ExprList i - mod 2 ArrayRef inv - i 1 mod End End Decl FuncDecl main int,1
723,723,"FileAST Decl ArrayDecl ans int 25 Decl ArrayDecl a int 25 FuncDef Decl FuncDecl main int Compound Decl i int Decl j int Decl n int Decl s int Decl sum int Decl T int FuncCall scanf ExprList ""%d"" & t While -- t Compound FuncCall scanf ExprList ""%d"" & n = sum 0 FuncCall memset ExprList ans 0 sizeof ans For = i 0 < i - n 1 ++ i Compound FuncCall printf ExprList ""%d "" ArrayRef ans i End FuncCall printf ExprList ""%d\n"" ArrayRef ans i End Return 0 End",1
286,286,FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl m int Decl n int Decl i int Decl j int Decl ArrayDecl ArrayDecl jz int 100 100 Decl sum int 0 >> cin k While >> >> cin m n Compound If && == m 1 == n 1 = sum ArrayRef ArrayRef jz 0 0 If == m 1 Compound For = i 0 < i n ++ i = sum + sum ArrayRef ArrayRef jz 0 i End If == m 1 Compound For = i 0 < i n ++ i = sum + sum ArrayRef ArrayRef jz 0 i End Compound End << << cout sum endl = sum 0 End Return 0 End,0
243,243,FileAST Decl ArrayDecl c int 123456 Decl ArrayDecl t int 123456 Decl mx int 0 Decl mn int 12345 Decl eps double 1e-14 Decl n int Decl T int FuncDef Decl FuncDecl ParamList Decl x double calc double Compound Decl res double 0 For DeclList Decl i int 0 < i n ++ i Compound += res / * Cast Typename TypeDecl double ArrayRef c i - ArrayRef t i x - x t End Return res End Decl FuncDecl main int,0
438,438,FileAST Decl ArrayDecl ArrayDecl ArrayDecl a int 100 100 100 FuncDef Decl FuncDecl main int Compound Decl k int Decl ArrayDecl m int 100 Decl ArrayDecl n int 100 Decl i int Decl j int Decl t int Decl ArrayDecl s int 100 >> cin k For = i 0 < i k ++ i << << cout ArrayRef s i endl Return 0 End,0
192,192,"FileAST Decl N int 12345 Decl M int 123456 Decl inf int 0x3f3f3f3f Decl ArrayDecl edge Struct Decl from int Decl to int Decl dis int Decl nxt int << m 1 Decl ArrayDecl head int n Decl edgenum int Decl FuncDecl ParamList Decl u int Decl v int Decl d int addedge void Decl n int Decl m int Decl ArrayDecl sp int n Decl ArrayDecl in int n Decl FuncDecl topsort void Decl ArrayDecl ArrayDecl dp int 2 n Decl ArrayDecl a int m Decl FuncDecl ParamList Decl u int solve void FuncDef Decl FuncDecl main int Compound Decl T int Decl u int Decl v int Decl d int FuncCall scanf ExprList ""%d"" & t While -- t Compound FuncCall memset ExprList head - 1 sizeof head = edgenum 0 FuncCall memset ExprList in 0 sizeof in FuncCall scanf ExprList ""%d %d"" & n & m For DeclList Decl i int 1 <= i m ++ i Compound FuncCall scanf ExprList ""%d %d %d"" & u & v & d FuncCall addedge ExprList u v d FuncCall addedge ExprList v u d ++ ArrayRef in u End FuncCall topsort If == ArrayRef ArrayRef dp 0 1 inf = ArrayRef ArrayRef dp 0 1 - 1 FuncCall printf ExprList ""%d\n"" ArrayRef ArrayRef dp 0 1 End Return 0 End",0
94,94,FileAST Decl FuncDecl ParamList Typename TypeDecl int leap int FuncDef Decl FuncDecl main int Compound Decl y int Decl month int Decl d int Decl sum int 0 Decl ArrayDecl m int 13 InitList 0 31 28 31 30 31 30 31 31 30 31 30 31 >> >> >> cin y month d = ArrayRef m 2 + ArrayRef m 2 FuncCall leap ExprList y For DeclList Decl i int 0 < i month ++ i Compound = sum + sum ArrayRef m i End = sum + sum d << << cout sum endl Return 0 End Decl FuncDecl ParamList Decl n int leap int,0
727,727,FileAST FuncDef Decl FuncDecl main int Compound Decl n int Decl m int Decl q int Decl ArrayDecl ArrayDecl a int 100 100 Decl sum int 0 Decl PtrDecl ArrayDecl p int 100 a >> cin q For DeclList Decl i int 0 < i q ++ i Compound = sum 0 >> >> cin m n For DeclList Decl j int 0 < j m ++ j For DeclList Decl k int 0 < k n ++ k >> cin ArrayRef ArrayRef a j k For DeclList Decl j int 0 < j m ++ j For DeclList Decl k int 0 < k n ++ k Compound If || == j 0 == j - m 1 += sum ArrayRef ArrayRef p j k Compound If || == k 0 == k - n 1 += sum ArrayRef ArrayRef p j k End End << << cout sum endl End Return 0 End,1
860,860,,1
759,759,,1
21,21,FileAST Typedef ll long Decl w int Decl num int Decl len int Decl N int + 200000 10 Decl ArrayDecl a int n Decl ArrayDecl b int n FuncDef Decl FuncDecl ParamList Decl n int check int Compound For DeclList Decl i int 1 <= i n ++ i = ArrayRef b i ArrayRef a i FuncCall sort ExprList + b 1 + + b 1 n Decl cnt int 0 = ArrayRef b 0 0 = ArrayRef b + n 1 + w 1 If >= cnt num Return 1 Return 0 End Decl FuncDecl main int,0
503,503,"FileAST Decl ArrayDecl cnt int 105 FuncDef Decl FuncDecl main int Compound Decl n int Decl i int Decl x int FuncCall freopen ExprList ""poj1740.txt"" ""r"" stdin FuncCall freopen ExprList ""poj1740ans.txt"" ""w"" stdout While && FuncCall scanf ExprList ""%d"" & n n Compound FuncCall memset ExprList cnt 0 sizeof cnt For = i 0 < i n ++ i Compound FuncCall scanf ExprList ""%d"" & x ++ ArrayRef cnt x End FuncCall printf ExprList ""%d\n"" != i 101 End Return 0 End",0
408,408,"FileAST Decl ArrayDecl ArrayDecl A int 100 100 FuncDef Decl FuncDecl main int Compound Decl PtrDecl pt int Decl i int Decl j int Decl k int Decl m int Decl n int Decl PtrDecl re int Decl ArrayDecl B int 200 Decl number int FuncCall scanf ExprList ""%d"" & number = re b = re b = re b For = i 0 < i number ++ i Compound FuncCall printf ExprList ""%d\n"" * + re i End Return 0 End",0
292,292,"FileAST FuncDef Decl FuncDecl main int Compound Decl t int Decl n int Decl c char FuncCall scanf ExprList ""%d"" & t While -- t Compound FuncCall scanf ExprList ""%d"" & n Decl x int Decl y int Decl i int Decl ArrayDecl a char 10 ""#ZJUTACM"" For = i 0 < i n ++ i Compound FuncCall scanf ExprList ""%d%d"" & x & y FuncCall swap ExprList ArrayRef a x ArrayRef a y End End Return 0 End",0
558,558,"FileAST Decl FuncDecl ParamList Decl x int f int FuncDef Decl FuncDecl main int Compound Decl y int Decl m int Decl d int Decl a int Decl b int Decl c int Decl amount int 0 Decl ArrayDecl p int 12 InitList 31 28 31 30 31 30 31 31 30 31 30 31 FuncCall scanf ExprList ""%d %d %d"" & y & m & d If > m 2 Compound = a FuncCall f ExprList y If == a 1 = ArrayRef p 1 + ArrayRef p 1 1 For DeclList Decl i int 0 < i - m 1 ++ i = amount + amount ArrayRef p i = amount + amount d End If == m 1 = amount d If == m 2 = amount + 31 d FuncCall printf ExprList ""%d"" amount FuncCall getchar FuncCall getchar FuncCall getchar End",1
0,0,"FileAST Decl ArrayDecl ArrayDecl cnt long 20 20 Decl mxi int Decl ArrayDecl d int 20 Decl ans long Decl x int Decl FuncDecl ParamList Decl i int Decl cx int Decl sum long dfs void FuncDef Decl FuncDecl main int Compound Decl T int FuncCall scanf ExprList ""%d"" & t While -- t Compound Decl n int FuncCall scanf ExprList ""%d"" & n For DeclList Decl i int 0 < i 20 ++ i For DeclList Decl j int 0 <= j i ++ j = ArrayRef ArrayRef cnt i j 0 Decl a int FuncCall scanf ExprList ""%d"" & a = mxi 20 While && > mxi 0 ! ArrayRef ArrayRef cnt - mxi 1 - mxi 1 -- mxi = ans 1e18 FuncCall dfs ExprList 0 0 0 FuncCall printf ExprList ""%d %lld\n"" x ans End Return 0 End",0
182,182,FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl ArrayDecl a int 101 101 InitList 0 Decl m int Decl n int Decl k int Decl i int Decl j int Decl t int Decl ArrayDecl sum int 1001 InitList 0 >> cin k For = i 1 <= i k ++ i << << cout ArrayRef sum i endl Return 0 End,0
441,441,FileAST Typedef ll long Decl mod int + 1e9 7 Decl n int Decl k int Decl ArrayDecl f ll 100010 Decl ArrayDecl ans ll 100010 Decl ArrayDecl tmp ll 100010 Decl ArrayDecl x ll 100010 FuncDef Decl FuncDecl ParamList Decl PtrDecl ans ll Decl PtrDecl x ll dirichlet void Compound FuncCall memset ExprList tmp 0 sizeof tmp For DeclList Decl i int 1 <= i n ++ i Compound = ArrayRef ans i ArrayRef tmp i End End Decl FuncDecl qpower void Decl FuncDecl solve void Decl FuncDecl main int,0
716,716,"FileAST FuncDef Decl FuncDecl ParamList Decl argc int Decl ArrayDecl PtrDecl argv char main int Compound Decl a int Decl b int Decl c int Decl i int Decl s1 int 0 Decl s2 int Decl ArrayDecl n int 12 InitList 31 28 31 30 31 30 31 31 30 31 30 31 FuncCall scanf ExprList ""%d%d%d"" & a & b & c If || == % a 400 0 && == % a 4 0 != % a 100 0 = ArrayRef n 1 29 For = i 1 < i b ++ i = s1 + s1 ArrayRef n - i 1 = s2 + s1 c FuncCall printf ExprList ""%d\n"" s2 Return 0 End",1
349,349,"FileAST FuncDef Decl FuncDecl main int Compound Decl k int FuncCall scanf ExprList ""%d"" & k Decl m int Decl n int Decl ArrayDecl ArrayDecl a int 100 100 Decl i int Decl j int Decl e int Decl ArrayDecl sum int 100 InitList 0 For = e 0 < e k ++ e Compound FuncCall printf ExprList ""%d\n"" ArrayRef sum e End Return 0 End",0
254,254,"FileAST FuncDef Decl FuncDecl ParamList Decl argc int Decl ArrayDecl PtrDecl argv char main int Compound Decl year int Decl month int Decl day int Decl n int Decl mday int 0 Decl i int 1 Decl ArrayDecl p int 13 InitList 0 31 28 31 30 31 30 31 31 30 31 30 31 FuncCall scanf ExprList ""%d %d %d\n"" & year & month & day For = i 1 < i + month 1 ++ i Compound = mday + mday ArrayRef p - i 1 End If || && == % year 4 0 != % year 100 0 == % year 400 0 Compound If >= month 3 Compound = mday + mday 1 End Compound = mday mday End End = n + mday day FuncCall printf ExprList ""%d"" n Return 0 End",0
915,915,,1
765,765,,1
591,591,FileAST Decl MAXN int 105 Decl ArrayDecl ArrayDecl maze int maxn maxn Decl ArrayDecl ArrayDecl dir int 2 4 InitList - 1 0 1 0 0 1 0 - 1 Decl ans int Decl cnt int Decl C int Decl R int Decl K int FuncDef Decl FuncDecl ParamList Decl x int Decl y int dfs void Compound If || || || || < x 1 > x r < y 1 > y c == ArrayRef ArrayRef maze x y 0 Return = ArrayRef ArrayRef maze x y 0 ++ cnt For DeclList Decl i int 0 < i 4 ++ i FuncCall dfs ExprList + x ArrayRef ArrayRef dir i 0 + y ArrayRef ArrayRef dir i 1 End Decl FuncDecl main int,1
97,97,"FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl m int Decl n int Decl i int Decl ArrayDecl a int 10005 Decl s int FuncCall scanf ExprList ""%d"" & m While -- m Compound = s 0 FuncCall scanf ExprList ""%d"" & n FuncCall sort ExprList a + a n = k / n 2 For = i 0 < i n ++ i += s FuncCall abs ExprList - ArrayRef a i ArrayRef a k FuncCall printf ExprList ""%d\n"" s End End",0
184,184,FileAST FuncDef Decl FuncDecl main int Compound Decl idx int 100 Decl i int 100 Decl j int 100 Decl lines int 100 Decl n int 100 Decl fun_name int 100 Decl None int 100 Decl ArrayDecl na int 101 Decl ArrayDecl a int 101 For = i 0 < i n ++ i For = j 2 < j i ++ j = ArrayRef a i + ArrayRef a i 1 Return 0 End,0
868,868,,1
386,386,"FileAST Typedef LL long Decl maxn LL 1e6 Decl mod LL 10000000 Decl ArrayDecl str char + 80 5 FuncDef Decl FuncDecl main int Compound Decl number int While != FuncCall scanf ExprList ""%s%d"" str & number eof Compound Decl len int FuncCall strlen ExprList str If == % number 8 0 Compound FuncCall printf ExprList ""\n"" End If || == % number 8 1 == % number 8 - 7 Compound For DeclList Decl i int - len 1 >= i 0 -- i Compound For DeclList Decl j int 0 < j i ++ j FuncCall printf ExprList "" "" FuncCall printf ExprList ""%c\n"" ArrayRef str i End End If || == % number 8 2 == % number 8 - 6 Compound End If || == % number 8 3 == % number 8 - 5 Compound End If || == % number 8 4 == % number 8 - 4 Compound FuncCall printf ExprList ""\n"" End If || == % number 8 5 == % number 8 - 3 Compound End If || == % number 8 6 == % number 8 - 2 Compound End If || == % number 8 7 == % number 8 - 1 Compound End End Return 0 End",0
533,533,"FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl sum int Decl i int Decl j int Decl l int Decl ArrayDecl ArrayDecl a int 101 101 Decl m int Decl n int = sum 0 FuncCall scanf ExprList ""%d"" & k For = i 1 <= i k ++ i Compound = sum 0 FuncCall scanf ExprList ""%d%d"" & m & n For = j 1 <= j m ++ j Compound For = l 1 <= l n ++ l FuncCall scanf ExprList ""%d"" & ArrayRef ArrayRef a j l End For = j 1 <= j n ++ j = sum + + sum ArrayRef ArrayRef a 1 j ArrayRef ArrayRef a m j For = j 2 <= j - m 1 ++ j = sum + + sum ArrayRef ArrayRef a j 1 ArrayRef ArrayRef a j n FuncCall printf ExprList ""%d\n"" sum End Return 0 End",1
368,368,FileAST FuncDef Decl FuncDecl main int Compound Decl k int 0 >> cin k Decl m int 0 Decl n int 0 While >> >> cin m n Compound Decl result int 0 Decl ArrayDecl ArrayDecl num int 100 100 InitList 0 Decl i int Decl j int For = i 0 < i m ++ i For = j 0 < j n ++ j >> cin ArrayRef ArrayRef num i j << << cout result endl End Return 0 End,0
362,362,FileAST Typedef LL long Decl maxn LL + 1000 10 Decl mod LL 10000000 Decl ArrayDecl ArrayDecl a char 12 12 FuncDef Decl FuncDecl main int Compound Decl n int Decl m int While >> >> cin n m Compound Decl k int % m 4 If == k 0 Compound End If || == k 1 == k - 3 Compound End If || == k 2 == k - 2 Compound For DeclList Decl i int n >= i 1 -- i Compound For DeclList Decl j int n >= j 1 -- j Compound << cout ArrayRef ArrayRef a i j End << cout endl End End If || == k 3 == k - 1 Compound End End Return 0 End,0
162,162,"FileAST Decl MAXN int 1005 Decl ArrayDecl a int maxn FuncDef Decl FuncDecl main int Compound Decl t int FuncCall scanf ExprList ""%d"" & t While -- t Compound Decl n int Decl total int 0 FuncCall scanf ExprList ""%d"" & n For DeclList Decl i int 1 <= i n ++ i FuncCall scanf ExprList ""%d"" & ArrayRef a i FuncCall sort ExprList + a 1 + + a n 1 While n Compound If == n 1 Compound += total ArrayRef a 1 Break End If == n 2 Compound += total ArrayRef a 2 Break End If == n 3 Compound += total + + ArrayRef a 1 ArrayRef a 2 ArrayRef a 3 Break End Compound += total FuncCall min ExprList + + ArrayRef a 1 * 2 ArrayRef a 2 ArrayRef a n + + * 2 ArrayRef a 1 ArrayRef a - n 1 ArrayRef a n -= n 2 End End FuncCall printf ExprList ""%d\n"" total End End",0
579,579,FileAST Decl MAXN int 40 Decl mod int + 1e9 7 Decl ArrayDecl fact long * maxn maxn Decl ArrayDecl ArrayDecl C long maxn maxn Decl ArrayDecl ArrayDecl dp long maxn maxn FuncDef Decl FuncDecl init void Compound = ArrayRef fact 0 1 For DeclList Decl i int 1 <= i 110 ++ i = ArrayRef fact i % * ArrayRef fact - i 1 3 mod = ArrayRef ArrayRef c 0 0 1 End Decl FuncDecl main int,1
4,4,FileAST FuncDef Decl FuncDecl main int Compound Decl group int 0 Decl row int 0 Decl col int 0 Decl ArrayDecl ArrayDecl a int 100 100 Decl i int Decl j int Decl sum int 0 >> cin group While -- group Compound >> >> cin row col For = i 0 < i row ++ i For = j 0 < j col ++ j >> cin ArrayRef ArrayRef a i j = sum 0 If && == row 1 == col 1 = sum ArrayRef ArrayRef a 0 0 Compound End << << cout sum endl End End,0
501,501,"FileAST FuncDef Decl FuncDecl ParamList Typename TypeDecl void mk void Compound Decl m int Decl n int Decl i int Decl j int Decl k int Decl s int 0 Decl ArrayDecl ArrayDecl a int 100 100 FuncCall scanf ExprList ""%d %d"" & m & n If != m 1 For = k - n 2 >= k 0 -- k Compound += s ArrayRef ArrayRef a - m 1 k End If != n 1 FuncCall printf ExprList ""%d\n"" s End Decl FuncDecl main int",0
757,757,,1
878,878,,1
240,240,FileAST FuncDef Decl FuncDecl main int Compound Decl idx int 100 Decl k int 100 Decl i int 100 Decl j int 100 Decl lines int 100 Decl n int 100 Decl fun_name int 100 Decl None int 100 Decl ArrayDecl ArrayDecl A int 101 101 Decl ArrayDecl ArrayDecl B int 101 101 Decl ArrayDecl ArrayDecl C int 101 101 Decl ArrayDecl ArrayDecl nC int 101 101 For = i 0 < i n ++ i For = j 0 < j n ++ j Compound = ArrayRef ArrayRef c i j 0 For = k 0 < k n ++ k = ArrayRef ArrayRef c i j + ArrayRef ArrayRef c i j * ArrayRef ArrayRef a i k ArrayRef ArrayRef b k j End Return 0 End,0
996,996,,1
731,731,FileAST Typedef ll long Decl maxn int 123456 Decl ArrayDecl p int 8 Decl ArrayDecl ArrayDecl sx int 6 maxn Decl ArrayDecl ArrayDecl sy int 6 maxn Decl ArrayDecl ArrayDecl dp int 150 123 Decl ArrayDecl op_s int 123 Decl ArrayDecl op_t int 123 Decl ArrayDecl ArrayDecl id int 6 150 FuncDef Decl FuncDecl init void Compound = ArrayRef p 0 1 For DeclList Decl i int 1 <= i 5 ++ i = ArrayRef p i * ArrayRef p - i 1 i Decl ArrayDecl a int 6 Decl cnt int 0 DoWhile FuncCall next_permutation ExprList + a 1 + a 6 Compound ++ cnt End End Decl FuncDecl ParamList Decl ArrayDecl a int Cantor int Decl FuncDecl ParamList Decl ArrayDecl a int Decl ArrayDecl b int Decl ArrayDecl c int cal void Decl FuncDecl ParamList Decl ArrayDecl a int Decl ArrayDecl b int cal2 void Decl FuncDecl main int,1
244,244,"FileAST Decl mod int 9973 Typedef ll long Decl n int Decl ArrayDecl c int 123456 Decl FuncDecl ParamList Decl x int lowbit int Decl FuncDecl ParamList Decl x int Decl val int update void Decl FuncDecl ParamList Decl x int sum int FuncDef Decl FuncDecl main int Compound Decl x int Decl y int While >> cin n Compound If == n 0 Break FuncCall memset ExprList c 0 sizeof c For DeclList Decl i int 1 <= i n ++ i Compound >> >> cin x y FuncCall update ExprList y 1 FuncCall update ExprList - x 1 - 1 End FuncCall puts ExprList """" End Return 0 End",0
374,374,"FileAST FuncDef Decl FuncDecl main int Compound Decl m int Decl n int Decl nums int Decl ArrayDecl ArrayDecl jz int 100 100 InitList 0 FuncCall scanf ExprList ""%d"" & nums Decl i int Decl j int Decl k int Decl sum int For = i 0 < i 100 ++ i For = j 0 < j 100 ++ j = ArrayRef ArrayRef jz i j 0 Return 0 End",0
666,666,FileAST FuncDef Decl FuncDecl ParamList Decl y int Decl m int Decl d int fun int Compound Decl ArrayDecl a int 12 InitList 0 31 28 31 30 31 30 31 31 30 31 30 Decl i int Decl c int = c 0 For = i 0 < i m ++ i = c + c ArrayRef a i = c + c d If && > m 2 || && == % y 4 0 != % y 100 0 == % y 400 0 ++ c Return c End Decl FuncDecl main int,1
911,911,,1
708,708,"FileAST Typedef LL long Decl FuncDecl ParamList Decl m int Decl n int f int FuncDef Decl FuncDecl main int Compound Decl n int Decl x int Decl y int Decl sum int While >> cin n Compound = sum 0 For DeclList Decl i int 0 < i n ++ i Compound FuncCall scanf ExprList ""%d(%d)"" & x & y += sum FuncCall f ExprList x y End FuncCall printf ExprList ""%d\n"" sum End Return 0 End",1
1039,1039,,1
492,492,"FileAST FuncDef Decl FuncDecl main int Compound Decl FuncDecl ParamList Decl x int Decl y int sum int Decl k int Decl i int Decl m int Decl n int FuncCall scanf ExprList ""%d"" & k For = i 1 <= i k ++ i Compound FuncCall scanf ExprList ""%d %d"" & m & n FuncCall printf ExprList ""%d\n"" FuncCall sum ExprList m n End Return 0 End Decl FuncDecl ParamList Decl x int Decl y int sum int",0
968,968,,1
343,343,FileAST FuncDef Decl FuncDecl main int Compound Decl k int >> cin k While >= k 1 Compound Decl m int Decl n int Decl i int Decl j int Decl PtrDecl p int null Decl sum int 0 >> >> cin m n Decl ArrayDecl ArrayDecl a int 100 100 For = i 0 < i m ++ i For = j 0 < j n ++ j >> cin ArrayRef ArrayRef a i j << << cout - - - - sum ArrayRef ArrayRef a 0 0 ArrayRef ArrayRef a 0 - n 1 ArrayRef ArrayRef a - m 1 0 ArrayRef ArrayRef a - m 1 - n 1 endl -- k End Return 0 End,0
848,848,,1
627,627,FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl m int Decl n int Decl ArrayDecl ArrayDecl a int 100 100 Decl i int Decl j int Decl sum int >> cin k While > k 0 Compound >> >> cin m n If && > m 1 > n 1 Compound = sum 0 = sum - - - - sum * * a * - + * - + a m 1 n 1 * - + * a n 1 * * - + a m 1 << << cout sum endl End If && == m 1 == n 1 Compound = sum 0 = sum * * a << << cout sum endl End If && == m 1 > n 1 Compound = sum 0 For = j 0 < j n ++ j Compound += sum * + * a j End << << cout sum endl End If && == n 1 > m 1 Compound = sum 0 << << cout sum endl End -- k End End,1
294,294,"FileAST FuncDef Decl FuncDecl main int Compound Decl n int Decl m int Decl p int Decl temp int Decl i int FuncCall freopen ExprList ""poj2085.txt"" ""r"" stdin FuncCall freopen ExprList ""poj2085ans.txt"" ""w"" stdout While && FuncCall scanf ExprList ""%d%d"" & n & m > n 0 Compound = temp / * p - p 1 2 For = i 1 <= i - n p ++ i FuncCall printf ExprList ""%d "" i FuncCall printf ExprList ""%d "" + - n temp m FuncCall printf ExprList ""\n"" End Return 0 End",0
532,532,"FileAST FuncDef Decl FuncDecl main int Compound Decl a int 10 Decl b int 10 Decl o int 10 Decl p int 10 Decl sum int Decl ArrayDecl ArrayDecl area int 111 111 Decl k int 10 Decl i int 0 FuncCall scanf ExprList ""%d"" & k For = i 0 < i k ++ i Compound = sum 0 FuncCall scanf ExprList ""%d%d"" & a & b For = o 0 < o a ++ o Compound For = p 0 < p b ++ p Compound FuncCall scanf ExprList ""%d"" & ArrayRef ArrayRef area o p End End For = p 0 < p b ++ p += sum + ArrayRef ArrayRef area 0 p ArrayRef ArrayRef area - a 1 p For = o 1 < o - a 1 ++ o += sum + ArrayRef ArrayRef area o 0 ArrayRef ArrayRef area o - b 1 FuncCall printf ExprList ""%d\n"" sum End Return 0 End",1
340,340,FileAST Decl ans long 0 Decl ArrayDecl a long 1234 FuncDef Decl FuncDecl main int Compound Decl n int While >> cin n Compound = ans 0 If == n 0 Break For DeclList Decl i int 1 <= i n ++ i Compound >> cin ArrayRef a i End << << cout ans endl End Return 0 End,0
696,696,"FileAST Typedef ll long Decl maxn int 123456 Decl ArrayDecl p int 8 Decl ArrayDecl ArrayDecl sx int 6 maxn Decl ArrayDecl ArrayDecl sy int 6 maxn Decl ArrayDecl ArrayDecl dp int 150 123 Decl ArrayDecl op_s int 123 Decl ArrayDecl op_t int 123 Decl ArrayDecl ArrayDecl id int 6 150 Decl FuncDecl init void Decl FuncDecl ParamList Decl ArrayDecl a int Cantor int Decl FuncDecl ParamList Decl ArrayDecl a int Decl ArrayDecl b int Decl ArrayDecl c int cal void Decl FuncDecl ParamList Decl ArrayDecl a int Decl ArrayDecl b int cal2 void FuncDef Decl FuncDecl main int Compound FuncCall init Decl n int Decl m int While ~ FuncCall scanf ExprList ""%d%d"" & n & m Compound Decl ArrayDecl a int 6 Decl ArrayDecl b int 6 For DeclList Decl i int 1 <= i 5 ++ i Compound FuncCall scanf ExprList ""%d"" & ArrayRef a i End FuncCall memset ExprList dp 0x3f sizeof dp Decl x int Decl s int Decl t int = x FuncCall cantor ExprList a = ArrayRef ArrayRef dp 0 x 0 Decl ans int ArrayRef ArrayRef dp m 1 If == ans 0x3f3f3f3f = ans - 1 FuncCall printf ExprList ""%d\n"" ans End Return 0 End",1
483,483,FileAST FuncDef Decl FuncDecl main int Compound Decl t int Decl n int Decl m int Decl i int Decl ArrayDecl ArrayDecl a int 100 100 Decl j int Decl k int Decl sum int >> cin t Decl PtrDecl ArrayDecl p int 100 For = i 0 < i t ++ i Compound = sum 0 >> >> cin n m For = j 0 < j n ++ j Compound For = k 0 < k m ++ k >> cin ArrayRef ArrayRef a j k End = p a If || || || == n 1 == m 1 == m 2 == n 2 Compound For = j 0 < j n ++ j Compound For = k 0 < k m ++ k = sum + sum * + * + p j k End End Compound For = k 0 < k m ++ k Compound = sum + + sum * + * p k * + * - + p n 1 k End For = j 1 < j - n 1 ++ j Compound = sum + + sum * + * + p j 0 * - + * + p j m 1 End End << << cout sum endl End Return 0 End,0
35,35,"FileAST FuncDef Decl FuncDecl main int Compound Decl a int Decl b long Decl ArrayDecl g long 30 = ArrayRef g 1 1 = ArrayRef g 2 2 Decl ArrayDecl num int 30 While != FuncCall scanf ExprList ""%d%I64d"" & a & b eof Compound FuncCall memset ExprList num 0 sizeof num For DeclList Decl i int 1 <= i a ++ i = ArrayRef num i i Decl A int a While -- a Compound Decl n int TernaryOp % b ArrayRef g + a 1 + / b ArrayRef g + a 1 1 / b ArrayRef g + a 1 If == ArrayRef num n 0 Break If == - a 1 a FuncCall printf ExprList ""%d"" ArrayRef num n FuncCall printf ExprList "" %d"" ArrayRef num n = b - b + * ArrayRef g + a 1 - n 1 1 End FuncCall printf ExprList ""\n"" End Return 0 End",0
379,379,FileAST Typedef ll long Decl maxn int 10000010 Decl mod int + 1e9 7 Decl ArrayDecl a int 1010 Decl ArrayDecl b int 1010 Decl ArrayDecl d int 1010 FuncDef Decl FuncDecl main int Compound Decl n int >> cin n For DeclList Decl i int 1 <= i n ++ i Compound >> cin ArrayRef b i End Decl x int Decl y int Return 0 End,0
256,256,"FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl a int 13 InitList 0 31 28 31 30 31 30 31 31 30 31 30 31 Decl year int Decl month int Decl day int Decl i int Decl num int 0 FuncCall scanf ExprList ""%d%d%d"" & year & month & day If == % year 4 0 Compound If && == % year 100 0 != % year 400 0 = ArrayRef a 2 28 If == % year 400 0 = ArrayRef a 2 29 = ArrayRef a 2 29 End = ArrayRef a 2 28 For = i 1 < i month ++ i = num + num ArrayRef a i = num + num day FuncCall printf ExprList ""%d"" num Return 0 End",0
756,756,,1
29,29,FileAST FuncDef Decl FuncDecl main int Compound Decl k int 0 Decl ArrayDecl ArrayDecl juzhen int 100 100 Decl m int 0 Decl n int 0 >> cin k While > k 0 Compound = m 0 = n 0 FuncCall memset ExprList juzhen 0 sizeof juzhen >> >> cin m n Decl i int 0 Decl j int 0 Decl sum int 0 For = i 0 <= i - n 1 ++ i Compound = sum + sum * + * juzhen i End << << cout sum endl -- k End Return 0 End,0
188,188,"FileAST FuncDef Decl FuncDecl main int Compound Decl y int Decl m int Decl d int Decl sum int 0 Decl i int 0 Decl ArrayDecl n int 12 = sum 0 FuncCall scanf ExprList ""%d%d%d"" & y & m & d If && == % y 4 0 != % y 100 0 Compound = ArrayRef n 0 31 = ArrayRef n 1 29 = ArrayRef n 2 31 = ArrayRef n 3 30 = ArrayRef n 4 31 = ArrayRef n 5 30 = ArrayRef n 6 31 = ArrayRef n 7 31 = ArrayRef n 8 30 = ArrayRef n 9 31 = ArrayRef n 10 30 = ArrayRef n 11 31 += sum d FuncCall printf ExprList ""%d\n"" sum End If && && == % y 4 0 == % y 100 0 != % y 400 0 Compound = ArrayRef n 0 31 = ArrayRef n 1 28 = ArrayRef n 2 31 = ArrayRef n 3 30 = ArrayRef n 4 31 = ArrayRef n 5 30 = ArrayRef n 6 31 = ArrayRef n 7 31 = ArrayRef n 8 30 = ArrayRef n 9 31 = ArrayRef n 10 30 = ArrayRef n 11 31 += sum d FuncCall printf ExprList ""%d\n"" sum End If && && == % y 4 0 == % y 100 0 == % y 400 0 Compound = ArrayRef n 0 31 = ArrayRef n 1 29 = ArrayRef n 2 31 = ArrayRef n 3 30 = ArrayRef n 4 31 = ArrayRef n 5 30 = ArrayRef n 6 31 = ArrayRef n 7 31 = ArrayRef n 8 30 = ArrayRef n 9 31 = ArrayRef n 10 30 = ArrayRef n 11 31 += sum d FuncCall printf ExprList ""%d\n"" sum End If != % y 4 0 Compound = ArrayRef n 0 31 = ArrayRef n 1 28 = ArrayRef n 2 31 = ArrayRef n 3 30 = ArrayRef n 4 31 = ArrayRef n 5 30 = ArrayRef n 6 31 = ArrayRef n 7 31 = ArrayRef n 8 30 = ArrayRef n 9 31 = ArrayRef n 10 30 = ArrayRef n 11 31 For = i 0 < i - m 1 ++ i Compound = sum + sum ArrayRef n i End = sum + sum d FuncCall printf ExprList ""%d\n"" sum End Return 0 End",0
664,664,"FileAST FuncDef Decl FuncDecl main int Compound Decl y int Decl m int Decl d int FuncCall scanf ExprList ""%d %d %d"" & y & m & d Decl ArrayDecl month int 12 InitList 0 31 28 31 30 31 30 31 31 30 31 30 Decl i int Decl ans int If || == % y 400 0 && % y 100 == % y 4 0 = ArrayRef month 2 29 = ans 0 For = i 1 < i m ++ i += ans ArrayRef month i += ans d FuncCall printf ExprList ""%d\n"" ans Return 0 End",1
54,54,FileAST FuncDef Decl FuncDecl main int Compound Decl t int Decl m int Decl n int Decl ArrayDecl ArrayDecl array int 100 100 Decl sum int Decl i int Decl j int Decl k int >> cin t For = i 0 < i t ++ i Compound = sum 0 >> >> cin m n For = j 0 < j m ++ j For = k 0 < k n ++ k >> cin ArrayRef ArrayRef array j k For = j 0 < j m ++ j = sum + + sum ArrayRef ArrayRef array j 0 ArrayRef ArrayRef array j - n 1 For = k 0 < k n ++ k = sum + + sum ArrayRef ArrayRef array 0 k ArrayRef ArrayRef array - m 1 k << << cout - - - - sum ArrayRef ArrayRef array 0 0 ArrayRef ArrayRef array 0 - n 1 ArrayRef ArrayRef array - m 1 0 ArrayRef ArrayRef array - m 1 - n 1 endl End FuncCall StructRef cin get Return 0 End,0
3,3,FileAST FuncDef Decl FuncDecl main int Compound Decl max int 100 Decl num int >> cin num While -- num Compound Decl m int Decl n int >> >> cin m n Decl ArrayDecl ArrayDecl a int max max Decl i int Decl j int Decl sum int 0 For = j 0 < j n ++ j Compound If == m 1 Compound += sum ArrayRef ArrayRef a 0 j End Compound += sum ArrayRef ArrayRef a 0 j += sum ArrayRef ArrayRef a - m 1 j End End << << cout sum endl End Return 0 End,0
380,380,FileAST FuncDef Decl FuncDecl main int Compound Decl t int Decl m int Decl n int Decl count int Decl ArrayDecl ArrayDecl a int 100 100 Decl PtrDecl ArrayDecl p int 100 a >> cin t For DeclList Decl temp int 0 < temp t ++ temp Compound = count 0 >> >> cin m n For DeclList Decl i int 0 < i m ++ i For DeclList Decl j int 0 < j n ++ j >> cin * + * + p i j For DeclList Decl i int 1 < i - m 1 ++ i Compound += count ArrayRef ArrayRef a i 0 += count ArrayRef ArrayRef a i - n 1 End For DeclList Decl j int 0 < j n ++ j Compound += count ArrayRef ArrayRef a 0 j += count ArrayRef ArrayRef a - m 1 j End << << cout count endl End Return 0 End,0
397,397,"FileAST FuncDef Decl FuncDecl main int Compound Decl i int Decl j int Decl k int Decl m int Decl n int Decl N int Decl w int Decl s int Decl ArrayDecl ArrayDecl a int 100 100 FuncCall scanf ExprList ""%d\n"" & n For = w 0 < w n ++ w Compound = s 0 For = i 0 < i 100 ++ i For = j 0 < j 100 ++ j = ArrayRef ArrayRef a i j 0 FuncCall scanf ExprList ""%d%d"" & m & n For = i 0 < i m ++ i For = j 0 < j n ++ j FuncCall scanf ExprList ""%d"" & ArrayRef ArrayRef a i j If && > n 1 > m 1 Compound For = i 0 < i n ++ i += s ArrayRef ArrayRef a 0 i For = i 0 < i n ++ i += s ArrayRef ArrayRef a - m 1 i For = i 1 < i - m 1 ++ i += s ArrayRef ArrayRef a i 0 For = i 1 < i - m 1 ++ i += s ArrayRef ArrayRef a i - n 1 End If && == n 1 > m 1 Compound = s + ArrayRef ArrayRef a 0 0 ArrayRef ArrayRef a - m 1 0 End If && > n 1 == m 1 = s + ArrayRef ArrayRef a 0 0 ArrayRef ArrayRef a 0 - n 1 If && == n 1 == m 1 = s ArrayRef ArrayRef a 0 0 FuncCall printf ExprList ""%d\n"" s End End",0
455,455,"FileAST FuncDef Decl FuncDecl ParamList Typename TypeDecl void mk void Compound Decl m int Decl n int Decl i int Decl j int Decl k int Decl s int 0 Decl ArrayDecl ArrayDecl a int 100 100 FuncCall scanf ExprList ""%d %d"" & m & n For = i 0 < i m ++ i For = j 0 < j n ++ j Compound FuncCall scanf ExprList ""%d"" & ArrayRef ArrayRef a i j End = s 0 FuncCall printf ExprList ""%d\n"" s End Decl FuncDecl main int",0
30,30,FileAST FuncDef Decl FuncDecl main int Compound Decl n int >> cin n Decl ArrayDecl ArrayDecl a int 100 100 While -- n Compound Decl x int Decl y int Decl sum int 0 >> >> cin x y For DeclList Decl j int 1 < j - y 1 ++ j Compound += sum + ArrayRef ArrayRef a 0 j ArrayRef ArrayRef a - x 1 j End << << cout sum endl End Return 0 End,0
929,929,,1
534,534,FileAST Typedef LL long FuncDef Decl FuncDecl main int Compound Decl n int Decl m int While >> >> cin n m Compound If && == m 0 == n 0 Break Decl ArrayDecl a int 101 For DeclList Decl i int 0 < i n ++ i Compound >> cin ArrayRef a i End = ArrayRef a n m FuncCall sort ExprList a + + a n 1 << cout endl End Return 0 End,1
285,285,"FileAST Decl MAXN int 26 Decl n int Decl h int Decl ArrayDecl t int maxn Decl ArrayDecl d int maxn Decl ArrayDecl f int maxn Decl ArrayDecl F int maxn Decl ArrayDecl ans int maxn Decl ArrayDecl ANS int maxn FuncDef Decl FuncDecl main int Compound Decl max int Decl sum int Decl p int Decl k int Decl i int Decl j int Decl time int While ExprList FuncCall scanf ExprList ""%d"" & n n Compound FuncCall scanf ExprList ""%d"" & h *= h 12 For = i 0 < i n ++ i FuncCall scanf ExprList ""%d"" & ArrayRef d i FuncCall memset ExprList ans 0 sizeof ans FuncCall printf ExprList ""%d\n"" * ArrayRef ans - n 1 5 FuncCall printf ExprList ""Number of fish expected: %d\n\n"" max End End",0
858,858,,1
842,842,,1
880,880,,1
928,928,,1
818,818,,1
440,440,"FileAST Decl MAXN int 100010 Decl n int Decl c int Decl f int Decl ArrayDecl p Struct Decl id int Decl x int Decl y int maxn Decl ArrayDecl q Struct Decl id int Decl x int Decl y int maxn Decl FuncDecl ParamList Decl a calve Decl b calve cmpx int Decl FuncDecl ParamList Decl a calve Decl b calve cmpy int Decl FuncDecl ParamList Decl m int check int FuncDef Decl FuncDecl main int Compound FuncCall scanf ExprList ""%d%d%d"" & n & c & f For DeclList Decl i int 0 < i c ++ i FuncCall scanf ExprList ""%d%d"" & StructRef ArrayRef p i x & StructRef ArrayRef p i y FuncCall sort ExprList p + p c cmpx FuncCall sort ExprList q + q c cmpy Decl sum int 0 If > sum f FuncCall printf ExprList ""-1\n"" Compound Decl l int 0 Decl r int c Decl m int While < l r Compound = m >> + + l r 1 1 If == FuncCall check ExprList m 1 = r - m 1 If == FuncCall check ExprList m 2 = l + m 1 = l m End FuncCall printf ExprList ""%d\n"" StructRef ArrayRef p l x End Return 0 End",0
593,593,FileAST FuncDef Decl FuncDecl main int Compound Decl idx int 100 Decl i int 100 Decl j int 100 Decl lines int 100 Decl fun_name int 100 Decl None int 100 Decl N int 100 Decl ArrayDecl x int 101 Decl ArrayDecl y int 101 Decl ArrayDecl ny int 101 Decl ArrayDecl ArrayDecl a int 101 101 For = i 0 < i n ++ i Compound For = j 0 < j n ++ j Compound = ArrayRef y i + ArrayRef y i * ArrayRef ArrayRef a i j ArrayRef x j End End Return 0 End,1
1031,1031,,1
739,739,,1
938,938,,1
486,486,"FileAST Decl ArrayDecl tree Struct Decl now int Decl next int Decl val int 20005 Decl ArrayDecl ArrayDecl dp int 15 10005 Decl ArrayDecl head int 10005 Decl n int Decl s int Decl k int Decl len int Decl FuncDecl ParamList Decl x int Decl y int Decl w int addedge void Decl FuncDecl ParamList Decl root int Decl fa int dfs void FuncDef Decl FuncDecl main int Compound Decl i int Decl x int Decl y int Decl w int While ~ FuncCall scanf ExprList ""%d%d%d"" & n & s & k Compound = len 0 FuncCall memset ExprList head - 1 sizeof head FuncCall memset ExprList dp 0 sizeof dp For = i 1 < i n ++ i Compound FuncCall scanf ExprList ""%d%d%d"" & x & y & w FuncCall addedge ExprList x y w FuncCall addedge ExprList y x w End FuncCall dfs ExprList s 0 FuncCall printf ExprList ""%d\n"" ArrayRef ArrayRef dp s k End Return 0 End",0
124,124,FileAST FuncDef Decl FuncDecl main int Compound Decl n int Decl s int Decl ArrayDecl a int 101 While && >> cin n n Compound = s 0 For DeclList Decl i int 0 < i n ++ i >> cin ArrayRef a i FuncCall sort ExprList a + a n << << cout / s - n 2 endl End Return 0 End,0
1050,1050,,1
564,564,FileAST FuncDef Decl FuncDecl main int Compound Decl m int Decl n int Decl t int >> cin t While -- t Compound Decl ArrayDecl ArrayDecl a int 100 100 Decl sum int 0 >> >> cin m n For DeclList Decl i int 0 < i m ++ i Compound If > n 1 += sum + * * + a i * - + * + a i n 1 += sum * * + a i End << << cout sum endl End Return 0 End,1
252,252,"FileAST FuncDef Decl FuncDecl main int Compound Decl x int Decl y int Decl ArrayDecl a int 40 InitList 0 Decl ArrayDecl b int 40 InitList 0 Decl x1 int Decl y1 int Decl i int Decl j int FuncCall scanf ExprList ""%d%d"" & x & y If == x y Compound FuncCall printf ExprList ""%d\n"" x Return 0 End If || == x 1 == y 1 Compound FuncCall printf ExprList ""1\n"" Return 0 End = x1 FuncCall sqrt ExprList x = y1 FuncCall sqrt ExprList y = ArrayRef a 0 x = ArrayRef b 0 y For = i 1 <= i y1 ++ i Compound = ArrayRef b i / ArrayRef b - i 1 2 End End",0
633,633,"FileAST Decl MAXN int 10005 Decl ArrayDecl f int maxn Decl ArrayDecl c int 505 Decl ArrayDecl w int 505 FuncDef Decl FuncDecl ParamList Decl a int Decl b int min int Compound Return TernaryOp < a b a b End FuncDef Decl FuncDecl main int Compound Decl t int Decl E int Decl F int Decl n int FuncCall scanf ExprList ""%d"" & t While -- t Compound FuncCall scanf ExprList ""%d%d"" & e & f FuncCall scanf ExprList ""%d"" & n For DeclList Decl i int 0 < i n ++ i FuncCall scanf ExprList ""%d%d"" & ArrayRef w i & ArrayRef c i = ArrayRef f e 0 If == ArrayRef f f 1e9 FuncCall printf ExprList ""This is impossible.\n"" FuncCall printf ExprList ""The minimum amount of money in the piggy-bank is %d.\n"" ArrayRef f f End End",1
461,461,FileAST Typedef ll long Decl N int 1000010 Decl mod int + 1e9 7 Decl tot int 0 Decl ArrayDecl check int n Decl ArrayDecl mu int n Decl ArrayDecl fib int n Decl ArrayDecl prime int n Decl ArrayDecl inv int n Decl ArrayDecl g int n Decl ArrayDecl f int n FuncDef Decl FuncDecl ParamList Decl a ll Decl b ll q_mod ll Compound Decl res ll 1 While b Compound If & b 1 = res % * res a mod >>= b 1 = a % * a a mod End Return res End FuncDef Decl FuncDecl mobius void Compound = ArrayRef mu 1 1 Decl n int 1000005 = ArrayRef fib 0 0 = ArrayRef fib 1 1 For DeclList Decl i int 2 <= i n ++ i Compound = ArrayRef f i % * * 1LL ArrayRef f i ArrayRef f - i 1 mod = ArrayRef g i % * * 1LL ArrayRef g i ArrayRef g - i 1 mod End End Decl t int Decl n int Decl m int Decl FuncDecl solve int Decl FuncDecl main int,0
69,69,FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl m int Decl n int Decl i int Decl j int Decl ArrayDecl ArrayDecl jz int 100 100 Decl sum int 0 >> cin k While >> >> cin m n Compound For = i 0 < i m ++ i Compound For = j 0 < j n ++ j >> cin ArrayRef ArrayRef jz i j End If && == m 1 == n 1 = sum ArrayRef ArrayRef jz 0 0 If == m 1 Compound End If == m 1 Compound End Compound End << << cout sum endl = sum 0 End Return 0 End,0
202,202,"FileAST FuncDef Decl FuncDecl main int Compound Decl k int FuncCall scanf ExprList ""%d"" & k Decl s1 int 0 Decl s2 int 0 Decl s3 int 0 Decl s4 int 0 Decl s int 0 Decl r int 0 Decl c int 0 Decl ArrayDecl ArrayDecl jz int 100 100 Decl m int Decl n int Decl i int 1 While <= i k Compound FuncCall scanf ExprList ""%d %d"" & m & n For DeclList Decl jm int 0 < jm m ++ jm Compound For DeclList Decl jn int 0 < jn n ++ jn Compound FuncCall scanf ExprList ""%d"" & ArrayRef ArrayRef jz jm jn End End = r 0 = c 0 = r - m 1 = c 0 = r 0 = c 0 = r 0 = c - n 1 = s - - - - + + + s1 s2 s3 s4 ArrayRef ArrayRef jz 0 0 ArrayRef ArrayRef jz 0 - n 1 ArrayRef ArrayRef jz - m 1 0 ArrayRef ArrayRef jz - m 1 - n 1 FuncCall printf ExprList ""%d"" s = s1 0 = s2 0 = s3 0 = s4 0 = s 0 If != i k Compound FuncCall printf ExprList ""\n"" End ++ i End Return 0 End",0
1049,1049,,1
821,821,,1
25,25,"FileAST Decl MAXN int 100010 Decl n int Decl c int Decl f int Decl ArrayDecl p Struct Decl id int Decl x int Decl y int maxn Decl ArrayDecl q Struct Decl id int Decl x int Decl y int maxn Decl FuncDecl ParamList Decl a calve Decl b calve cmpx int Decl FuncDecl ParamList Decl a calve Decl b calve cmpy int Decl FuncDecl ParamList Decl m int check int FuncDef Decl FuncDecl main int Compound FuncCall scanf ExprList ""%d%d%d"" & n & c & f FuncCall sort ExprList p + p c cmpx For DeclList Decl i int 0 < i c ++ i Compound = StructRef ArrayRef p i id = StructRef ArrayRef q i id i = StructRef ArrayRef q i x StructRef ArrayRef p i x = StructRef ArrayRef q i y StructRef ArrayRef p i y End FuncCall sort ExprList q + q c cmpy Decl sum int 0 If > sum f FuncCall printf ExprList ""-1\n"" Compound Decl l int 0 Decl r int c Decl m int While < l r Compound = m >> + + l r 1 1 If == FuncCall check ExprList m 1 = r - m 1 If == FuncCall check ExprList m 2 = l + m 1 = l m End FuncCall printf ExprList ""%d\n"" StructRef ArrayRef p l x End Return 0 End",0
790,790,,1
781,781,,1
312,312,"FileAST Decl ArrayDecl a int 20 Decl n int Decl ArrayDecl v int 6 Decl size int Decl FuncDecl ParamList Decl i int Decl num int dfs void FuncDef Decl FuncDecl main int Compound Decl cas int 0 While ExprList ~ FuncCall scanf ExprList ""%d"" & n n Compound = size 0 If ++ cas FuncCall puts ExprList """" For DeclList Decl i int 0 < i n ++ i FuncCall scanf ExprList ""%d"" & ArrayRef a i FuncCall dfs ExprList 0 0 End Return 0 End",0
337,337,"FileAST Decl MAXN int 105 Decl n int Decl ArrayDecl temp int maxn Decl ArrayDecl ArrayDecl a int maxn maxn FuncDef Decl FuncDecl ParamList Decl PtrDecl arr int arrayMax int Compound Decl max int 0 Decl dp int 0 For DeclList Decl i int 0 < i n ++ i If < dp 0 = dp ArrayRef arr i Compound += dp ArrayRef arr i = max TernaryOp > dp max dp max End Return max End FuncDef Decl FuncDecl main int Compound FuncCall scanf ExprList ""%d"" & n For DeclList Decl i int 0 < i n ++ i For DeclList Decl j int 0 < j n ++ j FuncCall scanf ExprList ""%d"" & ArrayRef ArrayRef a i j Decl maxAll int 0 Decl maxOne int 0 FuncCall printf ExprList ""%d\n"" maxall End",0
688,688,"FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl fibo int 45 Decl i int Decl n int = ArrayRef fibo 0 2 = ArrayRef fibo 1 3 For = i 2 < i 45 ++ i = ArrayRef fibo i + ArrayRef fibo - i 1 ArrayRef fibo - i 2 While && != FuncCall scanf ExprList ""%d"" & n eof n Compound If == i 45 FuncCall printf ExprList ""First win\n"" FuncCall printf ExprList ""Second win\n"" End Return 0 End",1
896,896,,1
326,326,FileAST FuncDef Decl FuncDecl main int Compound Decl m int Decl n int Decl i int 1 Decl j int Decl ArrayDecl ArrayDecl a int 101 101 Decl s int Decl k int Decl sum1 int Decl sum2 int Decl sum3 int Decl sum4 int Decl sum int >> cin s While <= i s Compound = sum1 0 = sum2 0 = sum3 0 = sum4 0 >> cin m >> cin n For = j 0 < j m ++ j += sum3 ArrayRef ArrayRef a j 0 = sum + + + sum1 sum2 sum3 sum4 << << cout - - - - sum ArrayRef ArrayRef a 0 0 ArrayRef ArrayRef a 0 - n 1 ArrayRef ArrayRef a - m 1 0 ArrayRef ArrayRef a - m 1 - n 1 endl ++ i End Return 0 End,0
635,635,"FileAST Decl ArrayDecl days int 13 InitList 0 31 28 31 30 31 30 31 31 30 31 30 31 FuncDef Decl FuncDecl ParamList Decl year int isleapyear int Compound Return || && == % year 4 0 != % year 100 0 == % year 400 0 End FuncDef Decl FuncDecl main int Compound Decl year int Decl month int Decl day int Decl z int 1 While <= z 5 Compound FuncCall scanf ExprList ""%d %d %d"" & year & month & day Decl n int 0 Decl i int For = i 1 < i month ++ i Compound = n + n ArrayRef days i End = n + n day If && > month 2 FuncCall isleapyear ExprList year ++ n FuncCall printf ExprList ""%d\n"" n ++ z End End",1
471,471,"FileAST FuncDef Decl FuncDecl main int Compound Decl n int Decl m int While >> >> cin n m Compound Decl i int Decl j int << cout ""+"" For = i 1 <= i n ++ i << cout ""-"" << << cout ""+"" endl << cout ""+"" For = i 1 <= i n ++ i << cout ""-"" << << cout ""+"" endl << cout endl End Return 0 End",0
394,394,"FileAST Decl FuncDecl ParamList Decl a int Decl b int gcd int FuncDef Decl FuncDecl main int Compound Decl T int Decl n int Decl b int Decl c int FuncCall scanf ExprList ""%d"" & t While -- t Compound FuncCall scanf ExprList ""%d%d"" & n & b For DeclList Decl i int 1 < i n ++ i Compound FuncCall scanf ExprList ""%d"" & c = b * / b FuncCall gcd ExprList b c c End FuncCall printf ExprList ""%d\n"" b End Return 0 End",0
909,909,,1
355,355,"FileAST FuncDef Decl FuncDecl main int Compound Decl i int 0 Decl j int 0 Decl k int 0 Decl ArrayDecl ArrayDecl shuzu int 100 100 Decl hang int 0 Decl lie int 0 Decl zu int 0 Decl sum int 0 FuncCall scanf ExprList ""%d"" & zu For = i 0 < i zu ++ i Compound FuncCall scanf ExprList ""%d%d"" & hang & lie = sum 0 For = j 0 < j hang ++ j Compound For = k 0 < k lie ++ k Compound FuncCall scanf ExprList ""%d"" & ArrayRef ArrayRef shuzu j k End End For = k 0 < k lie ++ k Compound = sum + sum ArrayRef ArrayRef shuzu 0 k End If > hang 1 Compound For = k 0 < k lie ++ k Compound = sum + sum ArrayRef ArrayRef shuzu - hang 1 k End End If > hang 2 Compound For = k 1 < k - hang 1 ++ k Compound = sum + sum ArrayRef ArrayRef shuzu k 0 End End If && > lie 1 > hang 2 Compound For = k 1 < k - hang 1 ++ k Compound = sum + sum ArrayRef ArrayRef shuzu k - lie 1 End End FuncCall printf ExprList ""%d\n"" sum End Return 0 End",0
912,912,,1
95,95,FileAST Typedef ll long Decl ArrayDecl val ll 123 Decl ArrayDecl sum ll 123 FuncDef Decl FuncDecl ParamList Decl a ll Decl b ll Decl c ll solve ll Compound Return - - + + a b c FuncCall max ExprList a FuncCall max ExprList b c FuncCall min ExprList a FuncCall min ExprList b c End FuncDef Decl FuncDecl main int Compound Decl n int While >> cin n Compound For DeclList Decl i int 1 <= i n ++ i >> cin ArrayRef val i = ArrayRef sum 0 0 Decl ans ll 0 << << cout ans endl End Return 0 End,0
420,420,"FileAST FuncDef Decl FuncDecl main int Compound Decl n int Decl ArrayDecl ArrayDecl d int 20 20 Decl t int Decl i int Decl j int Decl k int Decl stx int Decl sty int Decl x int Decl y int FuncCall scanf ExprList ""%d"" & t While -- t Compound FuncCall scanf ExprList ""%d"" & n = stx 0 = sty - / + n 1 2 1 For = i 0 < i n ++ i Compound For = j 0 < j n ++ j Compound FuncCall printf ExprList ""%4d"" ArrayRef ArrayRef d i j End FuncCall printf ExprList ""\n"" End End Return 0 End",0
411,411,FileAST FuncDef Decl FuncDecl main int Compound Decl t int 100 Decl idx int 100 Decl T int 100 Decl i int 100 Decl lines int 100 Decl fun_name int 100 Decl None int 100 Decl N int 100 Decl ArrayDecl ArrayDecl u int 101 101 Decl ArrayDecl ArrayDecl nu int 101 101 For = t 1 <= t - t 1 ++ t Compound For = i 1 <= i - n 1 ++ i Compound = ArrayRef ArrayRef u t i * 0.333 + + ArrayRef ArrayRef u - t 1 - i 1 ArrayRef ArrayRef u - t 1 i ArrayRef ArrayRef u - t 1 + i 1 End End Return 0 End,0
989,989,,1
268,268,"FileAST Decl ArrayDecl pos int 10010 FuncDef Decl FuncDecl main int Compound Decl n int While ~ FuncCall scanf ExprList ""%d"" & n Compound For DeclList Decl i int 0 < i n ++ i FuncCall scanf ExprList ""%d"" & ArrayRef pos i FuncCall sort ExprList pos + pos n Decl ret long 0 FuncCall printf ExprList ""%lld\n"" << ret 1 End Return 0 End",0
559,559,"FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl m int Decl n int Decl i int Decl a int Decl b int Decl c int Decl ArrayDecl ArrayDecl jz int 100 100 FuncCall scanf ExprList ""%d"" & k For = i 1 <= i k ++ i Compound FuncCall scanf ExprList ""%d %d"" & m & n For = a 0 < a m ++ a Compound For = b 0 < b n ++ b Compound FuncCall scanf ExprList ""%d"" & ArrayRef ArrayRef jz a b End End = c 0 For = a 0 < a m ++ a Compound For = b 0 < b n ++ b Compound If || == a 0 == b 0 Compound = c + c ArrayRef ArrayRef jz a b End If || == a - m 1 == b - n 1 Compound = c + c ArrayRef ArrayRef jz a b End End End FuncCall printf ExprList ""%d\n"" c End Return 0 End",1
518,518,FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl m int Decl n int Decl i int Decl j int Decl p int 0 Decl ArrayDecl ArrayDecl num int 100 100 Decl sum int 0 >> cin k While < p k Compound >> >> cin m n For = i 0 < i m ++ i For = j 0 < j n ++ j Compound >> cin ArrayRef ArrayRef num i j End << << cout sum endl = sum 0 ++ p End Return 0 End,0
777,777,,1
229,229,"FileAST Decl M int + 100 10 Decl N int + 100 10 Decl ArrayDecl ArrayDecl mat int n m FuncDef Decl FuncDecl ParamList Typename TypeDecl void main int Compound Decl cases int Decl i int Decl j int Decl ans int Decl m int Decl n int FuncCall scanf ExprList ""%d"" & cases While -- cases Compound = ans 0 FuncCall scanf ExprList ""%d%d"" & m & n If || == m 0 == n 0 Compound FuncCall printf ExprList ""%d\n"" 0 Continue End If == m 1 Compound FuncCall printf ExprList ""%d\n"" ans Continue End If == n 1 Compound FuncCall printf ExprList ""%d\n"" ans Continue End For = i 0 < i m ++ i Compound += ans ArrayRef ArrayRef mat i 0 += ans ArrayRef ArrayRef mat i - n 1 End -= ans + + + ArrayRef ArrayRef mat 0 0 ArrayRef ArrayRef mat 0 - n 1 ArrayRef ArrayRef mat - m 1 0 ArrayRef ArrayRef mat - m 1 - n 1 FuncCall printf ExprList ""%d\n"" ans End Return 0 End",0
697,697,"FileAST FuncDef Decl FuncDecl main int Compound Decl y int Decl m int Decl d int Decl t int 0 Decl i int FuncCall scanf ExprList ""%d%d%d"" & y & m & d If == m 1 Compound += t d End If == m 2 Compound += t + 31 d End If || && == % y 4 0 != % y 100 0 == % y 400 0 Compound = t + t d End Compound For = i 1 < i m ++ i Compound If || || || || || == i 1 == i 3 == i 5 == i 7 == i 8 == i 10 Compound = t + t 31 End If || || || == i 4 == i 6 == i 9 == i 11 Compound = t + t 30 End If == i 2 Compound += t 28 End End = t + t d End FuncCall printf ExprList ""%d"" t Return 0 End",1
323,323,"FileAST Decl ArrayDecl s char 1005 Decl ArrayDecl a int 1005 Decl PtrDecl temp char Decl FuncDecl ParamList Decl PtrDecl a void Decl PtrDecl b void cmp int FuncDef Decl FuncDecl main int Compound Decl c int While FuncCall gets ExprList s Compound = ArrayRef a 0 FuncCall atoi ExprList FuncCall strtok ExprList s ""5"" = c 1 While = temp FuncCall strtok ExprList null ""5"" Compound = ArrayRef a ++ c FuncCall atoi ExprList temp End FuncCall qsort ExprList a c sizeof ArrayRef a 0 cmp FuncCall printf ExprList ""%d"" ArrayRef a 0 For DeclList Decl i int 1 < i c ++ i Compound FuncCall printf ExprList "" %d"" ArrayRef a i End FuncCall printf ExprList ""\n"" End Return 0 End",0
1032,1032,,1
760,760,,1
636,636,FileAST FuncDef Decl FuncDecl main int Compound Decl i int Decl j int Decl n int Decl m int Decl k int Decl sum int Decl ArrayDecl ArrayDecl a int 100 100 >> cin k While > k 0 Compound = sum 0 -- k >> >> cin m n For = j 0 < j n ++ j Compound If == m 1 += sum * + * a j += sum + * + * a j * + * - + a m 1 j End << << cout sum endl End Return 0 End,1
603,603,"FileAST Decl ArrayDecl days int 13 InitList 0 31 28 31 30 31 30 31 31 30 31 30 31 FuncDef Decl FuncDecl ParamList Decl year int isleapyear int Compound Return || && == % year 4 0 != % year 100 0 == % year 400 0 End FuncDef Decl FuncDecl main int Compound Decl year int Decl month int Decl day int FuncCall scanf ExprList ""%d %d %d"" & year & month & day If && && FuncCall isleapyear ExprList year == month 2 || < day 1 > day 29 Compound FuncCall printf ExprList ""Illegal input.\n"" Return - 1 End If && ! FuncCall isleapyear ExprList year || < day 1 > day ArrayRef days month Compound FuncCall printf ExprList ""Illegal input.\n"" Return - 1 End Decl n int 0 Decl i int For = i 1 < i month ++ i Compound += n ArrayRef days i End += n day If && FuncCall isleapyear ExprList year > month 2 ++ n FuncCall printf ExprList ""%d"" n End",1
513,513,FileAST Typedef ll long Decl inf int 0x3f3f3f3f Decl maxn int + 4e5 10 Decl maxv int + 1e3 10 Decl eps double 1e-9 Decl mod ll 998244353 Decl g ll 3 FuncDef Decl FuncDecl ParamList Decl a ll Decl n ll Pow ll Compound Decl ans ll 1 While n Compound If & n 1 = ans % * ans a mod >>= n 1 = a % * a a mod End Return ans End Decl FuncDecl ParamList Decl ArrayDecl y ll Decl len int rader void FuncDef Decl FuncDecl ParamList Decl ArrayDecl y ll Decl len int Decl on int ntt void Compound FuncCall rader ExprList y len If == on - 1 Compound Decl t ll FuncCall pow ExprList len - mod 2 For DeclList Decl i int 0 < i len ++ i = ArrayRef y i % * ArrayRef y i t mod End End Decl ArrayDecl inv ll maxn Decl ArrayDecl fac ll maxn Decl ArrayDecl f ll maxn Decl inv2 ll Decl ArrayDecl a ll maxn Decl ArrayDecl b ll maxn Decl ArrayDecl A ll maxn Decl n int Decl FuncDecl init void Decl FuncDecl solve void Decl FuncDecl Conv void Decl FuncDecl gao void Decl FuncDecl main int,0
930,930,,1
622,622,FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl m int Decl n int >> cin k While > k 0 Compound >> >> cin m n Decl ArrayDecl ArrayDecl num int 110 110 InitList 0 Decl PtrDecl ArrayDecl p int 110 Decl sum int 0 Decl i int Decl j int = p num = p num For = j 0 < j n ++ j = sum + sum * + * p j << << cout sum endl -- k End Return 0 End,1
1045,1045,,1
387,387,"FileAST FuncDef Decl FuncDecl main int Compound Decl i int Decl n int Decl m int Decl k int Decl j int Decl p int Decl ArrayDecl ArrayDecl a int 1000 1000 Decl sum int FuncCall scanf ExprList ""%d"" & k For = i 0 < i k ++ i Compound = sum 0 FuncCall scanf ExprList ""%d%d"" & m & n For = j 1 <= j m ++ j Compound For = p 1 <= p n ++ p Compound FuncCall scanf ExprList ""%d"" & ArrayRef ArrayRef a j p End End For = p 1 <= p n ++ p Compound += sum ArrayRef ArrayRef a 1 p End For = j 2 <= j m ++ j Compound += sum ArrayRef ArrayRef a j n End For = p - n 1 >= p 1 -- p Compound += sum ArrayRef ArrayRef a m p End For = j - m 1 >= j 2 -- j Compound += sum ArrayRef ArrayRef a j 1 End FuncCall printf ExprList ""%d\n"" sum End Return 0 End",0
238,238,FileAST Typedef LL long Decl N int 65 Decl mod int 1000000007 Decl ArrayDecl ArrayDecl ArrayDecl dp int n n n Decl ArrayDecl p2 int * n n Decl ArrayDecl ArrayDecl pp int n n Decl ArrayDecl ArrayDecl C int n n FuncDef Decl FuncDecl init void Compound For DeclList Decl i int 0 < i n ++ i Compound = ArrayRef ArrayRef c i i = ArrayRef ArrayRef c i 0 1 For DeclList Decl j int 1 < j i ++ j Compound = ArrayRef ArrayRef c i j % + ArrayRef ArrayRef c - i 1 - j 1 ArrayRef ArrayRef c - i 1 j mod End End = ArrayRef p2 0 1 = ArrayRef ArrayRef ArrayRef dp 1 1 1 1 End Decl FuncDecl main int,0
444,444,"FileAST Decl ArrayDecl ArrayDecl SG int 60 60 Decl ArrayDecl ArrayDecl map char 60 60 Decl ArrayDecl vis int 600 Decl FuncDecl ParamList Decl x int Decl y int GetSG int FuncDef Decl FuncDecl main int Compound Decl n int Decl m int Decl ans int Decl i int Decl j int Decl a int Decl k int FuncCall freopen ExprList ""hdoj2873.txt"" ""r"" stdin FuncCall freopen ExprList ""hdoj2873ans.txt"" ""w"" stdout FuncCall memset ExprList sg 0 sizeof sg For = i 1 <= i 50 ++ i For = j 1 <= j 50 ++ j FuncCall getsg ExprList i j While && != FuncCall scanf ExprList ""%d%d"" & n & m eof n Compound = ans 0 If ans FuncCall printf ExprList ""John\n"" FuncCall printf ExprList ""Jack\n"" End End",0
526,526,FileAST FuncDef Decl FuncDecl ParamList Decl n int Decl m int bianyuan int Compound Decl ArrayDecl ArrayDecl juzhen int 100 100 Decl i int Decl j int Decl result int = result 0 For = i 1 < i - n 1 ++ i Compound += result ArrayRef ArrayRef juzhen i - m 1 End Return result End Decl FuncDecl main int,0
771,771,,1
447,447,"FileAST FuncDef Decl FuncDecl ParamList Decl m int Decl n int juzhen void Compound Decl ArrayDecl ArrayDecl a int 100 100 Decl i int Decl j int Decl sum int 0 For = j 0 < j n ++ j Compound = sum + + sum * + * a j * + * - + a m 1 j End If == m 1 Compound = sum 0 End If == n 1 Compound = sum 0 End FuncCall printf ExprList ""%d\n"" sum End Decl FuncDecl main int",0
870,870,,1
681,681,"FileAST Decl ArrayDecl a int 999999 FuncDef Decl FuncDecl main int Compound Decl n int While ~ FuncCall scanf ExprList ""%d"" & n Compound For DeclList Decl i int 0 < i n ++ i Compound FuncCall scanf ExprList ""%d"" & ArrayRef a i End FuncCall sort ExprList a + a n FuncCall printf ExprList ""%d\n"" ArrayRef a / + n 1 2 End Return 0 End",1
216,216,"FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl i int Decl j int Decl h int Decl m int Decl n int Decl sum int 0 Decl minus int 0 Decl ArrayDecl ArrayDecl a int 100 100 Decl ArrayDecl b int 100 FuncCall scanf ExprList ""%d"" & k For = h 0 < h k ++ h Compound FuncCall scanf ExprList ""%d%d"" & m & n For = i 0 < i m ++ i Compound For = j 0 < j n ++ j Compound FuncCall scanf ExprList ""%d"" & ArrayRef ArrayRef a i j += sum ArrayRef ArrayRef a i j End End For = i 1 < i - m 1 ++ i Compound For = j 1 < j - n 1 ++ j Compound += minus ArrayRef ArrayRef a i j End End = ArrayRef b h - sum minus = sum 0 = minus 0 End Return 0 End",0
437,437,FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl m int Decl n int Decl i int Decl j int Decl sum int >> cin k While -- k Compound = sum 0 >> >> cin m n Decl ArrayDecl ArrayDecl a int n m For = i 0 < i m ++ i For = j 0 < j n ++ j >> cin * + * + a i j If == m 1 Compound << << cout sum endl Continue End If == n 1 Compound << << cout sum endl Continue End << << cout sum endl End Return 0 End,0
34,34,"FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl m int Decl n int Decl ArrayDecl ArrayDecl sz int 100 100 Decl i int Decl j int Decl l int Decl sum int 0 FuncCall scanf ExprList ""%d"" & k For = l 0 < l k ++ l Compound FuncCall scanf ExprList ""%d%d"" & m & n For = i 0 < i m ++ i Compound For = j 0 < j n ++ j Compound FuncCall scanf ExprList ""%d"" & ArrayRef ArrayRef sz i j End End For = j 0 < j n ++ j Compound = sum + sum ArrayRef ArrayRef sz 0 j End For = i 1 < i m ++ i Compound = sum + sum ArrayRef ArrayRef sz i - n 1 End For = j 0 < j - n 1 ++ j Compound = sum + sum ArrayRef ArrayRef sz - m 1 j End For = i 1 < i - m 1 ++ i Compound = sum + sum ArrayRef ArrayRef sz i 0 End FuncCall printf ExprList ""%d\n"" sum = sum 0 End Return 0 End",0
561,561,FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl m int Decl n int Decl ArrayDecl ArrayDecl a int 110 110 Decl sum int 0 >> cin k For DeclList Decl e int 1 <= e k ++ e Compound >> >> cin m n For DeclList Decl i int 1 <= i m ++ i For DeclList Decl j int 1 <= j n ++ j >> cin ArrayRef ArrayRef a i j If && == m 1 == n 1 << << cout ArrayRef ArrayRef a 1 1 endl Compound For DeclList Decl i int 1 <= i n ++ i = sum + sum ArrayRef ArrayRef a 1 i For DeclList Decl i int 1 <= i m ++ i = sum + sum ArrayRef ArrayRef a i 1 For DeclList Decl i int 1 <= i n ++ i = sum + sum ArrayRef ArrayRef a m i For DeclList Decl i int 1 <= i m ++ i = sum + sum ArrayRef ArrayRef a i n = sum - - - - sum ArrayRef ArrayRef a 1 1 ArrayRef ArrayRef a 1 n ArrayRef ArrayRef a m 1 ArrayRef ArrayRef a m n << << cout sum endl = sum 0 End End Return 0 End,1
53,53,FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl ArrayDecl ArrayDecl a int 100 100 Decl i int Decl j int Decl m int Decl n int Decl sum int 0 >> cin k For DeclList Decl l int 0 < l k ++ l Compound >> >> cin m n For = i 0 < i m ++ i For = j 0 < j n ++ j >> cin ArrayRef ArrayRef a i j For = j 0 < j n ++ j Compound = sum + + sum ArrayRef ArrayRef a 0 j ArrayRef ArrayRef a - m 1 j If == - m 1 0 = sum - sum ArrayRef ArrayRef a - m 1 j End For = i 1 < i - m 1 ++ i Compound = sum + + sum ArrayRef ArrayRef a i 0 ArrayRef ArrayRef a i - n 1 If == - n 1 0 = sum - sum ArrayRef ArrayRef a i - n 1 End << << cout sum endl = sum 0 End Return 0 End,0
846,846,,1
813,813,,1
578,578,FileAST FuncDef Decl FuncDecl main int Compound Decl n int 0 >> cin n Decl ArrayDecl result int 100 For DeclList Decl i int 0 < i n ++ i Compound << cout ArrayRef result i If < i - n 1 << cout endl End Return 0 End,1
587,587,"FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl ArrayDecl a int 200 200 Decl t int Decl n int Decl m int Decl i int Decl j int Decl s int Decl PtrDecl ArrayDecl p int 200 FuncCall scanf ExprList ""%d"" & t While -- t Compound FuncCall scanf ExprList ""%d%d"" & n & m = p a = s 0 If > n 1 For = i 1 < i - n 1 ++ i = s + s * * + p i If > m 1 FuncCall printf ExprList ""%d\n"" s End End",1
753,753,,1
470,470,"FileAST FuncDef Decl FuncDecl main int Compound Decl a int Decl b int Decl c int Decl d int 0 Decl ArrayDecl x int 13 InitList 0 31 28 31 30 31 30 31 31 30 31 30 31 Decl ArrayDecl y int 13 InitList 0 31 29 31 30 31 30 31 31 30 31 30 31 FuncCall scanf ExprList ""%d %d %d"" & a & b & c Decl i int If || && == % a 4 0 != % a 100 0 && == % a 100 0 == % a 400 0 Compound For = i 1 < i b ++ i Compound = d + d ArrayRef y i End FuncCall printf ExprList ""%d"" + d c End Compound FuncCall printf ExprList ""%d"" + d c End Return 0 End",0
401,401,FileAST FuncDef Decl FuncDecl main int Compound Decl num int Decl ii int Decl m int Decl n int Decl i int Decl j int Decl ArrayDecl ArrayDecl str int 111 111 Decl total int >> cin num For = ii 1 <= ii num ++ ii Compound >> >> cin m n For = i 0 < i m ++ i For = j 0 < j n ++ j >> cin ArrayRef ArrayRef str i j = total 0 For = i 0 < i n ++ i = total + total * + * str i For = i 0 < i n ++ i = total + total * + * - + str m 1 i For = i 1 < i - m 1 ++ i = total + total * * + str i For = i 1 < i - m 1 ++ i = total + total * - + * + str i n 1 << << cout total endl End Return 0 End,0
494,494,"FileAST FuncDef Decl FuncDecl main int Compound Decl y int Decl m int Decl d int Decl x int 0 Decl i int Decl ArrayDecl a int 12 InitList 31 29 31 30 31 30 31 31 30 31 30 31 Decl ArrayDecl b int 12 InitList 31 28 31 30 31 30 31 31 30 31 30 31 FuncCall scanf ExprList ""%d"" & y FuncCall scanf ExprList ""%d"" & m FuncCall scanf ExprList ""%d"" & d If || == % y 400 0 && != % y 100 0 == % y 4 0 For = i 0 < i - m 1 ++ i = x + x ArrayRef a i = x + x d FuncCall printf ExprList ""%d"" x End",0
604,604,FileAST Typedef ll long Decl N int 1000010 Decl mod int + 1e9 7 Decl tot int 0 Decl ArrayDecl check int n Decl ArrayDecl mu int n Decl ArrayDecl fib int n Decl ArrayDecl prime int n Decl ArrayDecl inv int n Decl ArrayDecl g int n Decl ArrayDecl f int n FuncDef Decl FuncDecl ParamList Decl a ll Decl b ll q_mod ll Compound Decl res ll 1 While b Compound If & b 1 = res % * res a mod >>= b 1 = a % * a a mod End Return res End FuncDef Decl FuncDecl mobius void Compound = ArrayRef mu 1 1 Decl n int 1000005 = ArrayRef fib 0 0 = ArrayRef fib 1 1 For DeclList Decl i int 2 <= i n ++ i Compound = ArrayRef inv i FuncCall q_mod ExprList ArrayRef fib i - mod 2 End End Decl t int Decl n int Decl m int Decl FuncDecl solve int Decl FuncDecl main int,1
464,464,"FileAST Typedef ll long Decl ArrayDecl s int 123 Decl sz int FuncDef Decl FuncDecl calc ll Compound Decl ans ll 1 For DeclList Decl i int 1 <= i sz ++ i Compound Decl tp ll 0 For DeclList Decl j int 1 <= j sz ++ j Compound If < ArrayRef s j + i 1 Compound ++ tp End End *= ans - tp - i 1 End Decl f int 0 For DeclList Decl i int 1 <= i sz ++ i Compound If == ArrayRef s i ArrayRef s - i 1 ++ f = f 1 /= ans f End Return ans End FuncDef Decl FuncDecl ParamList Decl argc int Decl ArrayDecl PtrDecl argv char main int Compound Decl t int >> cin t While -- t Compound Decl n ll >> cin n = sz 0 Decl k int 2 FuncCall memset ExprList s 0 sizeof s While > n 0 Compound = ArrayRef s ++ sz % n k /= n k ++ k End << << << cerr ""sz = "" sz endl FuncCall sort ExprList + s 1 + + s 1 sz Decl ans ll FuncCall calc If == ArrayRef s 1 0 Compound For DeclList Decl i int 1 <= i sz ++ i Compound = ArrayRef s i ArrayRef s + i 1 End -= sz 1 -= ans FuncCall calc End << << cout - ans 1 endl End Return 0 End",0
302,302,FileAST Decl ArrayDecl ArrayDecl dp int 12345 123 Decl ArrayDecl w int 123 Decl ArrayDecl v int 123 FuncDef Decl FuncDecl main int Compound Decl n int Decl V int >> >> cin n v For DeclList Decl i int 1 <= i n ++ i Compound >> >> cin ArrayRef w i ArrayRef v i End << << cout ArrayRef ArrayRef dp n v endl Return 0 End,0
271,271,FileAST Typedef LL long Decl maxn LL + 1000 10 Decl mod LL 10000000 Decl ArrayDecl ArrayDecl a char 12 12 FuncDef Decl FuncDecl main int Compound Decl n int Decl m int While >> >> cin n m Compound For DeclList Decl i int 1 <= i n ++ i Compound For DeclList Decl j int 1 <= j n ++ j Compound >> cin ArrayRef ArrayRef a i j End End Decl k int % m 4 If == k 0 Compound End If || == k 1 == k - 3 Compound End If || == k 2 == k - 2 Compound End If || == k 3 == k - 1 Compound End End Return 0 End,0
946,946,,1
840,840,,1
51,51,FileAST FuncDef Decl FuncDecl main int Compound Decl n int Decl i int Decl T int Decl sum double >> cin t While -- t Compound >> cin n = sum 0.0 For = i 2 <= i n ++ i Compound += sum FuncCall log10 ExprList i End << << cout + Cast Typename TypeDecl int sum 1 endl End Return 0 End,0
741,741,,1
87,87,FileAST FuncDef Decl FuncDecl ParamList Decl PtrDecl p int Decl m int Decl n int f int Compound Decl row int Decl col int Decl temp int Decl sum int 0 For = row 1 < row + m 1 ++ row Compound For = col 1 < col + n 1 ++ col Compound If || || || == row 1 == row m == col 1 == col n Compound = temp * + + p * n - row 1 col += sum temp End End End Return sum End Decl FuncDecl main int,0
150,150,FileAST Decl n int Decl ArrayDecl a int 35 Decl ArrayDecl ans int 110 Decl num int Decl FuncDecl ParamList Decl x int find int FuncDef Decl FuncDecl ParamList Decl pos int change void Compound For DeclList Decl i int 1 <= i pos ++ i = ArrayRef a i - ArrayRef a i End Decl FuncDecl solve void Decl FuncDecl main int,0
888,888,,1
416,416,FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl a int 10000 Decl ArrayDecl b int 10000 Decl ArrayDecl c int 10000 Decl i int Decl l int Decl n int Decl ArrayDecl sum int 10000 InitList 0 >> cin n For = i 0 < i n ++ i << << cout ArrayRef sum i endl Return 0 End,0
385,385,"FileAST Decl M int + 100 10 Decl N int + 100 10 Decl ArrayDecl ArrayDecl mat int n m FuncDef Decl FuncDecl ParamList Typename TypeDecl void main int Compound Decl cases int Decl i int Decl j int Decl ans int Decl m int Decl n int FuncCall scanf ExprList ""%d"" & cases While -- cases Compound = ans 0 FuncCall scanf ExprList ""%d%d"" & m & n If || == m 0 == n 0 Compound FuncCall printf ExprList ""%d\n"" 0 Continue End If == m 1 Compound For = i 0 < i n ++ i Compound += ans ArrayRef ArrayRef mat 0 i End FuncCall printf ExprList ""%d\n"" ans Continue End If == n 1 Compound FuncCall printf ExprList ""%d\n"" ans Continue End -= ans + + + ArrayRef ArrayRef mat 0 0 ArrayRef ArrayRef mat 0 - n 1 ArrayRef ArrayRef mat - m 1 0 ArrayRef ArrayRef mat - m 1 - n 1 FuncCall printf ExprList ""%d\n"" ans End Return 0 End",0
227,227,"FileAST Decl M int + 100 10 Decl N int + 100 10 Decl ArrayDecl ArrayDecl mat int n m FuncDef Decl FuncDecl ParamList Typename TypeDecl void main int Compound Decl cases int Decl i int Decl j int Decl ans int Decl m int Decl n int FuncCall scanf ExprList ""%d"" & cases While -- cases Compound = ans 0 FuncCall scanf ExprList ""%d%d"" & m & n If || == m 0 == n 0 Compound FuncCall printf ExprList ""%d\n"" 0 Continue End If == m 1 Compound FuncCall printf ExprList ""%d\n"" ans Continue End If == n 1 Compound For = i 0 < i m ++ i Compound += ans ArrayRef ArrayRef mat i 0 End FuncCall printf ExprList ""%d\n"" ans Continue End -= ans + + + ArrayRef ArrayRef mat 0 0 ArrayRef ArrayRef mat 0 - n 1 ArrayRef ArrayRef mat - m 1 0 ArrayRef ArrayRef mat - m 1 - n 1 FuncCall printf ExprList ""%d\n"" ans End Return 0 End",0
43,43,FileAST Decl sum int 0 FuncDef Decl FuncDecl ParamList Decl i int Decl j int Decl k int Decl p int Decl q int ijudge void Compound If || || || == j 0 == j - p 1 == k 0 == k - q 1 += sum i End FuncDef Decl FuncDecl main int Compound Decl n int >> cin n Decl ArrayDecl ArrayDecl a int 100 100 Decl p int Decl q int For DeclList Decl i int 0 < i n ++ i Compound >> >> cin p q = sum 0 For DeclList Decl j int 0 < j p ++ j For DeclList Decl k int 0 < k q ++ k Compound >> cin ArrayRef ArrayRef a j k FuncCall ijudge ExprList ArrayRef ArrayRef a j k j k p q End << << cout sum endl End Return 0 End,0
1041,1041,,1
867,867,,1
430,430,"FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl m int Decl n int Decl ArrayDecl ArrayDecl sz int 100 100 Decl ArrayDecl sum int 100 Decl i int Decl j int Decl a int Decl b int Decl c int Decl d int Decl e int = b 0 = c 0 = d 0 = e 0 FuncCall scanf ExprList ""%d"" & k For = a 0 < a k ++ a Compound FuncCall printf ExprList ""%d\n"" ArrayRef sum a End Return 0 End",0
310,310,"FileAST FuncDef Decl FuncDecl main int Compound Decl year int Decl ArrayDecl dm int InitList 31 28 31 30 31 30 31 31 30 31 30 31 Decl day int 0 Decl month int 0 FuncCall scanf ExprList ""%d%d%d"" & year & month & day If || == % year 400 0 && == % year 4 0 != % year 100 0 = ArrayRef dm 1 29 Decl i int Decl m int 0 Decl d int 0 For = i 0 < i - month 1 ++ i += d ArrayRef dm i += d day FuncCall printf ExprList ""%d"" d Return 0 End",0
864,864,,1
524,524,"FileAST FuncDef Decl FuncDecl main int Compound Decl i int Decl a int Decl b int Decl c int Decl sum int 0 FuncCall scanf ExprList ""%d%d%d"" & a & b & c If == b 1 = sum 0 If == b 2 = sum 31 Compound = sum 31 If || == % a 400 0 && == % a 4 0 != % a 100 0 = sum + sum 29 = sum + sum 28 For = i 3 < i b ++ i Compound If || || || || == i 3 == i 5 == i 7 == i 8 == i 10 = sum + sum 31 If || || || == i 4 == i 6 == i 9 == i 11 = sum + sum 30 End End = sum + sum c FuncCall printf ExprList ""%d"" sum Return 0 End",0
103,103,"FileAST FuncDef Decl FuncDecl main int Compound Decl l int Decl m int Decl n int Decl t int Decl i int Decl s int FuncCall scanf ExprList ""%d%d%d"" & l & m & n If && == % l 4 0 != % l 100 0 = t 29 If != % l 4 0 = t 28 If && == % l 100 0 != % l 400 0 = t 28 If == % l 400 0 = t 29 Decl ArrayDecl a int 13 InitList 0 31 t 31 30 31 30 31 31 30 31 30 31 If == m 1 = s n = s n For = i 1 < i m ++ i Compound = s + s ArrayRef a i End FuncCall printf ExprList ""%d"" s Return 0 End",0
239,239,"FileAST FuncDef Decl FuncDecl main int Compound Decl a int Decl x int Decl m int Decl n int Decl i int Decl j int Decl k int Decl ArrayDecl sum int 10000 InitList 0 Decl ArrayDecl ArrayDecl sz int 100 100 FuncCall scanf ExprList ""%d"" & a For = i 0 < i a ++ i Compound FuncCall printf ExprList ""%d\n"" ArrayRef sum i End Return 0 End",0
269,269,"FileAST FuncDef Decl FuncDecl main int Compound Decl m int Decl a int Decl b int Decl i int Decl s int Decl c int 0 FuncCall scanf ExprList ""%d %d %d"" & m & a & b If || && == % m 4 0 != % m 100 0 == % m 400 0 Compound Decl ArrayDecl months int 13 InitList 0 31 29 31 30 31 30 31 31 30 31 30 31 = s + c b End Compound Decl ArrayDecl month int 13 InitList 0 31 28 31 30 31 30 31 31 30 31 30 31 For = i 0 < i a ++ i = c + c ArrayRef month i = s + c b End FuncCall printf ExprList ""%d"" s Return 0 End",0
111,111,"FileAST Decl ArrayDecl a int 55 Decl ArrayDecl b int 55 FuncDef Decl FuncDecl main int Compound Decl t int FuncCall scanf ExprList ""%d"" & t While -- t Compound FuncCall memset ExprList a 0 sizeof a FuncCall memset ExprList b 0 sizeof b = ArrayRef a 0 1 Decl num int Decl ans int 0 For DeclList Decl i int 1 <= i 50 ++ i += ans ArrayRef a i FuncCall printf ExprList ""%d\n"" ans End Return 0 End",0
76,76,"FileAST FuncDef Decl FuncDecl main int Compound Decl year int Decl month int Decl day int Decl i int Decl a int 0 Decl b int 0 FuncCall scanf ExprList ""%d %d %d"" & year & month & day Decl ArrayDecl N1 int 13 InitList 0 31 28 31 30 31 30 31 31 30 31 30 31 Decl ArrayDecl N2 int 13 InitList 0 31 29 31 30 31 30 31 31 30 31 30 31 If || && == % year 4 0 != % year 100 0 == % year 400 0 Compound If || < day 1 > day ArrayRef n2 month Compound FuncCall printf ExprList ""wrong\n"" Return - 1 End Compound = b - a day End End Compound If || < day 1 > day ArrayRef n1 month Compound FuncCall printf ExprList ""wrong\n"" Return - 1 End Compound For = i 1 <= i month ++ i Compound += a ArrayRef n1 i End = b - a day End End FuncCall printf ExprList ""%d\n"" b Return 0 End",0
610,610,"FileAST Decl INF int 0x3f3f3f3f Decl MAXN int 25 Decl n int Decl B int Decl s int Decl ArrayDecl v int maxn Decl ArrayDecl dp int * maxn 1000000 Decl FuncDecl solve int FuncDef Decl FuncDecl main int Compound FuncCall scanf ExprList ""%d%d"" & n & b = s 0 For DeclList Decl i int 1 <= i n ++ i Compound FuncCall scanf ExprList ""%d"" & ArrayRef v i += s ArrayRef v i End FuncCall printf ExprList ""%d\n"" FuncCall solve End",1
922,922,,1
686,686,FileAST FuncDef Decl FuncDecl main int Compound Decl k int >> cin k While -- k Compound Decl m int Decl n int Decl i int Decl j int Decl ArrayDecl ArrayDecl a int 100 100 >> >> cin m n Decl sum int 0 For = j 0 < j n ++ j Compound += sum ArrayRef ArrayRef a 0 j += sum ArrayRef ArrayRef a - m 1 j End = i 1 While < i - m 1 Compound += sum ArrayRef ArrayRef a i 0 += sum ArrayRef ArrayRef a i - n 1 ++ i End << << cout sum endl End End,1
382,382,"FileAST Decl ArrayDecl a int 1030 FuncDef Decl FuncDecl main int Compound Decl t int FuncCall scanf ExprList ""%d"" & t While -- t Compound Decl n int Decl k int FuncCall scanf ExprList ""%d%d"" & n & k DoWhile -- k Compound FuncCall next_permutation ExprList a + a n End FuncCall printf ExprList ""%d"" ArrayRef a 0 For DeclList Decl i int 1 < i n ++ i FuncCall printf ExprList "" %d"" ArrayRef a i FuncCall printf ExprList ""\n"" End End",0
480,480,FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl ArrayDecl ArrayDecl a int 99 99 100 InitList 0 Decl ArrayDecl m int 100 Decl ArrayDecl n int 100 Decl k int Decl i int Decl j int Decl l int Decl ArrayDecl sum int 100 InitList 0 Decl leap int >> cin k For = i 0 <= i - k 1 ++ i Compound << << cout ArrayRef sum i endl End Return 0 End,0
966,966,,1
65,65,"FileAST Decl ArrayDecl ArrayDecl dp int 15005 20 Decl ArrayDecl c int 20 Decl ArrayDecl g int 20 FuncDef Decl FuncDecl main int Compound Decl C int Decl G int FuncCall scanf ExprList ""%d%d"" & c & g FuncCall memset ExprList dp 0 sizeof dp For DeclList Decl i int 1 <= i c ++ i Compound FuncCall scanf ExprList ""%d"" & ArrayRef c i End = ArrayRef ArrayRef dp 0 7500 1 FuncCall printf ExprList ""%d\n"" ArrayRef ArrayRef dp g 7500 End",0
15,15,FileAST Decl FuncDecl ParamList Decl a int cnt_row int FuncDef Decl FuncDecl main int Compound Decl x int Decl y int Decl i int Decl p int >> >> cin x y If < x y Compound Decl temp int = temp x = x y = y temp End = p - FuncCall cnt_row ExprList x FuncCall cnt_row ExprList y For = i 0 < i p ++ i = x / x 2 While != x y Compound If == % x 2 0 = x / x 2 = x / - x 1 2 If == % y 2 0 = y / y 2 = y / - y 1 2 End << cout x Return 0 End Decl FuncDecl ParamList Decl a int cnt_row int,0
560,560,"FileAST Decl ArrayDecl a int 50005 Decl ArrayDecl ArrayDecl dp_min int 18 50005 Decl ArrayDecl ArrayDecl dp_max int 18 50005 Decl n int Decl q int Decl l int Decl r int Decl FuncDecl init void Decl FuncDecl ParamList Decl l int Decl r int ask_max int Decl FuncDecl ParamList Decl l int Decl r int ask_min int FuncDef Decl FuncDecl main int Compound FuncCall scanf ExprList ""%d%d"" & n & q For DeclList Decl i int 1 <= i n ++ i FuncCall scanf ExprList ""%d"" & ArrayRef a i FuncCall init While -- q Compound FuncCall scanf ExprList ""%d%d"" & l & r FuncCall printf ExprList ""%d\n"" - FuncCall ask_max ExprList l r FuncCall ask_min ExprList l r End End",1
7,7,FileAST Decl ArrayDecl ArrayDecl v int 100 100 FuncDef Decl FuncDecl ParamList Decl m int Decl n int sum int Compound Decl su int 0 If && >= n 2 >= m 2 Compound End If && >= n 2 == m 1 Compound End If && >= m 2 == n 1 Compound For DeclList Decl i int 0 < i n ++ i Compound += su ArrayRef ArrayRef v i 0 End End Compound = su ArrayRef ArrayRef v 0 0 End Return su End Decl FuncDecl main int,0
595,595,FileAST FuncDef Decl FuncDecl main int Compound Decl t int >> cin t While > t 0 Compound Decl ArrayDecl ArrayDecl a int 102 102 Decl m int Decl n int >> >> cin m n Decl sum int 0 For DeclList Decl i int 0 < i m ++ i Compound For DeclList Decl j int 0 < j n ++ j >> cin * + * + a i j End If == m 1 Compound End Compound End << << cout sum endl -- t End Return 0 End,1
918,918,,1
541,541,"FileAST FuncDef Decl FuncDecl main int Compound Decl year int Decl month int Decl day int Decl ArrayDecl monthday int 12 InitList 31 28 31 30 31 30 31 31 30 31 30 31 FuncCall scanf ExprList ""%d%d%d"" & year & month & day Decl i int Decl sum int 0 For = i 1 < i month ++ i Compound = sum + sum ArrayRef monthday - i 1 End = sum + sum day Decl a int = a % year 4 If && > month 2 || && == a 0 != % year 100 0 == % year 400 0 Compound = sum + sum 1 End FuncCall printf ExprList ""%d"" sum Return 0 End",1
112,112,"FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl ArrayDecl sz int 100 100 Decl n int Decl ArrayDecl s int 100 InitList 0 Decl i int Decl j int Decl len int Decl col int Decl m int Decl sum int 0 FuncCall scanf ExprList ""%d"" & n For = i 0 < i n ++ i Compound FuncCall printf ExprList ""%d\n"" ArrayRef s i End Return 0 End",0
1011,1011,,1
530,530,"FileAST Typedef ll long Decl maxn int 123456 Decl ArrayDecl p int 8 Decl ArrayDecl ArrayDecl sx int 6 maxn Decl ArrayDecl ArrayDecl sy int 6 maxn Decl ArrayDecl ArrayDecl dp int 150 123 Decl ArrayDecl op_s int 123 Decl ArrayDecl op_t int 123 Decl ArrayDecl ArrayDecl id int 6 150 Decl FuncDecl init void Decl FuncDecl ParamList Decl ArrayDecl a int Cantor int Decl FuncDecl ParamList Decl ArrayDecl a int Decl ArrayDecl b int Decl ArrayDecl c int cal void Decl FuncDecl ParamList Decl ArrayDecl a int Decl ArrayDecl b int cal2 void FuncDef Decl FuncDecl main int Compound FuncCall init Decl n int Decl m int While ~ FuncCall scanf ExprList ""%d%d"" & n & m Compound Decl ArrayDecl a int 6 Decl ArrayDecl b int 6 For DeclList Decl i int n >= i 1 -- i Compound For DeclList Decl j int 1 <= j 5 ++ j Compound = ArrayRef a j ArrayRef ArrayRef sy i j End FuncCall cal ExprList ArrayRef sy + i 1 a ArrayRef sy i End FuncCall memset ExprList dp 0x3f sizeof dp Decl x int Decl s int Decl t int = x FuncCall cantor ExprList a = ArrayRef ArrayRef dp 0 x 0 Decl ans int ArrayRef ArrayRef dp m 1 If == ans 0x3f3f3f3f = ans - 1 FuncCall printf ExprList ""%d\n"" ans End Return 0 End",1
370,370,"FileAST FuncDef Decl FuncDecl ParamList Typename TypeDecl void mk void Compound Decl m int Decl n int Decl i int Decl j int Decl k int Decl s int 0 Decl ArrayDecl ArrayDecl a int 100 100 FuncCall scanf ExprList ""%d %d"" & m & n If != m 1 If != n 1 For = i - m 2 > i 0 -- i Compound += s ArrayRef ArrayRef a i 0 End FuncCall printf ExprList ""%d\n"" s End Decl FuncDecl main int",0
639,639,FileAST FuncDef Decl FuncDecl ParamList Decl year int check int Compound If || == % year 400 0 && != % year 100 0 == % year 4 0 Compound Return 1 End Compound Return 0 End End FuncDef Decl FuncDecl main int Compound Decl year int Decl month int Decl day int Decl date int 0 >> cin year >> cin month >> cin day Decl ArrayDecl m int 13 InitList 0 31 28 31 30 31 30 31 31 30 31 30 31 Decl i int For = i 1 < i month ++ i Compound = date + date ArrayRef m i If == i 2 Compound = date + date FuncCall check ExprList year End End = date + date day << << cout date endl Return 0 End,1
432,432,FileAST Decl MOD int 1000000007 Decl MAXN int 1e7 Decl ArrayDecl phi int + maxn 5 Decl ArrayDecl sum long + maxn 5 Decl k long Decl n long Decl m long Decl p long FuncDef Decl FuncDecl GetEuler void Compound FuncCall memset ExprList phi 0 sizeof phi = ArrayRef phi 1 1 = ArrayRef sum 1 1 For DeclList Decl i int 2 <= i maxn ++ i = ArrayRef sum i % + ArrayRef sum - i 1 ArrayRef phi i mod End FuncDef Decl FuncDecl ParamList Decl n long Decl m long Get_K long Compound If == m 0 Return 0 If == m 1 Return ArrayRef phi n If == n 1 Return ArrayRef sum m If == ArrayRef phi n - n 1 Return % + % * ArrayRef phi n FuncCall get_k ExprList 1 m mod FuncCall get_k ExprList n / m n mod For DeclList Decl i int 2 < i maxn ++ i If == % n i 0 Return % + % * ArrayRef phi i FuncCall get_k ExprList / n i m mod FuncCall get_k ExprList n / m i mod End FuncDef Decl FuncDecl ParamList Decl a long Decl b long Decl mod long PowMod long Compound Decl ans long 1 While b Compound If & b 1 = ans % * ans a mod = a % * a a mod >>= b 1 End Return ans End FuncDef Decl FuncDecl ParamList Decl k long Decl p long Cal long Compound If == p 2 Return & k 1 Return FuncCall powmod ExprList k + FuncCall cal ExprList k ArrayRef phi p ArrayRef phi p p End Decl FuncDecl main int,0
801,801,,1
733,733,FileAST FuncDef Decl FuncDecl main int Compound Decl a int Decl b int Decl n int >> cin n For DeclList Decl i int 0 < i n ++ i Compound >> >> cin a b << << cout + a b endl End Return 0 End,1
945,945,,1
517,517,"FileAST Decl ArrayDecl c double 1100 Decl ArrayDecl d double 1100 FuncDef Decl FuncDecl main int Compound Decl n int Decl u double Decl v double FuncCall scanf ExprList ""%d%lf%lf"" & n & v & u Decl ans double 0 For DeclList Decl i int 1 <= i n ++ i Compound For DeclList Decl j int 1 <= j n ++ j Compound += ans / u - - ArrayRef c i * - j 1 ArrayRef d i v End End FuncCall printf ExprList ""%.3lf\n"" ans Return 0 End",0
215,215,"FileAST FuncDef Decl FuncDecl main int Compound Decl k int FuncCall scanf ExprList ""%d"" & k While -- k Compound Decl m int Decl n int Decl ArrayDecl ArrayDecl data int 100 100 FuncCall scanf ExprList ""%d %d"" & m & n Decl i int Decl j int Decl sum int 0 For = i 1 < i - n 1 ++ i = sum + + sum ArrayRef ArrayRef data 0 i ArrayRef ArrayRef data - m 1 i FuncCall printf ExprList ""%d\n"" sum End End",0
682,682,"FileAST Typedef LL long FuncDef Decl FuncDecl main int Compound Decl n int Decl i int Decl a int Decl b int Decl c int Decl x double While >> cin n Compound If == n 0 Break = a = b = c 0 For = i 0 < i n ++ i Compound >> cin x If > x 0 ++ c If < x 0 ++ a ++ b End FuncCall printf ExprList ""%d %d %d\n"" a b c End Return 0 End",1
983,983,,1
393,393,"FileAST FuncDef Decl FuncDecl main int Compound Decl p int Decl n int Decl m int Decl i int Decl k int Decl j int Decl ArrayDecl ArrayDecl a int 100 100 Decl ArrayDecl s int 100 FuncCall scanf ExprList ""%d"" & p For = k 0 < k p ++ k Compound = ArrayRef s k 0 FuncCall scanf ExprList ""%d%d"" & m & n For = i 0 < i m ++ i For = j 0 < j n ++ j Compound FuncCall scanf ExprList ""%d"" & ArrayRef ArrayRef a i j If == i 0 += ArrayRef s k ArrayRef ArrayRef a i j If == - - m i 1 0 += ArrayRef s k ArrayRef ArrayRef a i j If == j 0 += ArrayRef s k ArrayRef ArrayRef a i j If == - - n j 1 0 += ArrayRef s k ArrayRef ArrayRef a i j End End Return 0 End",0
359,359,"FileAST FuncDef Decl FuncDecl main int Compound Decl s int Decl m int Decl n int Decl i int Decl j int Decl k int Decl sum int 0 Decl ArrayDecl ArrayDecl a int 100 100 FuncCall scanf ExprList ""%d"" & s For = k 0 < k s ++ k Compound FuncCall scanf ExprList ""%d%d"" & m & n For = i 0 < i m ++ i Compound For = j 0 < j n ++ j Compound FuncCall scanf ExprList ""%d"" & ArrayRef ArrayRef a i j End End For = i 0 < i n ++ i Compound += sum ArrayRef ArrayRef a 0 i End If > m 2 Compound For = i 1 < i - m 1 ++ i Compound += sum ArrayRef ArrayRef a i 0 += sum ArrayRef ArrayRef a i - n 1 End End If > m 1 Compound For = i 0 < i n ++ i Compound += sum ArrayRef ArrayRef a - m 1 i End End FuncCall printf ExprList ""%d\n"" sum = sum 0 End Return 0 End",0
203,203,FileAST Typedef LL long Decl maxn LL + 1000 10 Decl mod LL 10000000 Decl ArrayDecl ArrayDecl a char 12 12 FuncDef Decl FuncDecl main int Compound Decl n int Decl m int While >> >> cin n m Compound Decl k int % m 4 If == k 0 Compound End If || == k 1 == k - 3 Compound For DeclList Decl j int 1 <= j n ++ j Compound For DeclList Decl i int n >= i 1 -- i Compound << cout ArrayRef ArrayRef a i j End << cout endl End End If || == k 2 == k - 2 Compound End If || == k 3 == k - 1 Compound End End Return 0 End,0
734,734,"FileAST FuncDef Decl FuncDecl main int Compound Decl m int Decl n int Decl k int Decl sum int 0 Decl a int Decl i int Decl j int Decl q int Decl ArrayDecl b int 100 Decl ArrayDecl ArrayDecl s int 100 100 FuncCall scanf ExprList ""%d"" & k For = q 1 <= q k ++ q Compound FuncCall scanf ExprList ""%d%d"" & m & n For = i 1 <= i m ++ i Compound For = j 1 <= j n ++ j Compound FuncCall scanf ExprList ""%d"" & ArrayRef ArrayRef s i j End End For = j 1 <= j n ++ j Compound += sum ArrayRef ArrayRef s 1 j += sum ArrayRef ArrayRef s m j End For = i 1 <= i m ++ i Compound += sum ArrayRef ArrayRef s i 1 += sum ArrayRef ArrayRef s i n End = a + + + ArrayRef ArrayRef s 1 1 ArrayRef ArrayRef s 1 n ArrayRef ArrayRef s m 1 ArrayRef ArrayRef s m n -= sum a = ArrayRef b q sum = sum 0 End Return 0 End",1
794,794,,1
779,779,,1
143,143,"FileAST FuncDef Decl FuncDecl main int Compound Decl a int Decl b int Decl c int Decl sum int 0 Decl ArrayDecl month int 13 InitList 0 31 28 31 30 31 30 31 31 30 31 30 31 FuncCall scanf ExprList ""%d%d%d"" & a & b & c For DeclList Decl i int 0 < i b ++ i Compound = sum + sum ArrayRef month i End = sum + sum c If || && == % a 4 0 != % a 100 0 == % a 400 0 = sum + sum 1 FuncCall printf ExprList ""%d\n"" sum Return 0 End",0
475,475,"FileAST FuncDef Decl FuncDecl main int Compound Decl k int FuncCall scanf ExprList ""%d"" & k Decl s1 int 0 Decl s2 int 0 Decl s3 int 0 Decl s4 int 0 Decl s int 0 Decl r int 0 Decl c int 0 Decl ArrayDecl ArrayDecl jz int 100 100 Decl m int Decl n int Decl i int 1 While <= i k Compound FuncCall scanf ExprList ""%d %d"" & m & n = r 0 = c 0 = r - m 1 = c 0 For = c 0 < c n ++ c Compound += s2 ArrayRef ArrayRef jz r c End = r 0 = c 0 = r 0 = c - n 1 = s - - - - + + + s1 s2 s3 s4 ArrayRef ArrayRef jz 0 0 ArrayRef ArrayRef jz 0 - n 1 ArrayRef ArrayRef jz - m 1 0 ArrayRef ArrayRef jz - m 1 - n 1 FuncCall printf ExprList ""%d"" s = s1 0 = s2 0 = s3 0 = s4 0 = s 0 If != i k Compound FuncCall printf ExprList ""\n"" End ++ i End Return 0 End",0
755,755,,1
200,200,"FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl m int Decl n int Decl i int Decl s int Decl ArrayDecl ArrayDecl a int 100 100 Decl j int Decl l int Decl p int FuncCall scanf ExprList ""%d"" & k For = p 0 < p k ++ p Compound = s 0 FuncCall scanf ExprList ""%d%d"" & m & n For = j 0 < j m ++ j For = l 0 < l n ++ l FuncCall scanf ExprList ""%d"" & ArrayRef ArrayRef a j l If && > n 1 > m 1 Compound For = i 0 < i n ++ i Compound += s ArrayRef ArrayRef a 0 i += s ArrayRef ArrayRef a - m 1 i End For = i 1 < i - m 1 ++ i Compound += s ArrayRef ArrayRef a i 0 += s ArrayRef ArrayRef a i - n 1 End End If == n 1 Compound For = i 0 < i m ++ i += s ArrayRef ArrayRef a i 0 End If == m 1 Compound For = i 0 < i n ++ i += s ArrayRef ArrayRef a 0 i End FuncCall printf ExprList ""%d\n"" s End Return 0 End",0
280,280,FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl a int 1001 Decl ArrayDecl b int 1001 Decl i int Decl j int Decl m int Decl n int Decl x int Decl y int Decl flag int >> >> cin x y = flag 0 For = i 0 <= i x ++ i = ArrayRef a i 0 = i 0 = j 0 While > x 0 Compound = ArrayRef a i x = x / x 2 ++ i End While > y 0 Compound = ArrayRef b j y = y / y 2 ++ j End Label Return 0 End,0
616,616,"FileAST Typedef LL long FuncDef Decl FuncDecl main int Compound Decl i int Decl ArrayDecl a int 102 InitList 0 Decl m int Decl n int Decl count int 0 Decl sum int 0 Decl flag int 0 While ~ FuncCall scanf ExprList ""%d%d"" & n & m Compound For = i 0 < i n ++ i = ArrayRef a i * 2 + i 1 If != sum 0 FuncCall printf ExprList "" %d"" / sum count FuncCall printf ExprList ""\n"" = sum 0 = count 0 = flag 0 End Return 0 End",1
539,539,"FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl year int 5 Decl ArrayDecl month int 5 Decl ArrayDecl day int 5 Decl ArrayDecl l int 5 InitList 0 Decl i int 0 For = i 0 < i 5 ++ i Compound FuncCall scanf ExprList ""%d%d%d"" & ArrayRef year i & ArrayRef month i & ArrayRef day i End Return 0 End",1
939,939,,1
605,605,"FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl ArrayDecl ArrayDecl jz int 100 100 Decl ROW int Decl COL int Decl ArrayDecl h int 100 Decl y int Decl i int Decl row int Decl col int FuncCall scanf ExprList ""%d"" & k For = i 0 < i k ++ i Compound FuncCall scanf ExprList ""%d%d"" & row & col For = row 0 < row row ++ row Compound For = col 0 < col col ++ col Compound FuncCall scanf ExprList ""%d"" & ArrayRef ArrayRef jz row col End End = y 0 For = row 0 < row row ++ row Compound += y ArrayRef ArrayRef jz row 0 End For = row 0 < row row ++ row Compound += y ArrayRef ArrayRef jz row - col 1 End For = col 0 < col col ++ col Compound += y ArrayRef ArrayRef jz 0 col End For = col 0 < col col ++ col Compound += y ArrayRef ArrayRef jz - row 1 col End = ArrayRef h i - - - - y ArrayRef ArrayRef jz 0 0 ArrayRef ArrayRef jz 0 - col 1 ArrayRef ArrayRef jz - row 1 0 ArrayRef ArrayRef jz - row 1 - col 1 End End",1
1038,1038,,1
515,515,"FileAST Decl n int Decl ArrayDecl a int 35 Decl ArrayDecl ans int 110 Decl num int Decl FuncDecl ParamList Decl x int find int Decl FuncDecl ParamList Decl pos int change void Decl FuncDecl solve void FuncDef Decl FuncDecl main int Compound Decl t int Decl cas int 1 FuncCall scanf ExprList ""%d"" & t While -- t Compound FuncCall scanf ExprList ""%d"" & n FuncCall solve FuncCall printf ExprList ""%d %d"" ++ cas num For DeclList Decl i int 0 < i num ++ i Compound FuncCall printf ExprList "" %d"" ArrayRef ans i End FuncCall puts ExprList """" End Return 0 End",0
516,516,"FileAST FuncDef Decl FuncDecl ParamList Decl n int f int Compound Decl i int Decl s int 1 For = i 1 <= i n ++ i Compound = s * s 2 End Return s End FuncDef Decl FuncDecl main int Compound Decl x int Decl y int Decl i int Decl j int Decl nx int Decl ny int Decl ArrayDecl x_row int 10 Decl ArrayDecl y_row int 10 FuncCall scanf ExprList ""%d %d\n"" & x & y For = i 1 1 ++ i Compound If < x FuncCall f ExprList i Break End = nx i For = i 1 1 ++ i Compound If < y FuncCall f ExprList i Break End = ny i = ArrayRef x_row 0 x = ArrayRef y_row 0 y For = i 1 1 ++ i Compound = ArrayRef x_row i + - FuncCall f ExprList - - nx i 1 1 / + + - ArrayRef x_row - i 1 FuncCall f ExprList - nx i 1 % + - ArrayRef x_row - i 1 FuncCall f ExprList - nx i 1 2 2 If == ArrayRef x_row i 1 Break End For = i 1 1 ++ i Compound = ArrayRef y_row i + - FuncCall f ExprList - - ny i 1 1 / + + - ArrayRef y_row - i 1 FuncCall f ExprList - ny i 1 % + - ArrayRef y_row - i 1 FuncCall f ExprList - ny i 1 2 2 If == ArrayRef y_row i 1 Break End For = i 0 < i nx ++ i Compound For = j 0 < j ny ++ j Compound If == ArrayRef y_row j ArrayRef x_row i Break End If == ArrayRef y_row j ArrayRef x_row i Break End FuncCall printf ExprList ""%d\n"" ArrayRef y_row j Return 0 End",0
745,745,,1
75,75,FileAST FuncDef Decl FuncDecl main int Compound Decl m int Decl n int Decl i int 1 Decl j int Decl ArrayDecl ArrayDecl a int 101 101 Decl s int Decl k int Decl sum1 int Decl sum2 int Decl sum3 int Decl sum4 int Decl sum int >> cin s While <= i s Compound = sum1 0 = sum2 0 = sum3 0 = sum4 0 >> cin m >> cin n For = j 0 < j n ++ j += sum1 ArrayRef ArrayRef a 0 j = sum + + + sum1 sum2 sum3 sum4 << << cout - - - - sum ArrayRef ArrayRef a 0 0 ArrayRef ArrayRef a 0 - n 1 ArrayRef ArrayRef a - m 1 0 ArrayRef ArrayRef a - m 1 - n 1 endl ++ i End Return 0 End,0
48,48,FileAST FuncDef Decl FuncDecl ParamList Decl m int Decl n int Decl ArrayDecl ArrayDecl a int 100 sum int Compound Decl i int Decl sum int 0 For = i 0 < i n ++ i Compound += sum * + * - + a m 1 i += sum * + * a i End Return sum End Decl FuncDecl main int,0
366,366,"FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl c double 3005 InitList 0 Decl a0 double Decl an1 double Decl n int Decl i int Decl j int While ~ FuncCall scanf ExprList ""%d"" & n Compound FuncCall scanf ExprList ""%lf%lf"" & a0 & an1 Decl sum double 0 += sum + * n a0 an1 For = i 1 <= i n ++ i Compound -= sum * * 2 + - n i 1 ArrayRef c i End /= sum + n 1 FuncCall printf ExprList ""%.2lf\n"" sum End Return 0 End",0
117,117,FileAST Typedef LL long Decl maxn LL + 1000 10 Decl mod LL 10000000 Decl ArrayDecl ArrayDecl a char 12 12 FuncDef Decl FuncDecl main int Compound Decl n int Decl m int While >> >> cin n m Compound Decl k int % m 4 If == k 0 Compound For DeclList Decl i int 1 <= i n ++ i Compound For DeclList Decl j int 1 <= j n ++ j Compound << cout ArrayRef ArrayRef a i j End << cout endl End End If || == k 1 == k - 3 Compound End If || == k 2 == k - 2 Compound End If || == k 3 == k - 1 Compound End End Return 0 End,0
766,766,,1
764,764,,1
425,425,FileAST Decl FuncDecl ParamList Decl a int Year int FuncDef Decl FuncDecl main int Compound Decl year int Decl month int Decl day int Decl ArrayDecl a int 13 Decl i int Decl answer int >> >> >> cin year month day = answer 0 For = i 1 < i month ++ i Compound += answer ArrayRef a i End += answer day << << cout answer endl Return 0 End,0
555,555,"FileAST FuncDef Decl FuncDecl main int Compound Decl a int Decl b int Decl i int Decl c int Decl days int Decl ArrayDecl m int 13 InitList 0 31 28 31 30 31 30 31 31 30 31 30 31 FuncCall scanf ExprList ""%d%d%d"" & a & b & c = days 0 If || && == % a 4 0 != % a 100 0 == % a 400 0 Compound = ArrayRef m 2 29 For = i 0 < i b ++ i Compound += days ArrayRef m i End FuncCall printf ExprList ""%d\n"" + days c End Compound FuncCall printf ExprList ""%d\n"" + days c End Return 0 End",1
352,352,FileAST FuncDef Decl FuncDecl main int Compound Decl idx int 100 Decl i int 100 Decl j int 100 Decl lines int 100 Decl n int 100 Decl fun_name int 100 Decl None int 100 Decl ArrayDecl ArrayDecl na int 101 101 Decl ArrayDecl ArrayDecl a int 101 101 For = i - 4 n <= i + n 2 ++ i For = j - 4 n <= j + n 2 ++ j = ArrayRef ArrayRef a i j + ArrayRef ArrayRef a i j 1 Return 0 End,0
490,490,"FileAST Typedef ll long Decl maxn int 123456 Decl ArrayDecl p int 8 Decl ArrayDecl ArrayDecl sx int 6 maxn Decl ArrayDecl ArrayDecl sy int 6 maxn Decl ArrayDecl ArrayDecl dp int 150 123 Decl ArrayDecl op_s int 123 Decl ArrayDecl op_t int 123 Decl ArrayDecl ArrayDecl id int 6 150 Decl FuncDecl init void Decl FuncDecl ParamList Decl ArrayDecl a int Cantor int Decl FuncDecl ParamList Decl ArrayDecl a int Decl ArrayDecl b int Decl ArrayDecl c int cal void Decl FuncDecl ParamList Decl ArrayDecl a int Decl ArrayDecl b int cal2 void FuncDef Decl FuncDecl main int Compound FuncCall init Decl n int Decl m int While ~ FuncCall scanf ExprList ""%d%d"" & n & m Compound Decl ArrayDecl a int 6 Decl ArrayDecl b int 6 For DeclList Decl i int 1 <= i n ++ i Compound For DeclList Decl j int 1 <= j 5 ++ j Compound FuncCall scanf ExprList ""%d"" & ArrayRef ArrayRef sy i j End FuncCall cal ExprList ArrayRef sx - i 1 ArrayRef sy i ArrayRef sx i End FuncCall memset ExprList dp 0x3f sizeof dp Decl x int Decl s int Decl t int = x FuncCall cantor ExprList a = ArrayRef ArrayRef dp 0 x 0 Decl ans int ArrayRef ArrayRef dp m 1 If == ans 0x3f3f3f3f = ans - 1 FuncCall printf ExprList ""%d\n"" ans End Return 0 End",0
31,31,"FileAST FuncDef Decl FuncDecl main int Compound Decl i int Decl j int Decl t int Decl r int Decl k int Decl m int Decl n int Decl ArrayDecl a int 1000 InitList 0 Decl ArrayDecl ArrayDecl b int 100 100 InitList 0 Decl sum int 0 FuncCall scanf ExprList ""%d"" & k For = i 0 < i k ++ i Compound FuncCall scanf ExprList ""%d%d"" & m & n For = t 0 < t m ++ t Compound For = r 0 < r n ++ r Compound FuncCall scanf ExprList ""%d"" & ArrayRef ArrayRef b t r If == r - n 1 FuncCall scanf ExprList ""\n"" End End If == m 1 For = j 0 <= j - n 1 ++ j += sum ArrayRef ArrayRef b 0 j If == n 1 For = j 0 <= j - m 1 ++ j += sum ArrayRef ArrayRef b j 0 Compound For = j 0 < j - n 1 ++ j += sum * + ArrayRef b 0 j For = j 0 < j - m 1 ++ j += sum * - + ArrayRef b j n 1 For = j - n 1 > j 0 -- j += sum * + ArrayRef b - m 1 j For = j - m 1 > j 0 -- j += sum * + ArrayRef b j 0 End = ArrayRef a i sum = sum 0 End End",0
942,942,,1
459,459,"FileAST FuncDef Decl FuncDecl main int Compound Decl i int Decl y int Decl n int Decl s int Decl j int Decl h int Decl a int Decl k int Decl b int Decl ArrayDecl ArrayDecl sz int 100 100 Decl ArrayDecl jieguo int 100 Decl sum int FuncCall scanf ExprList ""%d"" & n For = i 0 < i n ++ i Compound FuncCall scanf ExprList ""%d%d"" & a & b For = j 0 < j a ++ j Compound For = k 0 < k b ++ k Compound FuncCall scanf ExprList ""%d"" & ArrayRef ArrayRef sz j k End End = sum 0 For = h 0 < h b ++ h Compound = sum + + sum ArrayRef ArrayRef sz 0 h ArrayRef ArrayRef sz - a 1 h End For = s 0 < s a ++ s Compound = sum + + sum ArrayRef ArrayRef sz s 0 ArrayRef ArrayRef sz s - b 1 End = sum - - - - sum ArrayRef ArrayRef sz 0 0 ArrayRef ArrayRef sz 0 - b 1 ArrayRef ArrayRef sz - a 1 0 ArrayRef ArrayRef sz - a 1 - b 1 = ArrayRef jieguo i sum End Return 0 End",0
742,742,,1
552,552,FileAST FuncDef Decl FuncDecl main int Compound Decl n int Decl i int Decl j int Decl k int Decl line int Decl row int Decl sum int Decl ArrayDecl ArrayDecl array int 200 200 >> cin n For = i 1 <= i n ++ i Compound >> >> cin line row For = j 0 < j line ++ j For = k 0 < k row ++ k >> cin ArrayRef ArrayRef array j k = sum 0 If || == row 1 == line 1 Compound For = j 0 < j line ++ j For = k 0 < k row ++ k = sum + sum ArrayRef ArrayRef array j k << << cout sum endl End Compound = sum - - - - 0 ArrayRef ArrayRef array 0 0 ArrayRef ArrayRef array 0 - row 1 ArrayRef ArrayRef array - line 1 0 ArrayRef ArrayRef array - line 1 - row 1 For = j 0 < j line ++ j = sum + + sum ArrayRef ArrayRef array j 0 ArrayRef ArrayRef array j - row 1 For = j 0 < j row ++ j = sum + + sum ArrayRef ArrayRef array 0 j ArrayRef ArrayRef array - line 1 j << << cout sum endl End End Return 0 End,1
41,41,FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl ArrayDecl a int 100 100 Decl m int Decl n int Decl i int Decl j int Decl k int Decl l int Decl sum int >> cin k For = i 1 <= i k ++ i Compound >> >> cin m n = sum 0 For = j 1 <= j m ++ j Compound For = l 1 <= l n ++ l Compound >> cin ArrayRef ArrayRef a j l If || || || == j 1 == j m == l 1 == l n Compound += sum ArrayRef ArrayRef a j l End End End << << cout sum endl End Return 0 End,0
876,876,,1
116,116,"FileAST Typedef ll long Decl eps double 1e-9 Decl mod ll 998244353 Decl g ll 3 FuncDef Decl FuncDecl ParamList Decl a ll Decl n ll Pow ll Compound Decl ans ll 1 While n Compound If & n 1 = ans % * ans a mod >>= n 1 = a % * a a mod End Return ans End Decl ArrayDecl A ll << 1 20 Decl ArrayDecl B ll << 1 20 Decl FuncDecl ParamList Decl ArrayDecl A ll Decl len int rader void Decl FuncDecl ParamList Decl ArrayDecl A ll Decl len int Decl on int ntt void Decl n int Decl m int Decl FuncDecl Conv void FuncDef Decl FuncDecl main int Compound FuncCall scanf ExprList ""%d%d"" & n & m For DeclList Decl i int 0 <= i n ++ i FuncCall scanf ExprList ""%lld"" & ArrayRef a i FuncCall conv FuncCall puts ExprList """" Return 0 End",0
948,948,,1
231,231,FileAST FuncDef Decl FuncDecl main int Compound Decl k int >> cin k While -- k Compound Decl m int Decl n int Decl i int Decl j int Decl ArrayDecl ArrayDecl a int 100 100 >> >> cin m n For = i 0 < i m ++ i For = j 0 < j n ++ j >> cin ArrayRef ArrayRef a i j Decl sum int 0 = i 1 While < i - m 1 Compound += sum ArrayRef ArrayRef a i 0 += sum ArrayRef ArrayRef a i - n 1 ++ i End << << cout sum endl End End,0
520,520,"FileAST FuncDef Decl FuncDecl ParamList Typename TypeDecl void main int Compound Decl ye int Decl mo int Decl da int Decl i int Decl sum int 0 Decl ArrayDecl mon int InitList 0 31 28 31 30 31 30 31 31 30 31 30 31 FuncCall scanf ExprList ""%d%d%d"" & ye & mo & da For = i 1 < i mo ++ i Compound = sum + sum ArrayRef mon i End If || && == % ye 400 0 > mo 2 && && == % ye 4 0 != % ye 100 0 > mo 2 Compound = sum + + sum da 1 End Compound = sum + sum da End FuncCall printf ExprList ""%d"" sum Return 0 End",0
990,990,,1
620,620,FileAST FuncDef Decl FuncDecl main int Compound Decl m int Decl n int Decl k int Decl j int Decl l int Decl a int Decl i int >> cin k Decl ArrayDecl aa int + k 1 For = i 1 <= i k ++ i Compound = ArrayRef aa i 0 >> >> cin m n For = j 1 <= j m ++ j Compound For = l 1 <= l n ++ l Compound >> cin a If || || || == j 1 == j m == l 1 == l n = ArrayRef aa i + ArrayRef aa i a End End End Return 0 End,1
974,974,,1
372,372,FileAST Decl ArrayDecl a int 50 FuncDef Decl FuncDecl init void Compound = ArrayRef a 0 1 = ArrayRef a 1 2 For DeclList Decl i int 2 <= i 45 ++ i = ArrayRef a i + ArrayRef a - i 1 ArrayRef a - i 2 End Decl FuncDecl main int,0
496,496,"FileAST FuncDef Decl FuncDecl main int Compound Decl x int Decl y int Decl n int Decl ArrayDecl ArrayDecl a int 25 25 Decl i int Decl j int While ExprList ~ FuncCall scanf ExprList ""%d"" & n n Compound = x + / n 2 1 = y / n 2 = i 1 While <= i * n n Compound = ArrayRef ArrayRef a x y i If == % i n 0 Compound = x + x 2 End Compound = x + x 1 = y + y 1 End If > x - n 1 = x - x n If > y - n 1 = y - y n ++ i End For = i 0 < i n ++ i Compound For = j 0 < j n ++ j Compound FuncCall printf ExprList ""%4d"" ArrayRef ArrayRef a i j End FuncCall printf ExprList ""\n"" End End Return 0 End",0
419,419,"FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl m int Decl n int Decl i int Decl j int Decl l int Decl s int Decl ArrayDecl ArrayDecl sz int 100 100 FuncCall scanf ExprList ""%d"" & k Decl PtrDecl sf int Cast Typename PtrDecl TypeDecl int FuncCall malloc ExprList * sizeof Typename TypeDecl int k For = i 0 < i k ++ i Compound FuncCall printf ExprList ""%d\n"" ArrayRef sf i End Return 0 End",0
391,391,FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl ArrayDecl mx int 200 200 Decl k int Decl m int Decl n int Decl ans int 0 >> cin k For DeclList Decl p int 1 <= p k ++ p Compound >> >> cin n m For DeclList Decl i int 1 <= i n ++ i Compound For DeclList Decl j int 1 <= j m ++ j Compound >> cin * + * + mx i j If || || || == i 1 == i n == j 1 == j m += ans * + * + mx i j End End << << cout ans endl = ans 0 End End,0
46,46,FileAST FuncDef Decl FuncDecl main int Compound Decl num int >> cin num While -- num Compound Decl ArrayDecl ArrayDecl a int 100 100 Decl m int Decl n int >> >> cin m n Decl i int Decl j int For = i 0 < i m ++ i Compound For = j 0 < j n ++ j Compound >> cin ArrayRef ArrayRef a i j End End Decl sum int 0 << << cout sum endl End Return 0 End,0
899,899,,1
519,519,FileAST FuncDef Decl FuncDecl main int Compound Decl year int Decl month int Decl day int Decl num int 0 Decl ArrayDecl Ping int 12 InitList 0 31 28 31 30 31 30 31 31 30 31 30 >> cin year If || != % year 4 0 && == % year 100 0 != % year 400 0 Compound EmptyStatement End Compound ++ ArrayRef ping 2 End >> >> cin month day For DeclList Decl i int 0 < i month ++ i Compound += num ArrayRef ping i End << << cout + num day endl End,0
743,743,,1
798,798,,1
329,329,FileAST Decl ArrayDecl ArrayDecl v int 100 100 FuncDef Decl FuncDecl ParamList Decl m int Decl n int sum int Compound Decl su int 0 If && >= n 2 >= m 2 Compound End If && >= n 2 == m 1 Compound For DeclList Decl i int 0 < i n ++ i Compound += su ArrayRef ArrayRef v 0 i End End If && >= m 2 == n 1 Compound End Compound = su ArrayRef ArrayRef v 0 0 End Return su End Decl FuncDecl main int,0
833,833,,1
692,692,FileAST Decl FuncDecl ParamList Decl a int ln int FuncDef Decl FuncDecl main int Compound Decl a int Decl b int Decl i int Decl a1 int Decl b1 int >> >> cin a b = a1 FuncCall ln ExprList a = b1 FuncCall ln ExprList b Decl ArrayDecl num_1 int a1 Decl ArrayDecl num_2 int b1 Decl j int 0 = ArrayRef num_1 0 a = ArrayRef num_2 0 b For = i 1 < i a1 ++ i Compound = ArrayRef num_1 i / ArrayRef num_1 - i 1 2 End << << cout ArrayRef num_1 - a1 j endl Return 0 End,1
266,266,"FileAST FuncDef Decl FuncDecl main int Compound Decl m int Decl n int Decl t int Decl i int Decl j int Decl l int Decl k int Decl sum int 0 Decl ArrayDecl ArrayDecl a int 100 100 FuncCall scanf ExprList ""%d"" & t For = l 0 < l t ++ l Compound FuncCall scanf ExprList ""%d%d"" & m & n For = i 0 < i m ++ i Compound For = j 0 < j n ++ j Compound FuncCall scanf ExprList ""%d"" & ArrayRef ArrayRef a i j End End If && == m n == n 1 Compound FuncCall printf ExprList ""%d"" ArrayRef ArrayRef a 0 0 End Compound For = j 0 < j n ++ j Compound += sum ArrayRef ArrayRef a 0 j += sum ArrayRef ArrayRef a - m 1 j End For = i 0 < i m ++ i Compound += sum ArrayRef ArrayRef a i 0 += sum ArrayRef ArrayRef a i - n 1 End = sum - - - - sum ArrayRef ArrayRef a 0 0 ArrayRef ArrayRef a 0 - n 1 ArrayRef ArrayRef a - m 1 0 ArrayRef ArrayRef a - m 1 - n 1 FuncCall printf ExprList ""%d\n"" sum End = sum 0 End FuncCall scanf ExprList ""%d"" & i Return 0 End",0
855,855,,1
135,135,"FileAST FuncDef Decl FuncDecl ParamList Decl argc int Decl ArrayDecl PtrDecl argv char main int Compound Decl n int 0 Decl N int Decl y int Decl m int Decl d int FuncCall scanf ExprList ""%d %d %d"" & y & m & d If && != % y 100 0 == % y 4 0 Compound Decl ArrayDecl p int 13 InitList 0 31 29 31 30 31 30 31 31 30 31 30 31 If || < d 1 > d ArrayRef p m FuncCall printf ExprList ""Illegal input.\n"" Compound Decl j int For = j 0 < j m ++ j Compound = n + n ArrayRef p j End = n + n d FuncCall printf ExprList ""%d\n"" n End End If != % y 4 0 Compound Decl ArrayDecl q int 13 InitList 0 31 28 31 30 31 30 31 31 30 31 30 31 If || < d 1 > d ArrayRef q m FuncCall printf ExprList ""Illegal input.\n"" Compound Decl j int = n + n d FuncCall printf ExprList ""%d\n"" n End End Return 0 End",0
992,992,,1
952,952,,1
527,527,"FileAST Decl mod int + 1e9 7 Decl maxn int 1e7 Decl ArrayDecl str char maxn Decl n int Decl L int Decl ArrayDecl p int maxn Decl ArrayDecl s char maxn Decl ArrayDecl ArrayDecl data int 2000100 5 Decl FuncDecl init void Decl FuncDecl manacher void Decl FuncDecl ParamList Decl op int Decl l int Decl r int Decl num int add void FuncDef Decl FuncDecl main int Compound While ~ FuncCall scanf ExprList ""%s"" s Compound FuncCall init FuncCall manacher For DeclList Decl i int 1 < i l ++ i Compound FuncCall add ExprList 3 i - + i ArrayRef p i 1 i FuncCall add ExprList 4 i - + i ArrayRef p i 1 1 End Decl ans int 0 FuncCall printf ExprList ""%d\n"" ans End Return 0 End",1
321,321,FileAST Decl k int Decl m int Decl n int Decl ArrayDecl ArrayDecl arr int 105 105 FuncDef Decl FuncDecl main int Compound >> cin k While -- k Compound >> >> cin m n Decl sum int 0 For DeclList Decl i int 0 < i m ++ i Compound For DeclList Decl j int 0 < j n ++ j Compound >> cin ArrayRef ArrayRef arr i j If || || || == i 0 == i - m 1 == j 0 == j - n 1 += sum ArrayRef ArrayRef arr i j End End << << cout sum endl End Return 0 End,0
1012,1012,,1
137,137,FileAST FuncDef Decl FuncDecl main int Compound Decl x int Decl y int Decl i int Decl l2x int Decl l2y int Decl ArrayDecl xx int 10 Decl ArrayDecl yy int 10 >> >> cin x y = l2x / FuncCall log ExprList x FuncCall log ExprList 2 = l2y / FuncCall log ExprList y FuncCall log ExprList 2 If == x 8 = l2x 3 If == y 8 = l2y 3 = ArrayRef xx l2x - x FuncCall pow ExprList 2 l2x = ArrayRef yy l2y - y FuncCall pow ExprList 2 l2y For = i - l2x 1 >= i 0 -- i = ArrayRef xx i / ArrayRef xx + i 1 2 = i l2x If > l2x l2y = i l2y Return 0 End,0
550,550,"FileAST FuncDef Decl FuncDecl main int Compound Decl t int Decl a int Decl n int Decl i int Decl sum1 int Decl sum2 int Decl ans int FuncCall freopen ExprList ""hdoj2509.txt"" ""r"" stdin FuncCall freopen ExprList ""hdoj2509ans.txt"" ""w"" stdout While != FuncCall scanf ExprList ""%d"" & n eof Compound = sum1 = sum2 = ans 0 For = i 0 < i n ++ i Compound FuncCall scanf ExprList ""%d"" & a If >= a 2 ++ sum1 ++ sum2 ^= ans a End If || && != ans 0 != sum1 0 && == ans 0 == sum1 0 FuncCall printf ExprList ""Yes\n"" If || && == ans 0 >= sum1 2 && && != ans 0 != % sum2 2 0 == sum1 0 FuncCall printf ExprList ""No\n"" End Return 0 End",1
275,275,FileAST FuncDef Decl FuncDecl ParamList Decl a int Decl ArrayDecl b int find int Compound Decl i int Decl ArrayDecl j int 100 Decl k int Decl l int a = ArrayRef j 0 1 For = i 1 < i 100 ++ i = ArrayRef j i * 2 ArrayRef j - i 1 = k + i 1 = ArrayRef b 0 l Return k End Decl FuncDecl main int,0
232,232,"FileAST Decl ArrayDecl x int 15 Decl ArrayDecl num int 15 InitList 0 Decl sum int Decl n int FuncDef Decl FuncDecl ParamList Decl k int check int Compound For DeclList Decl i int 1 < i k ++ i Compound If || == FuncCall abs ExprList - k i FuncCall abs ExprList - ArrayRef x k ArrayRef x i == ArrayRef x k ArrayRef x i Return 0 End Return 1 End Decl FuncDecl ParamList Decl a int dfs void FuncDef Decl FuncDecl main int Compound Decl N int For DeclList Decl i int 0 <= i 10 ++ i Compound = n i = sum 0 FuncCall dfs ExprList 1 = ArrayRef num i sum End While && ~ FuncCall scanf ExprList ""%d"" & n n Compound FuncCall printf ExprList ""%d\n"" ArrayRef num n End Return 0 End",0
477,477,"FileAST FuncDef Decl FuncDecl main int Compound Decl t int Decl cas int 1 Decl ArrayDecl str char 500 Decl ans int Decl dep int FuncCall scanf ExprList ""%d"" & t FuncCall getchar While -- t Compound FuncCall gets ExprList str = ans 0 = dep 0 Decl res int 1 For DeclList Decl i int 0 < i ans ++ i Compound *= res 2 End FuncCall printf ExprList ""%d %d\n"" ++ cas res End Return 0 End",0
718,718,"FileAST FuncDef Decl FuncDecl main int Compound Decl y int Decl m int Decl x int Decl i int Decl sum int 0 FuncCall scanf ExprList ""%d%d%d"" & y & m & x If || && == % y 4 0 != % y 100 0 == % y 400 0 Compound Decl ArrayDecl d int 13 InitList 0 31 29 31 30 31 30 31 31 30 31 30 31 For = i 0 < i m ++ i Compound = sum + sum ArrayRef d i End FuncCall printf ExprList ""%d"" + sum x End Compound Decl ArrayDecl d int 13 InitList 0 31 28 31 30 31 30 31 31 30 31 30 31 For = i 0 < i m ++ i Compound = sum + sum ArrayRef d i End FuncCall printf ExprList ""%d"" + sum x End Return 0 End",1
32,32,FileAST FuncDef Decl FuncDecl main int Compound Decl n int Decl ArrayDecl ArrayDecl a int 2 100 Decl ArrayDecl num int 100 >> cin n For DeclList Decl i int 0 < i n ++ i Compound << << cout ArrayRef num i endl End Return 0 End,0
778,778,,1
246,246,"FileAST FuncDef Decl FuncDecl main int Compound Decl n int Decl sum int Decl ArrayDecl s int 4 Decl ArrayDecl a int 1234 While >> cin n Compound For DeclList Decl i int 0 < i 4 ++ i Compound >> cin ArrayRef s i End = sum 0 FuncCall sort ExprList a + a n If <= ArrayRef s 3 0 Compound << << << << cout ""YES"" "" "" sum endl End << << cout ""NO"" endl End Return 0 End",0
919,919,,1
746,746,,1
641,641,FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl m int Decl n int Decl i int Decl j int Decl p int Decl total int Decl ArrayDecl ArrayDecl a int 110 110 InitList 0 >> cin k For = p 1 <= p k ++ p Compound >> >> cin m n = total 0 For = i 1 <= i m ++ i For = j 1 <= j n ++ j Compound >> cin * + * + a i j If || == i 1 == i m = total + total * + * + a i j End For = i 2 < i m ++ i = total + + total * + * + a i 1 * + * + a i n << << cout total endl End Return 0 End,1
406,406,"FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl n int Decl m int Decl i int Decl j int Decl ArrayDecl ArrayDecl a int 100 100 Decl s int Decl ArrayDecl q int 100 Decl h1 int Decl h2 int Decl t int Decl l1 int Decl l2 int Decl c int FuncCall scanf ExprList ""%d"" & k For = i 0 < i k ++ i Compound FuncCall printf ExprList ""%d\n"" ArrayRef q i End Return 0 End",0
476,476,FileAST FuncDef Decl FuncDecl main int Compound Decl n int Decl k int Decl i int Decl j int Decl x int Decl y int Decl t int Decl ArrayDecl ans int 1000 InitList 0 >> cin n For = k 1 <= k n ++ k Compound >> >> cin x y For = i 1 <= i x ++ i For = j 1 <= j y ++ j Compound >> cin t If || || || == i 1 == i x == j 1 == j y += ArrayRef ans k t End End Return 0 End,0
991,991,,1
626,626,"FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl m int Decl n int Decl i int Decl ArrayDecl a int 10005 Decl s int FuncCall scanf ExprList ""%d"" & m While -- m Compound = s 0 FuncCall scanf ExprList ""%d"" & n For = i 0 < i n ++ i FuncCall scanf ExprList ""%d"" & ArrayRef a i FuncCall sort ExprList a + a n = k / n 2 FuncCall printf ExprList ""%d\n"" s End End",1
738,738,,1
264,264,"FileAST Decl ArrayDecl ArrayDecl a int 100 100 FuncDef Decl FuncDecl main int Compound Decl k int Decl m int Decl n int Decl sum int Decl i int Decl j int FuncCall scanf ExprList ""%d"" & k While -- k Compound FuncCall memset ExprList a 0 sizeof a FuncCall scanf ExprList ""%d%d"" & m & n = sum 0 For = i 0 < i m ++ i For = j 0 < j n ++ j Compound FuncCall scanf ExprList ""%d"" & ArrayRef ArrayRef a i j If || || || == i 0 == i - m 1 == j 0 == j - n 1 += sum ArrayRef ArrayRef a i j End FuncCall printf ExprList ""%d\n"" sum End Return 0 End",0
982,982,,1
214,214,FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl a int 1001 Decl ArrayDecl b int 1001 Decl i int Decl j int Decl m int Decl n int Decl x int Decl y int Decl flag int >> >> cin x y = flag 0 For = i 0 <= i y ++ i = ArrayRef b i 0 = i 0 = j 0 While > x 0 Compound = ArrayRef a i x = x / x 2 ++ i End While > y 0 Compound = ArrayRef b j y = y / y 2 ++ j End Label Return 0 End,0
168,168,"FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl year int 6 Decl ArrayDecl month int 6 Decl ArrayDecl day int 6 Decl ArrayDecl s int 6 InitList 0 Decl i int 1 Decl n int Decl ArrayDecl m int 13 InitList 0 31 28 31 30 31 30 31 31 30 31 30 31 = n 1 While <= n 5 Compound FuncCall scanf ExprList ""%d %d %d"" & ArrayRef year n & ArrayRef month n & ArrayRef day n If || && == % ArrayRef year n 4 0 != % ArrayRef year n 100 0 == % ArrayRef year n 400 0 = ArrayRef m 2 29 = ArrayRef m 2 28 While < i ArrayRef month n Compound = ArrayRef s n + ArrayRef s n ArrayRef m i = i + i 1 End = ArrayRef s n + ArrayRef s n ArrayRef day n = n + n 1 = i 1 End For = n 1 <= n 5 = n + n 1 FuncCall printf ExprList ""%d\n"" ArrayRef s n Return 0 End",0
838,838,,1
851,851,,1
670,670,"FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl ArrayDecl sz int 100 100 Decl m int Decl n int Decl k int Decl i int Decl j int Decl q int Decl s int FuncCall scanf ExprList ""%d"" & k Decl PtrDecl sum int Cast Typename PtrDecl TypeDecl int FuncCall malloc ExprList * sizeof Typename TypeDecl int k = s 0 For = q 0 < q k ++ q Compound = ArrayRef sum q 0 FuncCall scanf ExprList ""%d%d"" & m & n For = i 0 < i m ++ i Compound For = j 0 < j n ++ j Compound FuncCall scanf ExprList ""%d"" & ArrayRef ArrayRef sz i j End End For = i 0 < i n ++ i Compound += ArrayRef sum q ArrayRef ArrayRef sz 0 i End For = i 0 < i m ++ i Compound += ArrayRef sum q ArrayRef ArrayRef sz i 0 End For = i 0 < i n ++ i Compound += ArrayRef sum q ArrayRef ArrayRef sz - m 1 i End For = i 0 < i m ++ i Compound += ArrayRef sum q ArrayRef ArrayRef sz i - n 1 End -= ArrayRef sum q ArrayRef ArrayRef sz 0 0 -= ArrayRef sum q ArrayRef ArrayRef sz 0 - n 1 -= ArrayRef sum q ArrayRef ArrayRef sz - m 1 0 -= ArrayRef sum q ArrayRef ArrayRef sz - m 1 - n 1 FuncCall printf ExprList ""%d\n"" ArrayRef sum q End FuncCall free ExprList sum Return 0 End",1
711,711,FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl a int 11 Decl ArrayDecl b int 11 Decl ArrayDecl sum int 11 InitList 0 1 3 7 15 31 63 127 255 511 1023 Decl x int Decl y int Decl i int Decl x0 int Decl y0 int >> >> cin x y = ArrayRef a x0 x = ArrayRef b y0 y For = i - x0 1 > i 0 -- i Compound = ArrayRef a i / ArrayRef a + i 1 2 End If >= x0 y0 Compound End Compound End Return 0 End,1
618,618,FileAST FuncDef Decl FuncDecl main int Compound Decl year int Decl month int Decl day int Decl total int 0 Decl i int Decl ArrayDecl ArrayDecl mon int 13 2 InitList InitList 0 31 28 31 30 31 30 31 31 30 31 30 31 InitList 0 31 29 31 30 31 30 31 31 30 31 30 31 >> >> >> cin year month day If || && == % year 4 0 != % year 100 0 == % year 400 0 Compound For = i 1 < i month ++ i += total ArrayRef ArrayRef mon 1 i += total day End Compound += total day End << << cout total endl Return 0 End,1
905,905,,1
139,139,"FileAST FuncDef Decl FuncDecl main int Compound Decl x int Decl y int Decl ArrayDecl a int 40 InitList 0 Decl ArrayDecl b int 40 InitList 0 Decl x1 int Decl y1 int Decl i int Decl j int FuncCall scanf ExprList ""%d%d"" & x & y If == x y Compound FuncCall printf ExprList ""%d\n"" x Return 0 End If || == x 1 == y 1 Compound FuncCall printf ExprList ""1\n"" Return 0 End = x1 FuncCall sqrt ExprList x = y1 FuncCall sqrt ExprList y = ArrayRef a 0 x = ArrayRef b 0 y For = i 1 <= i x1 ++ i Compound = ArrayRef a i / ArrayRef a - i 1 2 End End",0
768,768,,1
953,953,,1
769,769,,1
897,897,,1
418,418,FileAST FuncDef Decl FuncDecl main int Compound Decl t int >> cin t While -- t Compound Decl n int >> cin n Decl ArrayDecl a int n For DeclList Decl i int 1 < i n ++ i = ArrayRef a i 1 Decl sum int 0 << << cout sum endl End Return 0 End,0
212,212,"FileAST FuncDef Decl FuncDecl main int Compound Decl k int FuncCall scanf ExprList ""%d"" & k Decl s1 int 0 Decl s2 int 0 Decl s3 int 0 Decl s4 int 0 Decl s int 0 Decl r int 0 Decl c int 0 Decl ArrayDecl ArrayDecl jz int 100 100 Decl m int Decl n int Decl i int 1 While <= i k Compound FuncCall scanf ExprList ""%d %d"" & m & n = r 0 = c 0 = r - m 1 = c 0 = r 0 = c 0 For = r 0 < r m ++ r Compound += s3 ArrayRef ArrayRef jz r c End = r 0 = c - n 1 = s - - - - + + + s1 s2 s3 s4 ArrayRef ArrayRef jz 0 0 ArrayRef ArrayRef jz 0 - n 1 ArrayRef ArrayRef jz - m 1 0 ArrayRef ArrayRef jz - m 1 - n 1 FuncCall printf ExprList ""%d"" s = s1 0 = s2 0 = s3 0 = s4 0 = s 0 If != i k Compound FuncCall printf ExprList ""\n"" End ++ i End Return 0 End",0
632,632,FileAST FuncDef Decl FuncDecl main int Compound Decl k int Decl m int Decl n int >> cin k While > k 0 Compound >> >> cin m n Decl ArrayDecl ArrayDecl num int 110 110 InitList 0 Decl PtrDecl ArrayDecl p int 110 Decl sum int 0 Decl i int Decl j int = p num = p num For = i 1 < i m ++ i = sum + sum * - + * + p i n 1 << << cout sum endl -- k End Return 0 End,1
649,649,"FileAST Decl ArrayDecl ltree Struct Decl l int Decl r int Decl dis int Decl val int 100005 Decl ArrayDecl par int 100005 Decl FuncDecl ParamList Decl x int getfather int Decl FuncDecl ParamList Decl x int Decl y int merge int Decl FuncDecl ParamList Decl x int pop int FuncDef Decl FuncDecl main int Compound Decl n int Decl m int While >> cin n Compound For DeclList Decl i int 1 <= i n ++ i Compound FuncCall scanf ExprList ""%d"" & StructRef ArrayRef ltree i val = StructRef ArrayRef ltree i l 0 = StructRef ArrayRef ltree i r 0 = StructRef ArrayRef ltree i dis 0 End FuncCall scanf ExprList ""%d"" & m Decl a int Decl b int Decl fa int Decl fb int Decl l int Decl r int While -- m Compound FuncCall scanf ExprList ""%d%d"" & a & b = fa FuncCall getfather ExprList a = fb FuncCall getfather ExprList b If == fa fb FuncCall puts ExprList ""-1"" Compound /= StructRef ArrayRef ltree fa val 2 /= StructRef ArrayRef ltree fb val 2 ExprList = l FuncCall pop ExprList fa = r FuncCall pop ExprList fb = l FuncCall merge ExprList l fa = r FuncCall merge ExprList r fb = l FuncCall merge ExprList l r FuncCall printf ExprList ""%d\n"" StructRef ArrayRef ltree l val End End End Return 0 End",1
90,90,"FileAST Decl MAXN int 1005 Decl n int Decl m int Decl ArrayDecl ArrayDecl dp int maxn maxn Decl ArrayDecl s1 char maxn Decl ArrayDecl s2 char maxn FuncDef Decl FuncDecl main int Compound While == FuncCall scanf ExprList ""%d%s"" & n s1 2 Compound FuncCall scanf ExprList ""%d%s"" & m s2 For DeclList Decl i int 0 <= i n ++ i = ArrayRef ArrayRef dp i 0 i FuncCall printf ExprList ""%d\n"" ArrayRef ArrayRef dp n m End End",0
809,809,,1
424,424,FileAST FuncDef Decl FuncDecl ParamList Decl n int f int Compound Decl i int Decl k int 1 For = i 1 <= i n ++ i *= k i Return k End Decl FuncDecl main int,0
1006,1006,,1
509,509,"FileAST Typedef LL long FuncDef Decl FuncDecl main int Compound Decl n int Decl i int Decl ArrayDecl s int 60 InitList 0 1 2 3 4 While && ~ FuncCall scanf ExprList ""%d"" & n n Compound If > n 4 For = i 5 <= i n ++ i Compound = ArrayRef s i + ArrayRef s - i 1 ArrayRef s - i 3 End FuncCall printf ExprList ""%d\n"" ArrayRef s n End Return 0 End",0
248,248,FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl ArrayDecl a int 101 101 Decl k int Decl m int Decl n int Decl sum int Decl i int Decl j int Decl l int >> cin k For = i 0 < i k ++ i Compound = sum 0 >> >> cin m n For = j 0 < j m ++ j For = l 0 < l n ++ l Compound >> cin * + * + a j l If || || || == j 0 == l 0 == j - m 1 == l - n 1 += sum * + * + a j l End << << cout sum endl End Return 0 End,0
705,705,FileAST FuncDef Decl FuncDecl main int Compound Decl year int Decl month int Decl day int Decl daynum int 0 Decl i int >> >> >> cin year month day Decl ArrayDecl month1 int 12 InitList 31 28 31 30 31 30 31 31 30 31 30 31 Decl ArrayDecl month2 int 12 InitList 31 29 31 30 31 30 31 31 30 31 30 31 Decl judgeleap int If || && == % year 4 0 != % year 100 0 == % year 400 0 Compound For = i 0 < i - month 1 ++ i Compound += daynum ArrayRef month2 i End End Compound End = daynum + daynum day << cout daynum Return 0 End,1
507,507,"FileAST Decl MAXN int 30005 Decl ArrayDecl fa int maxn Decl ArrayDecl num int maxn Decl FuncDecl ParamList Decl x int findset int Decl FuncDecl ParamList Decl u int Decl v int bind void FuncDef Decl FuncDecl main int Compound Decl n int Decl m int Decl t int Decl u int Decl v int While ExprList FuncCall scanf ExprList ""%d%d"" & n & m + n m Compound For DeclList Decl i int 0 <= i n ++ i Compound = ArrayRef fa i - 1 = ArrayRef num i 1 End FuncCall printf ExprList ""%d\n"" ArrayRef num FuncCall findset ExprList 0 End End",0
758,758,,1
322,322,FileAST FuncDef Decl FuncDecl main int Compound Decl year int Decl month int Decl date int Decl day int 0 >> >> >> cin year month date If || == % year 400 0 && == % year 4 0 != % year 100 0 Compound Decl ArrayDecl a int 13 InitList 0 31 29 31 30 31 30 31 31 30 31 30 31 += day date End Compound Decl ArrayDecl b int 13 InitList 0 31 28 31 30 31 30 31 31 30 31 30 31 For DeclList Decl i int 1 <= i - month 1 ++ i += day ArrayRef b i += day date End << << cout day endl Return 0 End,0
257,257,FileAST Decl FuncDecl ParamList Decl x int len int FuncDef Decl FuncDecl ParamList Decl x int Decl y int ch int Compound Decl i int Decl n int = n FuncCall len ExprList x For = i 1 <= i - n y ++ i Compound = x / - x % x 2 2 End Return x End Decl FuncDecl main int,0
167,167,"FileAST FuncDef Decl FuncDecl main int Compound Decl ArrayDecl ArrayDecl a int 100 100 Decl ArrayDecl b int 100 Decl m int Decl j int Decl r int Decl n int Decl k int Decl p int FuncCall scanf ExprList ""%d"" & p For = m 0 < m p ++ m Compound FuncCall scanf ExprList ""%d %d"" & n & k For = j 0 < j n ++ j Compound For = r 0 < r k ++ r Compound FuncCall scanf ExprList ""%d"" & ArrayRef ArrayRef a j r End End = ArrayRef b m 0 For = j 0 < j 1 ++ j Compound For = r 0 < r k ++ r Compound = ArrayRef b m + ArrayRef b m ArrayRef ArrayRef a j r End End For = j - n 1 > j - n 2 -- j Compound For = r 0 < r k ++ r Compound = ArrayRef b m + ArrayRef b m ArrayRef ArrayRef a j r End End For = r 0 < r 1 ++ r Compound For = j 1 < j - n 1 ++ j Compound = ArrayRef b m + ArrayRef b m ArrayRef ArrayRef a j r End End For = r - k 1 > r - k 2 -- r Compound For = j 1 < j - n 1 ++ j Compound = ArrayRef b m + ArrayRef b m ArrayRef ArrayRef a j r End End End Return 0 End",0
12,12,FileAST Decl FuncDecl ParamList Decl y int leap int FuncDef Decl FuncDecl ParamList Decl y int Decl d int Decl r int days int Compound Decl ArrayDecl a int 13 InitList 0 0 31 28 31 30 31 30 31 31 30 31 30 If FuncCall leap ExprList y = ArrayRef a 3 29 Decl ans int 0 For DeclList Decl i int 1 <= i d ++ i += ans ArrayRef a i Return + ans r End Decl FuncDecl main int,0
293,293,"FileAST Typedef LL long FuncDef Decl FuncDecl main int Compound Decl t int Decl n int Decl m int Decl temp int Decl flag int Decl ArrayDecl a int 35 Decl ArrayDecl b long 35 Decl ans long = ArrayRef b 0 0 = ArrayRef b 1 10000 FuncCall scanf ExprList ""%d"" & t While -- t Compound = ans 0 = flag 0 FuncCall scanf ExprList ""%d%d"" & m & n If == flag 1 FuncCall printf ExprList ""%lld RMB\n"" ans Compound For DeclList Decl i int 0 <= i - n m ++ i += ans ArrayRef b i FuncCall printf ExprList ""%lld RMB\n"" ans End End Return 0 End",0
